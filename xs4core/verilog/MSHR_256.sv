// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module MSHR_256(
  input         clock,
  input         reset,
  input  [3:0]  io_id,
  input         io_enable,
  input         io_alloc_valid,
  input  [2:0]  io_alloc_bits_channel,
  input  [2:0]  io_alloc_bits_opcode,
  input  [2:0]  io_alloc_bits_param,
  input  [2:0]  io_alloc_bits_size,
  input  [12:0] io_alloc_bits_source,
  input  [11:0] io_alloc_bits_set,
  input  [15:0] io_alloc_bits_tag,
  input  [5:0]  io_alloc_bits_off,
  input  [31:0] io_alloc_bits_mask,
  input  [3:0]  io_alloc_bits_bufIdx,
  input         io_alloc_bits_needHint,
  input         io_alloc_bits_isPrefetch,
  input         io_alloc_bits_isBop,
  input         io_alloc_bits_preferCache,
  input         io_alloc_bits_dirty,
  input         io_alloc_bits_fromProbeHelper,
  input         io_alloc_bits_fromCmoHelper,
  input         io_alloc_bits_needProbeAckData,
  input  [3:0]  io_alloc_bits_reqSource,
  output        io_status_valid,
  output [11:0] io_status_bits_set,
  output [15:0] io_status_bits_tag,
  output [3:0]  io_status_bits_way,
  output [3:0]  io_status_bits_way_reg,
  output        io_status_bits_nestB,
  output        io_status_bits_nestC,
  output        io_status_bits_will_grant_data,
  output        io_status_bits_will_save_data,
  output        io_status_bits_will_free,
  input         io_resps_sink_c_valid,
  input         io_resps_sink_c_bits_hasData,
  input  [2:0]  io_resps_sink_c_bits_param,
  input  [12:0] io_resps_sink_c_bits_source,
  input         io_resps_sink_c_bits_last,
  input  [3:0]  io_resps_sink_c_bits_bufIdx,
  input         io_resps_sink_d_valid,
  input  [2:0]  io_resps_sink_d_bits_opcode,
  input  [2:0]  io_resps_sink_d_bits_param,
  input  [2:0]  io_resps_sink_d_bits_sink,
  input         io_resps_sink_d_bits_last,
  input         io_resps_sink_d_bits_denied,
  input  [3:0]  io_resps_sink_d_bits_bufIdx,
  input         io_resps_sink_e_valid,
  input         io_resps_source_d_valid,
  input         io_resps_sink_c_ack_valid,
  input  [11:0] io_nestedwb_set,
  input  [15:0] io_nestedwb_tag,
  input         io_nestedwb_b_toN,
  input         io_nestedwb_b_toB,
  input         io_nestedwb_b_clr_dirty,
  input         io_nestedwb_b_set_dirty,
  input         io_nestedwb_c_set_dirty,
  input         io_nestedwb_c_set_hit,
  input         io_nestedwb_clients_0_isToN,
  input         io_nestedwb_clients_1_isToN,
  input         io_nestedwb_clients_2_isToN,
  input         io_nestedwb_clients_3_isToN,
  output        io_ecc_valid,
  output [7:0]  io_ecc_bits_errCode,
  output [63:0] io_ecc_bits_addr,
  input         io_tasks_sink_a_ready,
  output        io_tasks_sink_a_valid,
  output [12:0] io_tasks_sink_a_bits_sourceId,
  output [11:0] io_tasks_sink_a_bits_set,
  output [15:0] io_tasks_sink_a_bits_tag,
  output [2:0]  io_tasks_sink_a_bits_size,
  output [5:0]  io_tasks_sink_a_bits_off,
  input         io_tasks_source_b_ready,
  output        io_tasks_source_b_valid,
  output [11:0] io_tasks_source_b_bits_set,
  output [15:0] io_tasks_source_b_bits_tag,
  output [2:0]  io_tasks_source_b_bits_param,
  output [3:0]  io_tasks_source_b_bits_clients,
  output        io_tasks_source_b_bits_needData,
  input         io_tasks_sink_c_ready,
  output        io_tasks_sink_c_valid,
  output [12:0] io_tasks_sink_c_bits_sourceId,
  output [11:0] io_tasks_sink_c_bits_set,
  output [15:0] io_tasks_sink_c_bits_tag,
  output [2:0]  io_tasks_sink_c_bits_size,
  output [3:0]  io_tasks_sink_c_bits_way,
  output [5:0]  io_tasks_sink_c_bits_off,
  output [3:0]  io_tasks_sink_c_bits_bufIdx,
  output [2:0]  io_tasks_sink_c_bits_opcode,
  output [2:0]  io_tasks_sink_c_bits_param,
  output [3:0]  io_tasks_sink_c_bits_source,
  output        io_tasks_sink_c_bits_save,
  output        io_tasks_sink_c_bits_drop,
  output        io_tasks_sink_c_bits_release,
  output        io_tasks_sink_c_bits_dirty,
  input         io_tasks_source_d_ready,
  output        io_tasks_source_d_valid,
  output [12:0] io_tasks_source_d_bits_sourceId,
  output [11:0] io_tasks_source_d_bits_set,
  output [15:0] io_tasks_source_d_bits_tag,
  output [2:0]  io_tasks_source_d_bits_channel,
  output [2:0]  io_tasks_source_d_bits_opcode,
  output [2:0]  io_tasks_source_d_bits_param,
  output [2:0]  io_tasks_source_d_bits_size,
  output [3:0]  io_tasks_source_d_bits_way,
  output [5:0]  io_tasks_source_d_bits_off,
  output        io_tasks_source_d_bits_useBypass,
  output [3:0]  io_tasks_source_d_bits_bufIdx,
  output        io_tasks_source_d_bits_denied,
  output [3:0]  io_tasks_source_d_bits_sinkId,
  output        io_tasks_source_d_bits_bypassPut,
  output        io_tasks_source_d_bits_dirty,
  output        io_tasks_source_d_bits_isHit,
  input         io_tasks_source_a_ready,
  output        io_tasks_source_a_valid,
  output [15:0] io_tasks_source_a_bits_tag,
  output [11:0] io_tasks_source_a_bits_set,
  output [5:0]  io_tasks_source_a_bits_off,
  output [31:0] io_tasks_source_a_bits_mask,
  output [2:0]  io_tasks_source_a_bits_opcode,
  output [2:0]  io_tasks_source_a_bits_param,
  output [3:0]  io_tasks_source_a_bits_source,
  output [3:0]  io_tasks_source_a_bits_bufIdx,
  output [2:0]  io_tasks_source_a_bits_size,
  output        io_tasks_source_a_bits_needData,
  output        io_tasks_source_a_bits_putData,
  output [3:0]  io_tasks_source_a_bits_reqSource,
  input         io_tasks_source_c_ready,
  output        io_tasks_source_c_valid,
  output [2:0]  io_tasks_source_c_bits_opcode,
  output [15:0] io_tasks_source_c_bits_tag,
  output [11:0] io_tasks_source_c_bits_set,
  output [2:0]  io_tasks_source_c_bits_param,
  output [3:0]  io_tasks_source_c_bits_source,
  output [3:0]  io_tasks_source_c_bits_way,
  output        io_tasks_source_c_bits_dirty,
  input         io_tasks_source_e_ready,
  output        io_tasks_source_e_valid,
  output [2:0]  io_tasks_source_e_bits_sink,
  input         io_tasks_prefetch_train_ready,
  output        io_tasks_prefetch_train_valid,
  output [17:0] io_tasks_prefetch_train_bits_tag,
  output [11:0] io_tasks_prefetch_train_bits_set,
  output        io_tasks_prefetch_train_bits_needT,
  output [12:0] io_tasks_prefetch_train_bits_source,
  input         io_tasks_prefetch_resp_ready,
  output        io_tasks_prefetch_resp_valid,
  output [17:0] io_tasks_prefetch_resp_bits_tag,
  output [11:0] io_tasks_prefetch_resp_bits_set,
  input         io_tasks_dir_write_ready,
  output        io_tasks_dir_write_valid,
  output [11:0] io_tasks_dir_write_bits_set,
  output [3:0]  io_tasks_dir_write_bits_way,
  output        io_tasks_dir_write_bits_data_dirty,
  output [1:0]  io_tasks_dir_write_bits_data_state,
  output [1:0]  io_tasks_dir_write_bits_data_clientStates_0,
  output [1:0]  io_tasks_dir_write_bits_data_clientStates_1,
  output [1:0]  io_tasks_dir_write_bits_data_clientStates_2,
  output [1:0]  io_tasks_dir_write_bits_data_clientStates_3,
  output        io_tasks_dir_write_bits_data_prefetch,
  input         io_tasks_tag_write_ready,
  output        io_tasks_tag_write_valid,
  output [11:0] io_tasks_tag_write_bits_set,
  output [3:0]  io_tasks_tag_write_bits_way,
  output [15:0] io_tasks_tag_write_bits_tag,
  input         io_tasks_client_dir_write_ready,
  output        io_tasks_client_dir_write_valid,
  output [11:0] io_tasks_client_dir_write_bits_set,
  output [3:0]  io_tasks_client_dir_write_bits_way,
  output [1:0]  io_tasks_client_dir_write_bits_data_0_state,
  output [1:0]  io_tasks_client_dir_write_bits_data_1_state,
  output [1:0]  io_tasks_client_dir_write_bits_data_2_state,
  output [1:0]  io_tasks_client_dir_write_bits_data_3_state,
  input         io_tasks_client_tag_write_ready,
  output        io_tasks_client_tag_write_valid,
  output [11:0] io_tasks_client_tag_write_bits_set,
  output [3:0]  io_tasks_client_tag_write_bits_way,
  output [15:0] io_tasks_client_tag_write_bits_tag,
  input         io_dirResult_valid,
  input         io_dirResult_bits_self_dirty,
  input  [1:0]  io_dirResult_bits_self_state,
  input  [1:0]  io_dirResult_bits_self_clientStates_0,
  input  [1:0]  io_dirResult_bits_self_clientStates_1,
  input  [1:0]  io_dirResult_bits_self_clientStates_2,
  input  [1:0]  io_dirResult_bits_self_clientStates_3,
  input         io_dirResult_bits_self_prefetch,
  input         io_dirResult_bits_self_hit,
  input  [3:0]  io_dirResult_bits_self_way,
  input  [15:0] io_dirResult_bits_self_tag,
  input         io_dirResult_bits_self_error,
  input  [1:0]  io_dirResult_bits_clients_states_0_state,
  input         io_dirResult_bits_clients_states_0_hit,
  input  [1:0]  io_dirResult_bits_clients_states_1_state,
  input         io_dirResult_bits_clients_states_1_hit,
  input  [1:0]  io_dirResult_bits_clients_states_2_state,
  input         io_dirResult_bits_clients_states_2_hit,
  input  [1:0]  io_dirResult_bits_clients_states_3_state,
  input         io_dirResult_bits_clients_states_3_hit,
  input  [15:0] io_dirResult_bits_clients_tag,
  input  [3:0]  io_dirResult_bits_clients_way,
  input         io_dirResult_bits_clients_error,
  input  [11:0] io_c_status_set,
  input  [15:0] io_c_status_tag,
  input  [3:0]  io_c_status_way,
  input         io_c_status_nestedReleaseData,
  output        io_c_status_releaseThrough,
  input         io_c_status_metaValid,
  input         io_c_status_reqDirty,
  input  [11:0] io_b_status_set,
  input  [15:0] io_b_status_tag,
  input  [3:0]  io_b_status_way,
  input         io_b_status_nestedProbeAckData,
  input         io_b_status_probeHelperFinish,
  output        io_b_status_probeAckDataThrough,
  input         io_releaseThrough,
  input         io_probeAckDataThrough,
  output        io_is_nestedReleaseData,
  output        io_is_nestedProbeAckData,
  output        io_probeHelperFinish,
  output        io_metaValid,
  output        io_reqDirty
);

  wire            nestC_saveDirty;
  wire            nestC_save;
  wire [2:0]      client_probeack_param_vec_3;
  wire [2:0]      client_probeack_param_vec_2;
  wire [2:0]      client_probeack_param_vec_1;
  wire [2:0]      client_probeack_param_vec_0;
  wire            nested_c_hit;
  reg  [2:0]      req_channel;
  reg  [2:0]      req_opcode;
  reg  [2:0]      req_param;
  reg  [2:0]      req_size;
  reg  [12:0]     req_source;
  reg  [11:0]     req_set;
  reg  [15:0]     req_tag;
  reg  [5:0]      req_off;
  reg  [31:0]     req_mask;
  reg  [3:0]      req_bufIdx;
  reg             req_needHint;
  reg             req_isPrefetch;
  reg             req_isBop;
  reg             req_preferCache;
  reg             req_dirty;
  reg             req_fromProbeHelper;
  reg             req_fromCmoHelper;
  reg             req_needProbeAckData;
  reg  [3:0]      req_reqSource;
  reg             req_valid;
  reg  [2:0]      iam;
  reg             meta_reg_self_dirty;
  reg  [1:0]      meta_reg_self_state;
  reg  [1:0]      meta_reg_self_clientStates_0;
  reg  [1:0]      meta_reg_self_clientStates_1;
  reg  [1:0]      meta_reg_self_clientStates_2;
  reg  [1:0]      meta_reg_self_clientStates_3;
  reg             meta_reg_self_prefetch;
  reg             meta_reg_self_hit;
  reg  [3:0]      meta_reg_self_way;
  reg  [15:0]     meta_reg_self_tag;
  reg             meta_reg_self_error;
  reg  [1:0]      meta_reg_clients_states_0_state;
  reg             meta_reg_clients_states_0_hit;
  reg  [1:0]      meta_reg_clients_states_1_state;
  reg             meta_reg_clients_states_1_hit;
  reg  [1:0]      meta_reg_clients_states_2_state;
  reg             meta_reg_clients_states_2_hit;
  reg  [1:0]      meta_reg_clients_states_3_state;
  reg             meta_reg_clients_states_3_hit;
  reg  [15:0]     meta_reg_clients_tag;
  reg  [3:0]      meta_reg_clients_way;
  reg             meta_reg_clients_error;
  reg             meta_valid;
  wire            meta_self_dirty =
    io_dirResult_valid ? io_dirResult_bits_self_dirty : meta_reg_self_dirty;
  wire [1:0]      meta_self_state =
    io_dirResult_valid ? io_dirResult_bits_self_state : meta_reg_self_state;
  wire [1:0]      meta_self_clientStates_0 =
    io_dirResult_valid
      ? io_dirResult_bits_self_clientStates_0
      : meta_reg_self_clientStates_0;
  wire [1:0]      meta_self_clientStates_1 =
    io_dirResult_valid
      ? io_dirResult_bits_self_clientStates_1
      : meta_reg_self_clientStates_1;
  wire [1:0]      meta_self_clientStates_2 =
    io_dirResult_valid
      ? io_dirResult_bits_self_clientStates_2
      : meta_reg_self_clientStates_2;
  wire [1:0]      meta_self_clientStates_3 =
    io_dirResult_valid
      ? io_dirResult_bits_self_clientStates_3
      : meta_reg_self_clientStates_3;
  wire            meta_self_prefetch =
    io_dirResult_valid ? io_dirResult_bits_self_prefetch : meta_reg_self_prefetch;
  wire            meta_self_hit =
    io_dirResult_valid ? io_dirResult_bits_self_hit : meta_reg_self_hit;
  wire [3:0]      meta_self_way =
    io_dirResult_valid ? io_dirResult_bits_self_way : meta_reg_self_way;
  wire [15:0]     meta_self_tag =
    io_dirResult_valid ? io_dirResult_bits_self_tag : meta_reg_self_tag;
  wire            meta_self_error =
    io_dirResult_valid ? io_dirResult_bits_self_error : meta_reg_self_error;
  wire [1:0]      meta_clients_states_0_state =
    io_dirResult_valid
      ? io_dirResult_bits_clients_states_0_state
      : meta_reg_clients_states_0_state;
  wire            meta_clients_states_0_hit =
    io_dirResult_valid
      ? io_dirResult_bits_clients_states_0_hit
      : meta_reg_clients_states_0_hit;
  wire [1:0]      meta_clients_states_1_state =
    io_dirResult_valid
      ? io_dirResult_bits_clients_states_1_state
      : meta_reg_clients_states_1_state;
  wire            meta_clients_states_1_hit =
    io_dirResult_valid
      ? io_dirResult_bits_clients_states_1_hit
      : meta_reg_clients_states_1_hit;
  wire [1:0]      meta_clients_states_2_state =
    io_dirResult_valid
      ? io_dirResult_bits_clients_states_2_state
      : meta_reg_clients_states_2_state;
  wire            meta_clients_states_2_hit =
    io_dirResult_valid
      ? io_dirResult_bits_clients_states_2_hit
      : meta_reg_clients_states_2_hit;
  wire [1:0]      meta_clients_states_3_state =
    io_dirResult_valid
      ? io_dirResult_bits_clients_states_3_state
      : meta_reg_clients_states_3_state;
  wire            meta_clients_states_3_hit =
    io_dirResult_valid
      ? io_dirResult_bits_clients_states_3_hit
      : meta_reg_clients_states_3_hit;
  wire            _acquire_param_T_4 = req_opcode == 3'h6;
  wire            req_acquire = _acquire_param_T_4 | (&req_opcode);
  wire            _probe_clients_T_1 = req_opcode == 3'h5;
  wire            _x_probe_clients_T_12 = req_param == 3'h1;
  wire            req_needT =
    ~(req_opcode[2]) | _probe_clients_T_1 & _x_probe_clients_T_12
    | (_acquire_param_T_4 | (&req_opcode)) & (|req_param);
  reg             promoteT_safe;
  reg             gotT;
  reg             a_do_release;
  reg             a_do_probe;
  wire [3:0]      _meta_no_clients_T_4 =
    {meta_self_clientStates_0 == 2'h0,
     meta_self_clientStates_1 == 2'h0,
     meta_self_clientStates_2 == 2'h0,
     meta_self_clientStates_3 == 2'h0};
  wire            req_promoteT =
    req_acquire
    & (meta_self_hit
         ? (&_meta_no_clients_T_4) & (&meta_self_state)
         : gotT & promoteT_safe);
  reg             probe_dirty;
  reg  [3:0]      probes_done;
  wire            _new_clients_meta_3_state_T_6 = req_param == 3'h1;
  wire            _new_clients_meta_3_state_T_7 = req_param == 3'h2;
  wire            _new_clients_meta_3_state_T_9 = req_param == 3'h5;
  wire            _new_clients_meta_3_state_T_12 = req_param == 3'h4;
  wire            _new_self_dir_clientStates_1_T = iam != 3'h1;
  wire            _new_self_dir_clientStates_2_T = iam != 3'h2;
  wire            _new_self_dir_clientStates_3_T = iam != 3'h3;
  wire [3:0]      _clients_have_T_T_8 =
    {meta_clients_states_3_hit & meta_clients_states_3_state[1],
     meta_clients_states_2_hit & meta_clients_states_2_state[1],
     meta_clients_states_1_hit & meta_clients_states_1_state[1],
     meta_clients_states_0_hit & meta_clients_states_0_state[1]};
  wire [1:0]      _highest_perm_T_2 =
    meta_self_hit & ~io_probeAckDataThrough ? meta_self_state : 2'h0;
  wire [1:0]      _highest_perm_except_me_T_5 =
    meta_clients_states_0_hit ? meta_clients_states_0_state : 2'h0;
  wire [1:0]      _highest_perm_except_me_T_11 =
    meta_clients_states_1_hit ? meta_clients_states_1_state : 2'h0;
  wire [1:0]      _highest_perm_except_me_T_17 =
    meta_clients_states_2_hit ? meta_clients_states_2_state : 2'h0;
  wire [1:0]      _highest_perm_except_me_T_23 =
    meta_clients_states_3_hit ? meta_clients_states_3_state : 2'h0;
  wire [1:0]      _highest_perm_T_8 =
    _highest_perm_T_2 > _highest_perm_except_me_T_5
      ? _highest_perm_T_2
      : _highest_perm_except_me_T_5;
  wire [1:0]      _highest_perm_T_10 =
    _highest_perm_except_me_T_17 > _highest_perm_except_me_T_23
      ? _highest_perm_except_me_T_17
      : _highest_perm_except_me_T_23;
  wire [1:0]      _highest_perm_T_12 =
    _highest_perm_except_me_T_11 > _highest_perm_T_10
      ? _highest_perm_except_me_T_11
      : _highest_perm_T_10;
  wire [1:0]      highest_perm =
    _highest_perm_T_8 > _highest_perm_T_12 ? _highest_perm_T_8 : _highest_perm_T_12;
  reg  [1:0]      highest_perm_reg_reg;
  wire [1:0]      highest_perm_reg = highest_perm | highest_perm_reg_reg;
  wire            _new_clients_meta_1_state_T_5 = iam == 3'h1;
  wire            _new_clients_meta_2_state_T_5 = iam == 3'h2;
  wire            _new_clients_meta_3_state_T_5 = iam == 3'h3;
  reg             inv_self_dir;
  reg  [2:0]      client_probeack_param_vec_reg_0;
  reg  [2:0]      client_probeack_param_vec_reg_1;
  reg  [2:0]      client_probeack_param_vec_reg_2;
  reg  [2:0]      client_probeack_param_vec_reg_3;
  wire [1:0]      _replace_clients_perm_T_1 =
    meta_self_clientStates_0 > meta_self_clientStates_1
      ? meta_self_clientStates_0
      : meta_self_clientStates_1;
  wire [1:0]      _replace_clients_perm_T_3 =
    meta_self_clientStates_2 > meta_self_clientStates_3
      ? meta_self_clientStates_2
      : meta_self_clientStates_3;
  wire [1:0]      replace_clients_perm =
    _replace_clients_perm_T_1 > _replace_clients_perm_T_3
      ? _replace_clients_perm_T_1
      : _replace_clients_perm_T_3;
  wire            _io_tasks_source_d_bits_useBypass_T_1 = meta_self_state == 2'h1;
  wire [3:0]      _replace_param_T = {meta_self_state, replace_clients_perm};
  wire            _prefetch_miss_need_acquire_T_1 = highest_perm == 2'h0;
  wire [3:0]      _GEN =
    {{meta_clients_states_3_hit},
     {meta_clients_states_2_hit},
     {meta_clients_states_1_hit},
     {meta_clients_states_0_hit}};
  wire            _GEN_0 = _GEN[iam[1:0]];
  wire            prefetch_miss_need_probe_vec_0 =
    (|iam)
    & (_x_probe_clients_T_12 & meta_clients_states_0_state[1] & meta_clients_states_0_hit
       & (~meta_self_hit | ~(meta_self_state[1])) | ~(|req_param)
       & meta_clients_states_0_hit & ~meta_self_hit & ~_GEN_0);
  wire            prefetch_miss_need_probe_vec_1 =
    _new_self_dir_clientStates_1_T
    & (_x_probe_clients_T_12 & meta_clients_states_1_state[1] & meta_clients_states_1_hit
       & (~meta_self_hit | ~(meta_self_state[1])) | ~(|req_param)
       & meta_clients_states_1_hit & ~meta_self_hit & ~_GEN_0);
  wire            prefetch_miss_need_probe_vec_2 =
    _new_self_dir_clientStates_2_T
    & (_x_probe_clients_T_12 & meta_clients_states_2_state[1] & meta_clients_states_2_hit
       & (~meta_self_hit | ~(meta_self_state[1])) | ~(|req_param)
       & meta_clients_states_2_hit & ~meta_self_hit & ~_GEN_0);
  wire            prefetch_miss_need_probe_vec_3 =
    _new_self_dir_clientStates_3_T
    & (_x_probe_clients_T_12 & meta_clients_states_3_state[1] & meta_clients_states_3_hit
       & (~meta_self_hit | ~(meta_self_state[1])) | ~(|req_param)
       & meta_clients_states_3_hit & ~meta_self_hit & ~_GEN_0);
  wire [3:0]      _prefetch_miss_need_probe_T =
    {prefetch_miss_need_probe_vec_3,
     prefetch_miss_need_probe_vec_2,
     prefetch_miss_need_probe_vec_1,
     prefetch_miss_need_probe_vec_0};
  wire            prefetch_miss =
    _probe_clients_T_1
    & (((|req_param) ? ~(highest_perm[1]) : _prefetch_miss_need_acquire_T_1)
       | (|_prefetch_miss_need_probe_T));
  wire            prefetch_need_data = prefetch_miss & ~meta_self_hit;
  wire            _io_tasks_source_a_bits_param_T_1 = req_opcode == 3'h4;
  wire [3:0]      _transmit_from_other_client_T_21 =
    {(_io_tasks_source_a_bits_param_T_1 | ~(|(req_opcode[2:1]))
      | _new_self_dir_clientStates_3_T) & meta_clients_states_3_hit,
     (_io_tasks_source_a_bits_param_T_1 | ~(|(req_opcode[2:1]))
      | _new_self_dir_clientStates_2_T) & meta_clients_states_2_hit,
     (_io_tasks_source_a_bits_param_T_1 | ~(|(req_opcode[2:1]))
      | _new_self_dir_clientStates_1_T) & meta_clients_states_1_hit,
     (_io_tasks_source_a_bits_param_T_1 | ~(|(req_opcode[2:1])) | (|iam))
       & meta_clients_states_0_hit};
  reg             transmit_from_other_client_reg;
  wire            transmit_from_other_client =
    ~meta_self_hit
    & ((|_transmit_from_other_client_T_21) | transmit_from_other_client_reg)
    & (~req_isPrefetch | prefetch_need_data);
  reg             releaseThrough;
  reg             releaseDrop;
  wire            releaseSave = ~releaseThrough & ~releaseDrop;
  reg             probeAckDataThrough;
  reg             probeAckDataDrop;
  reg             probeAckDataSave;
  reg             someClientHasProbeAckData;
  reg             nested_c_hit_reg;
  wire            _new_self_meta_clientStates_3_T_21 = req_param != 3'h2;
  wire            _new_self_meta_state_T_36 = req_acquire & promoteT_safe;
  wire            _perm_after_probe_T_33 = client_probeack_param_vec_0 == 3'h4;
  wire            _perm_after_probe_T_6 =
    ~(|client_probeack_param_vec_0) | _perm_after_probe_T_33;
  wire            _GEN_1 =
    meta_reg_clients_states_0_hit & a_do_probe & _perm_after_probe_T_6;
  wire            _perm_after_probe_T_40 = client_probeack_param_vec_1 == 3'h4;
  wire            _perm_after_probe_T_13 =
    ~(|client_probeack_param_vec_1) | _perm_after_probe_T_40;
  wire            _GEN_2 =
    meta_reg_clients_states_1_hit & a_do_probe & _perm_after_probe_T_13;
  wire            _perm_after_probe_T_47 = client_probeack_param_vec_2 == 3'h4;
  wire            _perm_after_probe_T_20 =
    ~(|client_probeack_param_vec_2) | _perm_after_probe_T_47;
  wire            _GEN_3 =
    meta_reg_clients_states_2_hit & a_do_probe & _perm_after_probe_T_20;
  wire            _perm_after_probe_T_54 = client_probeack_param_vec_3 == 3'h4;
  wire            _perm_after_probe_T_27 =
    ~(|client_probeack_param_vec_3) | _perm_after_probe_T_54;
  wire            _GEN_4 =
    meta_reg_clients_states_3_hit & a_do_probe & _perm_after_probe_T_27;
  wire            _perm_after_probe_T_34 =
    ~(|client_probeack_param_vec_0) | _perm_after_probe_T_33;
  wire [1:0]      perm_after_probe_4 = {1'h0, _perm_after_probe_T_34};
  wire            _perm_after_probe_T_41 =
    ~(|client_probeack_param_vec_1) | _perm_after_probe_T_40;
  wire [1:0]      perm_after_probe_5 = {1'h0, _perm_after_probe_T_41};
  wire            _perm_after_probe_T_48 =
    ~(|client_probeack_param_vec_2) | _perm_after_probe_T_47;
  wire [1:0]      perm_after_probe_6 = {1'h0, _perm_after_probe_T_48};
  wire            _perm_after_probe_T_55 =
    ~(|client_probeack_param_vec_3) | _perm_after_probe_T_54;
  wire [1:0]      perm_after_probe_7 = {1'h0, _perm_after_probe_T_55};
  reg  [2:0]      sink;
  reg             bad_grant;
  wire            _change_self_meta_T_2 = io_nestedwb_set == req_set;
  assign nested_c_hit =
    meta_valid & ~meta_self_hit & req_channel[0] & _change_self_meta_T_2
    & io_nestedwb_c_set_hit | nested_c_hit_reg;
  reg             s_acquire;
  reg             s_probe;
  reg             s_release;
  reg             s_probeack;
  reg             s_execute;
  reg             s_grantack;
  reg             s_wbselfdir;
  reg             s_wbselftag;
  reg             s_wbclientsdir;
  reg             s_wbclientstag;
  reg             s_transferput;
  reg             s_writerelease;
  reg             s_writeprobe;
  reg             s_triggerprefetch;
  reg             s_prefetchack;
  reg             w_probeackfirst;
  reg             w_probeacklast;
  reg             w_probeack;
  reg             w_grantfirst;
  reg             w_grantlast;
  reg             w_grant;
  reg             w_releaseack;
  reg             w_grantack;
  reg             w_putwritten;
  reg             w_sinkcack;
  reg             acquire_flag;
  reg             nestC_save_flag;
  reg             nestC_saveDirty_flag;
  wire            bypassPut =
    ~(|(req_opcode[2:1])) & ~meta_self_hit
    & {meta_clients_states_0_hit,
       meta_clients_states_1_hit,
       meta_clients_states_2_hit,
       meta_clients_states_3_hit} == 4'h0;
  reg             bypassPut_latch_reg;
  wire            preferCache =
    req_preferCache & ~(io_dirResult_valid ? bypassPut : bypassPut_latch_reg);
  wire            bypassGet = _io_tasks_source_a_bits_param_T_1 & ~preferCache;
  wire            acquirePermMiss = (&req_opcode) & ~meta_self_hit;
  wire            self_ecc_err = meta_reg_self_hit & meta_reg_self_error;
  wire            _GEN_5 = io_releaseThrough & io_dirResult_valid & req_channel[2];
  wire            will_release_through =
    _GEN_5
    & {_new_self_dir_clientStates_3_T & meta_clients_states_3_hit,
       _new_self_dir_clientStates_2_T & meta_clients_states_2_hit,
       _new_self_dir_clientStates_1_T & meta_clients_states_1_hit,
       (|iam) & meta_clients_states_0_hit} == 4'h0 & req_param < 3'h3;
  wire            _GEN_6 = io_dirResult_valid & req_channel[1];
  wire            will_probeack_through =
    _GEN_6
    & ((|_clients_have_T_T_8) | req_needProbeAckData & (|highest_perm) & ~meta_self_hit);
  wire            no_wait =
    w_probeacklast & w_grantlast & w_releaseack & w_grantack & w_putwritten & w_sinkcack;
  reg             client_dir_conflict;
  reg             probe_helper_finish;
  wire            can_start = ~client_dir_conflict | probe_helper_finish;
  wire            io_tasks_source_a_valid_0 =
    io_enable & (~s_acquire | ~s_transferput) & s_release & s_probe & w_probeacklast
    & can_start;
  wire            io_tasks_source_b_valid_0 = io_enable & ~s_probe & s_release;
  wire            io_tasks_source_c_valid_0 =
    io_enable & (~s_release | ~s_probeack & s_writerelease & w_sinkcack & w_probeack);
  wire            io_tasks_source_d_valid_0 =
    io_enable & ~s_execute & can_start & w_grant & s_writeprobe & w_sinkcack
    & w_probeacklast & s_transferput;
  wire            io_tasks_source_e_valid_0 = ~s_grantack & w_grantfirst;
  wire            io_tasks_dir_write_valid_0 =
    io_enable & ~s_wbselfdir & no_wait & can_start;
  wire            io_tasks_tag_write_valid_0 =
    io_enable & ~s_wbselftag & no_wait & can_start;
  wire            io_tasks_client_dir_write_valid_0 =
    io_enable & ~s_wbclientsdir & no_wait & can_start;
  wire            io_tasks_client_tag_write_valid_0 =
    io_enable & ~s_wbclientstag & no_wait & can_start;
  wire            io_tasks_sink_c_valid_0 =
    io_enable & (~s_writerelease & (~releaseSave | s_release) | ~s_writeprobe);
  wire            io_tasks_prefetch_resp_valid_0 = ~s_prefetchack & w_grantfirst;
  wire            _io_tasks_source_d_bits_opcode_grantOp_T = req_param == 3'h2;
  wire [2:0]      io_tasks_source_a_bits_opcode_0 =
    ~s_transferput | bypassGet
    | ~(_io_tasks_source_a_bits_param_T_1 | ~(|(req_opcode[2:1])) | _probe_clients_T_1)
      ? req_opcode
      : 3'h6;
  reg  [3:0]      probe_clients;
  wire            _io_tasks_sink_c_bits_dirty_T_2 = meta_self_hit & meta_self_dirty;
  wire [3:0]      _probeack_param_T_8 =
    {highest_perm,
     highest_perm[1] & ~(|req_param)
       ? highest_perm
       : {1'h0, (|highest_perm) & req_param != 3'h2}};
  wire [2:0]      probeack_param =
    _probeack_param_T_8 == 4'h0
      ? 3'h5
      : _probeack_param_T_8 == 4'h4
          ? 3'h2
          : _probeack_param_T_8 == 4'h5
              ? 3'h4
              : _probeack_param_T_8 == 4'hC | _probeack_param_T_8 == 4'h8
                  ? 3'h1
                  : _probeack_param_T_8 == 4'hD | _probeack_param_T_8 == 4'h9
                      ? 3'h0
                      : (&_probeack_param_T_8) | _probeack_param_T_8 == 4'hA
                          ? 3'h3
                          : 3'h5;
  wire            _io_tasks_source_d_bits_denied_T =
    meta_reg_self_error | meta_reg_clients_error;
  wire            io_tasks_source_d_bits_useBypass_0 =
    (~meta_self_hit | _io_tasks_source_d_bits_useBypass_T_1 & req_needT)
    & (~probe_dirty & ~nestC_save | acquire_flag
       & io_tasks_source_a_bits_opcode_0 != 3'h7) & ~_io_tasks_source_d_bits_denied_T
    & (|(req_opcode[2:1]));
  wire [7:0][2:0] _GEN_7 =
    {{3'h4},
     {{2'h2, ~(_io_tasks_source_d_bits_opcode_grantOp_T & (&req_opcode))}},
     {3'h2},
     {3'h1},
     {3'h1},
     {3'h1},
     {3'h0},
     {3'h0}};
  wire [2:0]      io_tasks_source_d_bits_opcode_0 =
    req_channel[0] ? _GEN_7[req_opcode] : 3'h6;
  reg  [3:0]      io_tasks_sink_c_bits_bufIdx_r;
  wire [17:0]     io_tasks_prefetch_resp_bits_tag_0 = {2'h0, req_tag};
  wire            sink_c_resp_valid = io_resps_sink_c_valid & ~w_probeacklast;
  wire            _GEN_8 = req_valid & sink_c_resp_valid & io_resps_sink_c_bits_last;
  wire [1:0]      client =
    {|{~(|(io_resps_sink_c_bits_source[12:10])),
       io_resps_sink_c_bits_source[12:10] == 3'h1},
     ~(|(io_resps_sink_c_bits_source[12:10]))
       | io_resps_sink_c_bits_source[12:10] == 3'h2};
  wire            _GEN_9 = _GEN_8 & client == 2'h0;
  assign client_probeack_param_vec_0 =
    _GEN_9 ? io_resps_sink_c_bits_param : client_probeack_param_vec_reg_0;
  wire            _GEN_10 = _GEN_8 & client == 2'h1;
  assign client_probeack_param_vec_1 =
    _GEN_10 ? io_resps_sink_c_bits_param : client_probeack_param_vec_reg_1;
  wire            _GEN_11 = _GEN_8 & client == 2'h2;
  assign client_probeack_param_vec_2 =
    _GEN_11 ? io_resps_sink_c_bits_param : client_probeack_param_vec_reg_2;
  wire            _GEN_12 = _GEN_8 & (&client);
  assign client_probeack_param_vec_3 =
    _GEN_12 ? io_resps_sink_c_bits_param : client_probeack_param_vec_reg_3;
  wire            _GEN_13 = req_valid & io_resps_sink_d_valid;
  wire            _GEN_14 =
    io_resps_sink_d_bits_opcode == 3'h4 | io_resps_sink_d_bits_opcode == 3'h5
    | io_resps_sink_d_bits_opcode == 3'h1 | io_resps_sink_d_bits_opcode == 3'h0;
  wire            _GEN_15 = _GEN_13 & _GEN_14;
  reg             no_schedule_REG;
  wire            no_schedule =
    s_probeack & s_execute & s_grantack & no_schedule_REG & s_writerelease & s_writeprobe
    & s_triggerprefetch & s_prefetchack & s_transferput;
  wire            will_be_free = no_wait & no_schedule;
  reg             preferCache_latch;
  reg             transmit_from_other_client_latch;
  wire            _io_b_status_probeAckDataThrough_T_9 =
    preferCache_latch | meta_self_hit;
  wire            nest_c_set_match = io_c_status_set == req_set;
  wire            nest_c_tag_match = io_c_status_tag == req_tag;
  wire            nest_c_way_match = io_c_status_way == meta_self_way;
  reg             a_c_through_reg;
  wire            a_c_through =
    req_channel[0]
    & (nest_c_tag_match & ~meta_self_hit & ~nest_c_way_match | ~nest_c_tag_match
       & nest_c_way_match
       & (preferCache_latch & ~acquirePermMiss | meta_self_hit | a_c_through_reg
          | transmit_from_other_client_latch) | nest_c_tag_match & nest_c_way_match
       & ~meta_self_hit & a_do_release);
  wire            _nestedReleaseDataSave_T = req_valid & io_c_status_nestedReleaseData;
  wire            nestedReleaseDataSave =
    _nestedReleaseDataSave_T & nest_c_set_match & nest_c_tag_match & nest_c_way_match
    & io_c_status_metaValid & ~a_c_through;
  wire            nestedReleaseDirtyDataSave =
    nestedReleaseDataSave & io_c_status_reqDirty;
  assign nestC_save = nestC_save_flag | nestedReleaseDataSave;
  assign nestC_saveDirty = nestC_saveDirty_flag | nestedReleaseDirtyDataSave;
  wire            _clientBitOH_T_11 = io_alloc_bits_source[12:10] == 3'h2;
  wire            _clientBitOH_T_17 = io_alloc_bits_source[12:10] == 3'h1;
  wire            _clientBitOH_T_23 = io_alloc_bits_source[12:10] == 3'h0;
  wire            _probe_clients_T_2 = req_channel[0] & _probe_clients_T_1;
  wire            change_self_meta =
    meta_valid & (|meta_self_state) & _change_self_meta_T_2
    & io_nestedwb_tag == meta_self_tag;
  wire            nested_client_match =
    io_nestedwb_tag == (io_dirResult_valid
                          ? io_dirResult_bits_clients_tag
                          : meta_reg_clients_tag) & io_nestedwb_set == req_set;
  wire            _GEN_16 =
    meta_valid & (|meta_clients_states_0_state) & nested_client_match
    & io_nestedwb_clients_0_isToN;
  wire            _GEN_17 =
    meta_valid & (|meta_clients_states_1_state) & nested_client_match
    & io_nestedwb_clients_1_isToN;
  wire            _GEN_18 =
    meta_valid & (|meta_clients_states_2_state) & nested_client_match
    & io_nestedwb_clients_2_isToN;
  wire            _GEN_19 =
    meta_valid & (|meta_clients_states_3_state) & nested_client_match
    & io_nestedwb_clients_3_isToN;
  always @(posedge clock) begin
    if (io_alloc_valid) begin
      req_channel <= io_alloc_bits_channel;
      req_opcode <= io_alloc_bits_opcode;
      req_param <= io_alloc_bits_param;
      req_size <= io_alloc_bits_size;
      req_source <= io_alloc_bits_source;
      req_set <= io_alloc_bits_set;
      req_tag <= io_alloc_bits_tag;
      req_off <= io_alloc_bits_off;
      req_mask <= io_alloc_bits_mask;
      req_bufIdx <= io_alloc_bits_bufIdx;
      req_needHint <= io_alloc_bits_needHint;
      req_isPrefetch <= io_alloc_bits_isPrefetch;
      req_isBop <= io_alloc_bits_isBop;
      req_preferCache <= io_alloc_bits_preferCache;
      req_dirty <= io_alloc_bits_dirty;
      req_fromProbeHelper <= io_alloc_bits_fromProbeHelper;
      req_fromCmoHelper <= io_alloc_bits_fromCmoHelper;
      req_needProbeAckData <= io_alloc_bits_needProbeAckData;
      req_reqSource <= io_alloc_bits_reqSource;
      iam <=
        {_clientBitOH_T_23,
         _clientBitOH_T_17,
         _clientBitOH_T_11,
         io_alloc_bits_source[12:10] == 3'h3} == 4'h0
          ? 3'h4
          : {1'h0,
             |{_clientBitOH_T_23, _clientBitOH_T_17},
             _clientBitOH_T_23 | _clientBitOH_T_11};
    end
    else if (_GEN_13 & _GEN_14 & (|(req_opcode[2:1])))
      req_bufIdx <= io_resps_sink_d_bits_bufIdx;
    if (change_self_meta) begin
      meta_reg_self_dirty <=
        io_nestedwb_c_set_dirty | io_nestedwb_b_set_dirty | ~io_nestedwb_b_clr_dirty
        & (io_dirResult_valid ? io_dirResult_bits_self_dirty : meta_reg_self_dirty);
      if (io_nestedwb_b_toN) begin
        meta_reg_self_state <= 2'h0;
        meta_reg_self_clientStates_0 <= 2'h0;
        meta_reg_self_clientStates_1 <= 2'h0;
        meta_reg_self_clientStates_2 <= 2'h0;
        meta_reg_self_clientStates_3 <= 2'h0;
      end
      else if (io_nestedwb_b_toB) begin
        meta_reg_self_state <= 2'h1;
        if (meta_reg_self_clientStates_0[1])
          meta_reg_self_clientStates_0 <= 2'h1;
        if (meta_reg_self_clientStates_1[1])
          meta_reg_self_clientStates_1 <= 2'h1;
        if (meta_reg_self_clientStates_2[1])
          meta_reg_self_clientStates_2 <= 2'h1;
        if (meta_reg_self_clientStates_3[1])
          meta_reg_self_clientStates_3 <= 2'h1;
      end
      else if (io_dirResult_valid) begin
        meta_reg_self_state <= io_dirResult_bits_self_state;
        meta_reg_self_clientStates_0 <= io_dirResult_bits_self_clientStates_0;
        meta_reg_self_clientStates_1 <= io_dirResult_bits_self_clientStates_1;
        meta_reg_self_clientStates_2 <= io_dirResult_bits_self_clientStates_2;
        meta_reg_self_clientStates_3 <= io_dirResult_bits_self_clientStates_3;
      end
    end
    else if (io_dirResult_valid) begin
      meta_reg_self_dirty <= io_dirResult_bits_self_dirty;
      meta_reg_self_state <= io_dirResult_bits_self_state;
      meta_reg_self_clientStates_0 <= io_dirResult_bits_self_clientStates_0;
      meta_reg_self_clientStates_1 <= io_dirResult_bits_self_clientStates_1;
      meta_reg_self_clientStates_2 <= io_dirResult_bits_self_clientStates_2;
      meta_reg_self_clientStates_3 <= io_dirResult_bits_self_clientStates_3;
    end
    if (io_dirResult_valid) begin
      meta_reg_self_prefetch <= io_dirResult_bits_self_prefetch;
      meta_reg_self_way <= io_dirResult_bits_self_way;
      meta_reg_self_tag <= io_dirResult_bits_self_tag;
      meta_reg_self_error <= io_dirResult_bits_self_error;
      meta_reg_clients_tag <= io_dirResult_bits_clients_tag;
      meta_reg_clients_way <= io_dirResult_bits_clients_way;
      meta_reg_clients_error <= io_dirResult_bits_clients_error;
      client_dir_conflict <=
        req_channel[0] & req_acquire
        & (|{~meta_clients_states_0_hit & (|meta_clients_states_0_state),
             ~meta_clients_states_1_hit & (|meta_clients_states_1_state),
             ~meta_clients_states_2_hit & (|meta_clients_states_2_state),
             ~meta_clients_states_3_hit & (|meta_clients_states_3_state)});
      probe_clients <=
        {_probe_clients_T_2
           ? prefetch_miss_need_probe_vec_3
           : req_channel[0]
               ? ~(iam == 3'h3 & req_acquire) & meta_clients_states_3_hit
                 & (req_needT & (|meta_clients_states_3_state)
                    | meta_clients_states_3_state[1] | ~meta_self_hit)
               : (~req_fromCmoHelper | ~_x_probe_clients_T_12
                  | meta_clients_states_3_state[1]) & meta_clients_states_3_hit,
         _probe_clients_T_2
           ? prefetch_miss_need_probe_vec_2
           : req_channel[0]
               ? ~(iam == 3'h2 & req_acquire) & meta_clients_states_2_hit
                 & (req_needT & (|meta_clients_states_2_state)
                    | meta_clients_states_2_state[1] | ~meta_self_hit)
               : (~req_fromCmoHelper | ~_x_probe_clients_T_12
                  | meta_clients_states_2_state[1]) & meta_clients_states_2_hit,
         _probe_clients_T_2
           ? prefetch_miss_need_probe_vec_1
           : req_channel[0]
               ? ~(iam == 3'h1 & req_acquire) & meta_clients_states_1_hit
                 & (req_needT & (|meta_clients_states_1_state)
                    | meta_clients_states_1_state[1] | ~meta_self_hit)
               : (~req_fromCmoHelper | ~_x_probe_clients_T_12
                  | meta_clients_states_1_state[1]) & meta_clients_states_1_hit,
         _probe_clients_T_2
           ? prefetch_miss_need_probe_vec_0
           : req_channel[0]
               ? ~(~(|iam) & req_acquire) & meta_clients_states_0_hit
                 & (req_needT & (|meta_clients_states_0_state)
                    | meta_clients_states_0_state[1] | ~meta_self_hit)
               : (~req_fromCmoHelper | ~_x_probe_clients_T_12
                  | meta_clients_states_0_state[1]) & meta_clients_states_0_hit};
    end
    meta_reg_self_hit <=
      ~(change_self_meta & io_nestedwb_b_toN)
      & (io_dirResult_valid ? io_dirResult_bits_self_hit : meta_reg_self_hit);
    if (_GEN_16)
      meta_reg_clients_states_0_state <= 2'h0;
    else if (io_dirResult_valid)
      meta_reg_clients_states_0_state <= io_dirResult_bits_clients_states_0_state;
    meta_reg_clients_states_0_hit <=
      ~_GEN_16
      & (io_dirResult_valid
           ? io_dirResult_bits_clients_states_0_hit
           : meta_reg_clients_states_0_hit);
    if (_GEN_17)
      meta_reg_clients_states_1_state <= 2'h0;
    else if (io_dirResult_valid)
      meta_reg_clients_states_1_state <= io_dirResult_bits_clients_states_1_state;
    meta_reg_clients_states_1_hit <=
      ~_GEN_17
      & (io_dirResult_valid
           ? io_dirResult_bits_clients_states_1_hit
           : meta_reg_clients_states_1_hit);
    if (_GEN_18)
      meta_reg_clients_states_2_state <= 2'h0;
    else if (io_dirResult_valid)
      meta_reg_clients_states_2_state <= io_dirResult_bits_clients_states_2_state;
    meta_reg_clients_states_2_hit <=
      ~_GEN_18
      & (io_dirResult_valid
           ? io_dirResult_bits_clients_states_2_hit
           : meta_reg_clients_states_2_hit);
    if (_GEN_19)
      meta_reg_clients_states_3_state <= 2'h0;
    else if (io_dirResult_valid)
      meta_reg_clients_states_3_state <= io_dirResult_bits_clients_states_3_state;
    meta_reg_clients_states_3_hit <=
      ~_GEN_19
      & (io_dirResult_valid
           ? io_dirResult_bits_clients_states_3_hit
           : meta_reg_clients_states_3_hit);
    if (_GEN_15)
      sink <= io_resps_sink_d_bits_sink;
    if (io_resps_sink_c_valid & io_resps_sink_c_bits_hasData)
      io_tasks_sink_c_bits_bufIdx_r <= io_resps_sink_c_bits_bufIdx;
  end // always @(posedge)
  wire [3:0][1:0] _GEN_20 =
    {{meta_clients_states_3_state},
     {meta_clients_states_2_state},
     {meta_clients_states_1_state},
     {meta_clients_states_0_state}};
  wire [1:0]      _GEN_21 = _GEN_20[iam[1:0]];
  wire [1:0]      _highest_perm_except_me_T = meta_self_hit ? meta_self_state : 2'h0;
  wire [1:0]      _highest_perm_except_me_T_6 =
    req_acquire & ~(|iam) | ~meta_clients_states_0_hit
      ? 2'h0
      : meta_clients_states_0_state;
  wire [1:0]      _highest_perm_except_me_T_12 =
    req_acquire & _new_clients_meta_1_state_T_5 | ~meta_clients_states_1_hit
      ? 2'h0
      : meta_clients_states_1_state;
  wire [1:0]      _highest_perm_except_me_T_18 =
    req_acquire & _new_clients_meta_2_state_T_5 | ~meta_clients_states_2_hit
      ? 2'h0
      : meta_clients_states_2_state;
  wire [1:0]      _highest_perm_except_me_T_24 =
    req_acquire & _new_clients_meta_3_state_T_5 | ~meta_clients_states_3_hit
      ? 2'h0
      : meta_clients_states_3_state;
  wire [1:0]      _highest_perm_except_me_T_26 =
    _highest_perm_except_me_T > _highest_perm_except_me_T_6
      ? _highest_perm_except_me_T
      : _highest_perm_except_me_T_6;
  wire [1:0]      _highest_perm_except_me_T_28 =
    _highest_perm_except_me_T_18 > _highest_perm_except_me_T_24
      ? _highest_perm_except_me_T_18
      : _highest_perm_except_me_T_24;
  wire [1:0]      _highest_perm_except_me_T_30 =
    _highest_perm_except_me_T_12 > _highest_perm_except_me_T_28
      ? _highest_perm_except_me_T_12
      : _highest_perm_except_me_T_28;
  wire [1:0]      highest_perm_except_me =
    _highest_perm_except_me_T_26 > _highest_perm_except_me_T_30
      ? _highest_perm_except_me_T_26
      : _highest_perm_except_me_T_30;
  wire            replace_need_release =
    meta_self_state > replace_clients_perm | meta_self_dirty
    & (_io_tasks_source_d_bits_useBypass_T_1 | (&meta_self_state));
  wire            _GEN_22 =
    meta_self_error
    | (io_dirResult_valid ? io_dirResult_bits_clients_error : meta_reg_clients_error);
  wire            _GEN_23 =
    ~(meta_clients_states_3_hit | meta_clients_states_2_hit | meta_clients_states_1_hit)
    & ~meta_clients_states_0_hit;
  wire            _GEN_24 = (|req_param) & meta_self_hit;
  wire            _GEN_25 = ~meta_self_hit & req_opcode[0];
  wire            _GEN_26 =
    _GEN_5 | ~(_GEN_25 & (|meta_self_state) & replace_need_release);
  wire            _GEN_27 =
    _GEN_22 | ~(req_channel[2]) | req_fromCmoHelper | ~(req_opcode[0]);
  wire            _GEN_28 = req_param == 3'h1;
  wire            _GEN_29 =
    meta_self_hit & meta_self_state[0] & _GEN_28
    | {meta_clients_states_0_hit,
       meta_clients_states_1_hit,
       meta_clients_states_2_hit,
       meta_clients_states_3_hit} == 4'h0;
  wire            _GEN_30 =
    _probe_clients_T_1
    & (|{meta_clients_states_3_hit,
         meta_clients_states_2_hit,
         meta_clients_states_1_hit,
         meta_clients_states_0_hit});
  wire            _GEN_31 =
    ~meta_self_hit & (|meta_self_state) & replace_need_release
    & (preferCache & (_acquire_param_T_4 | _io_tasks_source_a_bits_param_T_1)
       | prefetch_need_data | transmit_from_other_client);
  wire            _GEN_32 = req_channel[1] | _GEN_30 | ~_GEN_31;
  wire            _GEN_33 =
    io_dirResult_valid
      ? _GEN_22
        | (req_channel[2]
             ? (req_fromCmoHelper
                  ? ~_GEN_24
                  : ~(will_release_through & req_opcode[0]) & _GEN_26)
             : _GEN_32)
      : w_releaseack;
  wire            _GEN_34 = req_channel[2] | req_channel[1];
  wire            _GEN_35 = _GEN_22 | _GEN_34;
  wire            _GEN_36 =
    req_acquire
      ? (req_needT ? ~(highest_perm_except_me[1]) : highest_perm_except_me == 2'h0)
      : req_needT ? ~(highest_perm[1]) : _prefetch_miss_need_acquire_T_1;
  wire            _GEN_37 = _GEN_35 | _GEN_30 | ~_GEN_36;
  wire            _GEN_38 =
    ~_GEN_36
    | ~(~acquirePermMiss
        & (meta_self_hit & ~_io_tasks_source_a_bits_param_T_1 | preferCache));
  wire            _GEN_39 = req_opcode != 3'h4 & (|(req_opcode[2:1]));
  wire            _GEN_40 = req_needT | ~meta_self_hit;
  wire            _GEN_41 = _probe_clients_T_1 & (|_prefetch_miss_need_probe_T);
  wire            _GEN_42 =
    meta_clients_states_0_hit
    & (req_acquire & (_GEN_40 | meta_clients_states_0_state[1]) | _GEN_41);
  wire            _GEN_43 =
    meta_clients_states_0_hit
    & (meta_clients_states_0_state[1] | ~meta_self_hit | ~(|(req_opcode[2:1])));
  wire            _GEN_44 = _GEN_39 ? ~(|iam) | ~_GEN_42 : ~_GEN_43;
  wire            _GEN_45 =
    _GEN_39 ? ~((|iam) & _GEN_42) | meta_self_hit : ~_GEN_43 | meta_self_hit;
  wire            _GEN_46 =
    _GEN_39 ? ~((|iam) & _GEN_42 & ~meta_self_hit) & _GEN_38 : ~_GEN_43 & _GEN_38;
  wire            _GEN_47 =
    meta_clients_states_1_hit
    & (req_acquire & (_GEN_40 | meta_clients_states_1_state[1]) | _GEN_41);
  wire            _GEN_48 = iam == 3'h1;
  wire            _GEN_49 = _GEN_48 | ~(_GEN_47 & ~meta_self_hit);
  wire            _GEN_50 =
    meta_clients_states_1_hit
    & (meta_clients_states_1_state[1] | ~meta_self_hit | ~(|(req_opcode[2:1])));
  wire            _GEN_51 = _GEN_39 ? (_GEN_48 | ~_GEN_47) & _GEN_44 : ~_GEN_50 & _GEN_44;
  wire            _GEN_52 =
    _GEN_39 ? _GEN_49 & _GEN_45 : ~(_GEN_50 & ~meta_self_hit) & _GEN_45;
  wire            _GEN_53 = _GEN_39 ? _GEN_49 & _GEN_46 : ~_GEN_50 & _GEN_46;
  wire            _GEN_54 =
    meta_clients_states_2_hit
    & (req_acquire & (_GEN_40 | meta_clients_states_2_state[1]) | _GEN_41);
  wire            _GEN_55 = iam == 3'h2;
  wire            _GEN_56 = _GEN_55 | ~(_GEN_54 & ~meta_self_hit);
  wire            _GEN_57 =
    meta_clients_states_2_hit
    & (meta_clients_states_2_state[1] | ~meta_self_hit | ~(|(req_opcode[2:1])));
  wire            _GEN_58 = _GEN_39 ? (_GEN_55 | ~_GEN_54) & _GEN_51 : ~_GEN_57 & _GEN_51;
  wire            _GEN_59 =
    _GEN_39 ? _GEN_56 & _GEN_52 : ~(_GEN_57 & ~meta_self_hit) & _GEN_52;
  wire            _GEN_60 = _GEN_39 ? _GEN_56 & _GEN_53 : ~_GEN_57 & _GEN_53;
  wire            _GEN_61 =
    meta_clients_states_3_hit
    & (req_acquire & (_GEN_40 | meta_clients_states_3_state[1]) | _GEN_41);
  wire            _GEN_62 = iam == 3'h3;
  wire            _GEN_63 = _GEN_62 | ~(_GEN_61 & ~meta_self_hit);
  wire            _GEN_64 =
    meta_clients_states_3_hit
    & (meta_clients_states_3_state[1] | ~meta_self_hit | ~(|(req_opcode[2:1])));
  wire            _GEN_65 = _GEN_39 ? (_GEN_62 | ~_GEN_61) & _GEN_58 : ~_GEN_64 & _GEN_58;
  wire            _GEN_66 =
    _GEN_22
    | (req_channel[2]
         ? ~req_fromCmoHelper | _GEN_23
         : req_channel[1] ? _GEN_29 : _GEN_30 | _GEN_65);
  wire            _GEN_67 =
    io_dirResult_valid
      ? _GEN_22
        | (req_channel[2]
             ? req_fromCmoHelper | _GEN_5 | ~_GEN_25
             : req_channel[1] | _GEN_30
               | ~(~meta_self_hit & preferCache
                   & (_io_tasks_source_a_bits_param_T_1 | _acquire_param_T_4
                      | prefetch_need_data))
               & (_GEN_39 ? _GEN_63 & _GEN_59 : ~(_GEN_64 & ~meta_self_hit) & _GEN_59))
      : s_wbselftag;
  wire            _GEN_68 = io_tasks_source_a_ready & io_tasks_source_a_valid_0;
  wire            _GEN_69 = io_tasks_source_c_ready & io_tasks_source_c_valid_0;
  wire            _GEN_70 = io_tasks_tag_write_ready & io_tasks_tag_write_valid_0;
  wire            _GEN_71 = io_tasks_sink_c_ready & io_tasks_sink_c_valid_0;
  wire [3:0]      _probes_done_T =
    probes_done
    | {~(|(io_resps_sink_c_bits_source[12:10])),
       io_resps_sink_c_bits_source[12:10] == 3'h1,
       io_resps_sink_c_bits_source[12:10] == 3'h2,
       io_resps_sink_c_bits_source[12:10] == 3'h3};
  wire            probeack_last = _probes_done_T == probe_clients;
  wire            _GEN_72 = _GEN_8 & probeack_last;
  wire            _GEN_73 = someClientHasProbeAckData | io_resps_sink_c_bits_hasData;
  wire            _GEN_74 = _GEN_72 & _GEN_73;
  wire            _GEN_75 =
    req_channel[1]
    & (probeAckDataThrough & io_resps_sink_c_bits_param != 3'h5 | ~req_fromProbeHelper);
  wire            _GEN_76 = req_valid & sink_c_resp_valid;
  wire            _GEN_77 =
    ~acquire_flag & req_channel[0] & probeack_last & io_resps_sink_c_bits_last
    & ~io_resps_sink_c_bits_hasData & ~nested_c_hit & ~meta_self_hit & ~nestC_save;
  wire            _GEN_78 = _GEN_76 & _GEN_77;
  wire            _GEN_79 =
    req_channel[0] & probeack_last & io_resps_sink_c_bits_last
    & ~io_resps_sink_c_bits_hasData & ~nested_c_hit & ~meta_self_hit;
  wire            _GEN_80 = preferCache | meta_self_hit;
  wire            _GEN_81 = _GEN_39 ? (|iam) & _GEN_42 : _GEN_43;
  wire            _GEN_82 = _GEN_39 ? ~_GEN_48 & _GEN_47 | _GEN_81 : _GEN_50 | _GEN_81;
  wire            _GEN_83 = _GEN_39 ? ~_GEN_55 & _GEN_54 | _GEN_82 : _GEN_57 | _GEN_82;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      req_valid <= 1'h0;
      meta_valid <= 1'h0;
      promoteT_safe <= 1'h1;
      gotT <= 1'h0;
      a_do_release <= 1'h0;
      a_do_probe <= 1'h0;
      probe_dirty <= 1'h0;
      probes_done <= 4'h0;
      highest_perm_reg_reg <= 2'h0;
      inv_self_dir <= 1'h0;
      client_probeack_param_vec_reg_0 <= 3'h0;
      client_probeack_param_vec_reg_1 <= 3'h0;
      client_probeack_param_vec_reg_2 <= 3'h0;
      client_probeack_param_vec_reg_3 <= 3'h0;
      transmit_from_other_client_reg <= 1'h0;
      releaseThrough <= 1'h0;
      releaseDrop <= 1'h0;
      probeAckDataThrough <= 1'h0;
      probeAckDataDrop <= 1'h0;
      probeAckDataSave <= 1'h0;
      someClientHasProbeAckData <= 1'h0;
      nested_c_hit_reg <= 1'h0;
      bad_grant <= 1'h0;
      s_acquire <= 1'h1;
      s_probe <= 1'h1;
      s_release <= 1'h1;
      s_probeack <= 1'h1;
      s_execute <= 1'h1;
      s_grantack <= 1'h1;
      s_wbselfdir <= 1'h1;
      s_wbselftag <= 1'h1;
      s_wbclientsdir <= 1'h1;
      s_wbclientstag <= 1'h1;
      s_transferput <= 1'h1;
      s_writerelease <= 1'h1;
      s_writeprobe <= 1'h1;
      s_triggerprefetch <= 1'h1;
      s_prefetchack <= 1'h1;
      w_probeackfirst <= 1'h1;
      w_probeacklast <= 1'h1;
      w_probeack <= 1'h1;
      w_grantfirst <= 1'h1;
      w_grantlast <= 1'h1;
      w_grant <= 1'h1;
      w_releaseack <= 1'h1;
      w_grantack <= 1'h1;
      w_putwritten <= 1'h1;
      w_sinkcack <= 1'h1;
      acquire_flag <= 1'h0;
      nestC_save_flag <= 1'h0;
      nestC_saveDirty_flag <= 1'h0;
      bypassPut_latch_reg <= 1'h0;
      probe_helper_finish <= 1'h0;
      no_schedule_REG <= 1'h1;
      preferCache_latch <= 1'h0;
      transmit_from_other_client_latch <= 1'h0;
      a_c_through_reg <= 1'h0;
    end
    else begin
      req_valid <= io_alloc_valid | ~will_be_free & req_valid;
      meta_valid <= ~will_be_free & (io_dirResult_valid | meta_valid);
      promoteT_safe <= ~_GEN_78 & (io_dirResult_valid | promoteT_safe);
      if (_GEN_15) begin
        gotT <= io_resps_sink_d_bits_param == 3'h0;
        bad_grant <= io_resps_sink_d_bits_denied;
        w_grantlast <= w_grantlast | io_resps_sink_d_bits_last;
        w_grant <= ~(|req_off) & req_size == 3'h6 | io_resps_sink_d_bits_last;
      end
      else begin
        gotT <= ~io_dirResult_valid & gotT;
        bad_grant <= ~io_dirResult_valid & bad_grant;
        w_grantlast <= ~_GEN_78 & (io_dirResult_valid ? _GEN_37 : w_grantlast);
        w_grant <= ~_GEN_78 & (io_dirResult_valid ? _GEN_37 : w_grant);
      end
      if (io_dirResult_valid) begin
        a_do_release <= ~_GEN_35 & ~_GEN_30 & _GEN_31;
        a_do_probe <=
          ~_GEN_35 & ~_GEN_30
          & (_GEN_39 ? ~_GEN_62 & _GEN_61 | _GEN_83 : _GEN_64 | _GEN_83);
        highest_perm_reg_reg <= highest_perm;
        transmit_from_other_client_reg <= |_transmit_from_other_client_T_21;
        bypassPut_latch_reg <= bypassPut;
        a_c_through_reg <= meta_self_hit;
      end
      else begin
        if (will_be_free)
          highest_perm_reg_reg <= 2'h0;
        transmit_from_other_client_reg <= ~will_be_free & transmit_from_other_client_reg;
        bypassPut_latch_reg <= ~will_be_free & bypassPut_latch_reg;
        a_c_through_reg <= ~will_be_free & a_c_through_reg;
      end
      if (_GEN_76) begin
        probe_dirty <= probe_dirty | io_resps_sink_c_bits_hasData | nested_c_hit;
        probes_done <= _probes_done_T;
        w_probeackfirst <= w_probeackfirst | probeack_last;
        w_probeacklast <= w_probeacklast | probeack_last & io_resps_sink_c_bits_last;
        w_probeack <=
          w_probeack | probeack_last & (io_resps_sink_c_bits_last | ~(|req_off));
      end
      else begin
        probe_dirty <= ~io_dirResult_valid & probe_dirty;
        if (io_dirResult_valid) begin
          probes_done <= 4'h0;
          w_probeackfirst <= _GEN_66;
          w_probeacklast <= _GEN_66;
          w_probeack <= _GEN_66;
        end
      end
      inv_self_dir <= _GEN_76 & _GEN_79 & ~_GEN_80 | ~io_dirResult_valid & inv_self_dir;
      if (_GEN_9)
        client_probeack_param_vec_reg_0 <= io_resps_sink_c_bits_param;
      if (_GEN_10)
        client_probeack_param_vec_reg_1 <= io_resps_sink_c_bits_param;
      if (_GEN_11)
        client_probeack_param_vec_reg_2 <= io_resps_sink_c_bits_param;
      if (_GEN_12)
        client_probeack_param_vec_reg_3 <= io_resps_sink_c_bits_param;
      releaseThrough <= ~will_be_free & (_GEN_5 ? will_release_through : releaseThrough);
      releaseDrop <=
        ~will_be_free & (_GEN_5 ? _GEN_5 & ~will_release_through : releaseDrop);
      probeAckDataThrough <=
        ~will_be_free
        & (io_dirResult_valid
             ? (req_fromCmoHelper
                  ? (|req_param) & (|_clients_have_T_T_8) & ~meta_self_hit
                  : req_channel[1]
                      ? (~req_fromProbeHelper | ~meta_self_hit | io_probeAckDataThrough)
                        & will_probeack_through
                      : probeAckDataThrough)
             : probeAckDataThrough);
      probeAckDataDrop <=
        ~will_be_free
        & (io_dirResult_valid
             ? (req_fromCmoHelper
                  ? ~(|req_param)
                  : req_channel[1] ? _GEN_6 & ~will_probeack_through : probeAckDataDrop)
             : probeAckDataDrop);
      probeAckDataSave <=
        ~will_be_free
        & (io_dirResult_valid
             ? (req_fromCmoHelper
                  ? ~probeAckDataDrop & ~probeAckDataThrough
                  : req_channel[1]
                      ? (req_fromProbeHelper
                           ? will_probeack_through & ~io_probeAckDataThrough
                             & meta_self_hit
                           : ~_GEN_6 | will_probeack_through & ~io_probeAckDataThrough
                             & meta_self_hit & req_param == 3'h1)
                      : ~probeAckDataThrough & ~probeAckDataDrop)
             : probeAckDataSave);
      someClientHasProbeAckData <=
        ~will_be_free
        & (_GEN_8 & io_resps_sink_c_bits_hasData | someClientHasProbeAckData);
      nested_c_hit_reg <= ~io_dirResult_valid & nested_c_hit;
      s_acquire <= ~_GEN_78 & (_GEN_68 | (io_dirResult_valid ? _GEN_37 : s_acquire));
      s_probe <=
        io_tasks_source_b_ready & io_tasks_source_b_valid_0
        | (io_dirResult_valid ? _GEN_66 : s_probe);
      s_release <=
        _GEN_69
        | (io_dirResult_valid
             ? _GEN_22
               | (req_channel[2] ? (req_fromCmoHelper ? ~_GEN_24 : _GEN_26) : _GEN_32)
             : s_release);
      s_probeack <=
        (~_GEN_72 | _GEN_73 | ~_GEN_75)
        & (_GEN_69
           | (io_dirResult_valid
                ? (_GEN_22
                     ? ~(req_channel[1])
                     : req_channel[2] | ~(req_channel[1])
                       | ~(~will_probeack_through & ~req_fromProbeHelper))
                : s_probeack));
      s_execute <=
        io_tasks_source_d_ready & io_tasks_source_d_valid_0
        | (io_dirResult_valid
             ? (_GEN_22
                  ? ~(req_channel[0]) & ~(req_channel[2])
                  : req_channel[2]
                      ? req_fromCmoHelper
                      : req_channel[1] | _GEN_30 | _probe_clients_T_1)
             : s_execute);
      s_grantack <=
        ~(_GEN_76 & _GEN_77 & ~bypassGet & ~bypassPut_latch_reg)
        & (io_tasks_source_e_ready & io_tasks_source_e_valid_0
           | (io_dirResult_valid
                ? _GEN_35 | ~(~_GEN_30 & _GEN_36) | ~(~bypassGet & ~bypassPut)
                : s_grantack));
      s_wbselfdir <=
        io_tasks_dir_write_ready & io_tasks_dir_write_valid_0
        | (io_dirResult_valid
             ? _GEN_22
               | (req_channel[2]
                    ? (req_fromCmoHelper
                         ? ~meta_self_hit
                         : _GEN_5 | ~(meta_self_hit | req_opcode[0]))
                    : req_channel[1]
                        ? ~meta_self_hit
                          | ~(req_param == 3'h2 | meta_self_state[1] & _GEN_28)
                        : _GEN_30
                          | ~(~(|(req_opcode[2:1])) & meta_self_hit & ~meta_self_dirty
                              | req_acquire & ~acquirePermMiss
                              & (meta_self_hit | preferCache))
                          & (_GEN_39 ? _GEN_63 & _GEN_60 : ~_GEN_64 & _GEN_60))
             : s_wbselfdir);
      if (_GEN_76 & _GEN_79)
        s_wbselftag <= ~_GEN_80 | _GEN_70 | _GEN_67;
      else
        s_wbselftag <= _GEN_70 | _GEN_67;
      s_wbclientsdir <=
        io_tasks_client_dir_write_ready & io_tasks_client_dir_write_valid_0
        | (io_dirResult_valid
             ? _GEN_22
               | (req_channel[2]
                    ? (req_fromCmoHelper
                         ? _GEN_23
                         : ~((_new_clients_meta_3_state_T_6
                              | _new_clients_meta_3_state_T_7
                              | _new_clients_meta_3_state_T_9) & (|_GEN_21)
                             | (~(|req_param) | _new_clients_meta_3_state_T_12)
                             & _GEN_21[1]))
                    : req_channel[1] ? _GEN_29 : _GEN_30 | ~req_acquire & _GEN_65)
             : s_wbclientsdir);
      s_wbclientstag <=
        io_tasks_client_tag_write_ready & io_tasks_client_tag_write_valid_0
        | (io_dirResult_valid
             ? _GEN_35 | ~(~_GEN_30 & req_acquire) | _GEN_0
             : s_wbclientstag);
      s_transferput <=
        _GEN_68 | (io_dirResult_valid ? _GEN_35 | _GEN_30 | ~bypassPut : s_transferput);
      s_writerelease <=
        _GEN_71 & s_writeprobe | (io_dirResult_valid ? _GEN_27 : s_writerelease);
      s_writeprobe <= ~_GEN_74 & (_GEN_71 | io_dirResult_valid | s_writeprobe);
      s_triggerprefetch <=
        io_tasks_prefetch_train_ready & ~s_triggerprefetch
        | (io_dirResult_valid
             ? _GEN_35 | _GEN_30
               | ~(req_opcode != 3'h5 & req_needHint
                   & (~meta_self_hit | meta_self_prefetch))
             : s_triggerprefetch);
      s_prefetchack <=
        io_tasks_prefetch_resp_ready & io_tasks_prefetch_resp_valid_0
        | (io_dirResult_valid
             ? _GEN_35 | _GEN_30 | ~(_probe_clients_T_1 & req_isBop)
             : s_prefetchack);
      w_grantfirst <= _GEN_15 | ~_GEN_78 & (io_dirResult_valid ? _GEN_37 : w_grantfirst);
      w_releaseack <=
        _GEN_13 & io_resps_sink_d_bits_opcode == 3'h6
        | (_GEN_72
             ? (_GEN_73
                  ? ~(req_channel[1] & req_fromProbeHelper & probeAckDataThrough
                      | req_fromCmoHelper & probeAckDataThrough) & _GEN_33
                  : ~(_GEN_75 & req_fromProbeHelper) & _GEN_33)
             : _GEN_33);
      w_grantack <=
        io_resps_sink_e_valid
        | (io_dirResult_valid
             ? (_GEN_22
                  ? ~(req_channel[0]) | ~req_acquire
                  : _GEN_34 | _GEN_30 | ~req_acquire)
             : w_grantack);
      w_putwritten <=
        io_resps_source_d_valid
        | (io_dirResult_valid
             ? _GEN_35 | _GEN_30 | ~(~(|(req_opcode[2:1])) & ~bypassPut)
             : w_putwritten);
      w_sinkcack <=
        io_resps_sink_c_ack_valid | ~_GEN_74
        & (io_dirResult_valid ? _GEN_27 : w_sinkcack);
      acquire_flag <= ~io_dirResult_valid & (~s_acquire | acquire_flag);
      nestC_save_flag <= nestedReleaseDataSave | ~io_dirResult_valid & nestC_save_flag;
      nestC_saveDirty_flag <=
        nestedReleaseDirtyDataSave | ~io_dirResult_valid & nestC_saveDirty_flag;
      probe_helper_finish <=
        ~will_be_free
        & (req_valid & io_b_status_probeHelperFinish & req_set == io_b_status_set
           | probe_helper_finish);
      no_schedule_REG <=
        s_wbselfdir & s_wbselftag & s_wbclientsdir & s_wbclientstag & meta_valid;
      preferCache_latch <= preferCache;
      transmit_from_other_client_latch <= transmit_from_other_client;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:9];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'hA; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        req_channel = _RANDOM[4'h0][2:0];
        req_opcode = _RANDOM[4'h0][5:3];
        req_param = _RANDOM[4'h0][8:6];
        req_size = _RANDOM[4'h0][11:9];
        req_source = _RANDOM[4'h0][24:12];
        req_set = {_RANDOM[4'h0][31:25], _RANDOM[4'h1][4:0]};
        req_tag = _RANDOM[4'h1][20:5];
        req_off = _RANDOM[4'h1][26:21];
        req_mask = {_RANDOM[4'h1][31:27], _RANDOM[4'h2][26:0]};
        req_bufIdx = _RANDOM[4'h2][30:27];
        req_needHint = _RANDOM[4'h2][31];
        req_isPrefetch = _RANDOM[4'h3][0];
        req_isBop = _RANDOM[4'h3][1];
        req_preferCache = _RANDOM[4'h3][2];
        req_dirty = _RANDOM[4'h3][3];
        req_fromProbeHelper = _RANDOM[4'h3][5];
        req_fromCmoHelper = _RANDOM[4'h3][6];
        req_needProbeAckData = _RANDOM[4'h3][7];
        req_reqSource = _RANDOM[4'h3][11:8];
        req_valid = _RANDOM[4'h3][12];
        iam = _RANDOM[4'h3][15:13];
        meta_reg_self_dirty = _RANDOM[4'h4][0];
        meta_reg_self_state = _RANDOM[4'h4][2:1];
        meta_reg_self_clientStates_0 = _RANDOM[4'h4][4:3];
        meta_reg_self_clientStates_1 = _RANDOM[4'h4][6:5];
        meta_reg_self_clientStates_2 = _RANDOM[4'h4][8:7];
        meta_reg_self_clientStates_3 = _RANDOM[4'h4][10:9];
        meta_reg_self_prefetch = _RANDOM[4'h4][11];
        meta_reg_self_hit = _RANDOM[4'h4][12];
        meta_reg_self_way = _RANDOM[4'h4][16:13];
        meta_reg_self_tag = {_RANDOM[4'h4][31:17], _RANDOM[4'h5][0]};
        meta_reg_self_error = _RANDOM[4'h5][1];
        meta_reg_clients_states_0_state = _RANDOM[4'h5][3:2];
        meta_reg_clients_states_0_hit = _RANDOM[4'h5][4];
        meta_reg_clients_states_1_state = _RANDOM[4'h5][6:5];
        meta_reg_clients_states_1_hit = _RANDOM[4'h5][7];
        meta_reg_clients_states_2_state = _RANDOM[4'h5][9:8];
        meta_reg_clients_states_2_hit = _RANDOM[4'h5][10];
        meta_reg_clients_states_3_state = _RANDOM[4'h5][12:11];
        meta_reg_clients_states_3_hit = _RANDOM[4'h5][13];
        meta_reg_clients_tag = _RANDOM[4'h5][30:15];
        meta_reg_clients_way = {_RANDOM[4'h5][31], _RANDOM[4'h6][2:0]};
        meta_reg_clients_error = _RANDOM[4'h6][3];
        meta_valid = _RANDOM[4'h7][7];
        promoteT_safe = _RANDOM[4'h7][9];
        gotT = _RANDOM[4'h7][10];
        a_do_release = _RANDOM[4'h7][12];
        a_do_probe = _RANDOM[4'h7][13];
        probe_dirty = _RANDOM[4'h7][14];
        probes_done = _RANDOM[4'h7][18:15];
        highest_perm_reg_reg = _RANDOM[4'h7][20:19];
        inv_self_dir = _RANDOM[4'h7][22];
        client_probeack_param_vec_reg_0 = _RANDOM[4'h7][25:23];
        client_probeack_param_vec_reg_1 = _RANDOM[4'h7][28:26];
        client_probeack_param_vec_reg_2 = _RANDOM[4'h7][31:29];
        client_probeack_param_vec_reg_3 = _RANDOM[4'h8][2:0];
        transmit_from_other_client_reg = _RANDOM[4'h8][3];
        releaseThrough = _RANDOM[4'h8][4];
        releaseDrop = _RANDOM[4'h8][5];
        probeAckDataThrough = _RANDOM[4'h8][6];
        probeAckDataDrop = _RANDOM[4'h8][7];
        probeAckDataSave = _RANDOM[4'h8][8];
        someClientHasProbeAckData = _RANDOM[4'h8][9];
        nested_c_hit_reg = _RANDOM[4'h8][10];
        sink = _RANDOM[4'h8][13:11];
        bad_grant = _RANDOM[4'h8][14];
        s_acquire = _RANDOM[4'h8][16];
        s_probe = _RANDOM[4'h8][17];
        s_release = _RANDOM[4'h8][18];
        s_probeack = _RANDOM[4'h8][19];
        s_execute = _RANDOM[4'h8][20];
        s_grantack = _RANDOM[4'h8][21];
        s_wbselfdir = _RANDOM[4'h8][22];
        s_wbselftag = _RANDOM[4'h8][23];
        s_wbclientsdir = _RANDOM[4'h8][24];
        s_wbclientstag = _RANDOM[4'h8][25];
        s_transferput = _RANDOM[4'h8][26];
        s_writerelease = _RANDOM[4'h8][27];
        s_writeprobe = _RANDOM[4'h8][28];
        s_triggerprefetch = _RANDOM[4'h8][29];
        s_prefetchack = _RANDOM[4'h8][30];
        w_probeackfirst = _RANDOM[4'h8][31];
        w_probeacklast = _RANDOM[4'h9][0];
        w_probeack = _RANDOM[4'h9][1];
        w_grantfirst = _RANDOM[4'h9][2];
        w_grantlast = _RANDOM[4'h9][3];
        w_grant = _RANDOM[4'h9][4];
        w_releaseack = _RANDOM[4'h9][5];
        w_grantack = _RANDOM[4'h9][6];
        w_putwritten = _RANDOM[4'h9][7];
        w_sinkcack = _RANDOM[4'h9][8];
        acquire_flag = _RANDOM[4'h9][9];
        nestC_save_flag = _RANDOM[4'h9][10];
        nestC_saveDirty_flag = _RANDOM[4'h9][11];
        bypassPut_latch_reg = _RANDOM[4'h9][12];
        client_dir_conflict = _RANDOM[4'h9][13];
        probe_helper_finish = _RANDOM[4'h9][14];
        probe_clients = _RANDOM[4'h9][19:16];
        io_tasks_sink_c_bits_bufIdx_r = _RANDOM[4'h9][23:20];
        no_schedule_REG = _RANDOM[4'h9][24];
        preferCache_latch = _RANDOM[4'h9][27];
        transmit_from_other_client_latch = _RANDOM[4'h9][28];
        a_c_through_reg = _RANDOM[4'h9][29];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        req_valid = 1'h0;
        meta_valid = 1'h0;
        promoteT_safe = 1'h1;
        gotT = 1'h0;
        a_do_release = 1'h0;
        a_do_probe = 1'h0;
        probe_dirty = 1'h0;
        probes_done = 4'h0;
        highest_perm_reg_reg = 2'h0;
        inv_self_dir = 1'h0;
        client_probeack_param_vec_reg_0 = 3'h0;
        client_probeack_param_vec_reg_1 = 3'h0;
        client_probeack_param_vec_reg_2 = 3'h0;
        client_probeack_param_vec_reg_3 = 3'h0;
        transmit_from_other_client_reg = 1'h0;
        releaseThrough = 1'h0;
        releaseDrop = 1'h0;
        probeAckDataThrough = 1'h0;
        probeAckDataDrop = 1'h0;
        probeAckDataSave = 1'h0;
        someClientHasProbeAckData = 1'h0;
        nested_c_hit_reg = 1'h0;
        bad_grant = 1'h0;
        s_acquire = 1'h1;
        s_probe = 1'h1;
        s_release = 1'h1;
        s_probeack = 1'h1;
        s_execute = 1'h1;
        s_grantack = 1'h1;
        s_wbselfdir = 1'h1;
        s_wbselftag = 1'h1;
        s_wbclientsdir = 1'h1;
        s_wbclientstag = 1'h1;
        s_transferput = 1'h1;
        s_writerelease = 1'h1;
        s_writeprobe = 1'h1;
        s_triggerprefetch = 1'h1;
        s_prefetchack = 1'h1;
        w_probeackfirst = 1'h1;
        w_probeacklast = 1'h1;
        w_probeack = 1'h1;
        w_grantfirst = 1'h1;
        w_grantlast = 1'h1;
        w_grant = 1'h1;
        w_releaseack = 1'h1;
        w_grantack = 1'h1;
        w_putwritten = 1'h1;
        w_sinkcack = 1'h1;
        acquire_flag = 1'h0;
        nestC_save_flag = 1'h0;
        nestC_saveDirty_flag = 1'h0;
        bypassPut_latch_reg = 1'h0;
        probe_helper_finish = 1'h0;
        no_schedule_REG = 1'h1;
        preferCache_latch = 1'h0;
        transmit_from_other_client_latch = 1'h0;
        a_c_through_reg = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_status_valid = req_valid;
  assign io_status_bits_set = req_set;
  assign io_status_bits_tag = req_tag;
  assign io_status_bits_way = meta_self_way;
  assign io_status_bits_way_reg = meta_reg_self_way;
  assign io_status_bits_nestB =
    meta_valid & w_releaseack & w_probeacklast & s_writeprobe & w_sinkcack
    & (~w_grantfirst | client_dir_conflict & ~probe_helper_finish);
  assign io_status_bits_nestC =
    meta_valid & w_releaseack
    & (~w_probeackfirst | ~w_grantfirst | client_dir_conflict & ~probe_helper_finish);
  assign io_status_bits_will_grant_data =
    req_channel[0] & io_tasks_source_d_bits_opcode_0[0]
    & io_tasks_source_d_bits_useBypass_0;
  assign io_status_bits_will_save_data =
    req_channel[0] & _io_b_status_probeAckDataThrough_T_9 & ~acquirePermMiss;
  assign io_status_bits_will_free = will_be_free;
  assign io_ecc_valid =
    meta_valid
    & (self_ecc_err
       | (|{meta_reg_clients_states_0_hit,
            meta_reg_clients_states_1_hit,
            meta_reg_clients_states_2_hit,
            meta_reg_clients_states_3_hit}) & meta_reg_clients_error);
  assign io_ecc_bits_errCode = self_ecc_err ? 8'h1 : 8'h2;
  assign io_ecc_bits_addr = {30'h0, req_tag, req_set, req_off};
  assign io_tasks_sink_a_valid = 1'h0;
  assign io_tasks_sink_a_bits_sourceId = req_source;
  assign io_tasks_sink_a_bits_set = req_set;
  assign io_tasks_sink_a_bits_tag = req_tag;
  assign io_tasks_sink_a_bits_size = req_size;
  assign io_tasks_sink_a_bits_off = req_off;
  assign io_tasks_source_b_valid = io_tasks_source_b_valid_0;
  assign io_tasks_source_b_bits_set = req_set;
  assign io_tasks_source_b_bits_tag = req_tag;
  assign io_tasks_source_b_bits_param =
    req_channel[1]
      ? req_param
      : {1'h0,
         _probe_clients_T_1
           ? ((|req_param) ? 2'h2 : 2'h1)
           : req_fromCmoHelper
               ? (_x_probe_clients_T_12 ? 2'h1 : 2'h2)
               : req_needT ? 2'h2 : 2'h1};
  assign io_tasks_source_b_bits_clients = probe_clients;
  assign io_tasks_source_b_bits_needData =
    req_channel[0]
    & (_io_tasks_source_a_bits_param_T_1 | ~(|(req_opcode[2:1])) | _acquire_param_T_4
       | _probe_clients_T_1) & ~meta_self_hit | req_channel[1] & req_needProbeAckData;
  assign io_tasks_sink_c_valid = io_tasks_sink_c_valid_0;
  assign io_tasks_sink_c_bits_sourceId = 13'h0;
  assign io_tasks_sink_c_bits_set = req_set;
  assign io_tasks_sink_c_bits_tag = req_tag;
  assign io_tasks_sink_c_bits_size = req_size;
  assign io_tasks_sink_c_bits_way = meta_self_way;
  assign io_tasks_sink_c_bits_off = req_off;
  assign io_tasks_sink_c_bits_bufIdx =
    s_writeprobe ? req_bufIdx : io_tasks_sink_c_bits_bufIdx_r;
  assign io_tasks_sink_c_bits_opcode =
    s_writeprobe ? req_opcode : {1'h1, req_fromProbeHelper | req_fromCmoHelper, 1'h1};
  assign io_tasks_sink_c_bits_param = s_writeprobe ? req_param : probeack_param;
  assign io_tasks_sink_c_bits_source = io_id;
  assign io_tasks_sink_c_bits_save = s_writeprobe ? releaseSave : probeAckDataSave;
  assign io_tasks_sink_c_bits_drop = s_writeprobe ? releaseDrop : probeAckDataDrop;
  assign io_tasks_sink_c_bits_release =
    s_writeprobe ? releaseThrough : probeAckDataThrough;
  assign io_tasks_sink_c_bits_dirty =
    s_writeprobe
      ? req_dirty | _io_tasks_sink_c_bits_dirty_T_2
      : probe_dirty | _io_tasks_sink_c_bits_dirty_T_2;
  assign io_tasks_source_d_valid = io_tasks_source_d_valid_0;
  assign io_tasks_source_d_bits_sourceId = req_source;
  assign io_tasks_source_d_bits_set = req_set;
  assign io_tasks_source_d_bits_tag = req_tag;
  assign io_tasks_source_d_bits_channel = {req_channel[2], 1'h0, req_channel[0]};
  assign io_tasks_source_d_bits_opcode = io_tasks_source_d_bits_opcode_0;
  assign io_tasks_source_d_bits_param =
    req_acquire
      ? (req_param == 3'h1 | req_param == 3'h2
           ? 3'h0
           : (|req_param) ? req_param : {2'h0, ~req_promoteT})
      : req_param;
  assign io_tasks_source_d_bits_size = req_size;
  assign io_tasks_source_d_bits_way = meta_reg_self_way;
  assign io_tasks_source_d_bits_off = req_off;
  assign io_tasks_source_d_bits_useBypass = io_tasks_source_d_bits_useBypass_0;
  assign io_tasks_source_d_bits_bufIdx = req_bufIdx;
  assign io_tasks_source_d_bits_denied = bad_grant | _io_tasks_source_d_bits_denied_T;
  assign io_tasks_source_d_bits_sinkId = io_id;
  assign io_tasks_source_d_bits_bypassPut = bypassPut_latch_reg;
  assign io_tasks_source_d_bits_dirty =
    req_acquire
    & (meta_self_hit
         ? ~(~(|req_param) & ~req_promoteT)
           & (meta_self_dirty | probe_dirty | nestC_saveDirty)
         : probe_dirty | nestC_saveDirty);
  assign io_tasks_source_d_bits_isHit = meta_self_hit;
  assign io_tasks_source_a_valid = io_tasks_source_a_valid_0;
  assign io_tasks_source_a_bits_tag = req_tag;
  assign io_tasks_source_a_bits_set = req_set;
  assign io_tasks_source_a_bits_off = req_off;
  assign io_tasks_source_a_bits_mask = req_mask;
  assign io_tasks_source_a_bits_opcode = io_tasks_source_a_bits_opcode_0;
  assign io_tasks_source_a_bits_param =
    s_transferput
      ? (_io_tasks_source_a_bits_param_T_1
           ? 3'h0
           : _probe_clients_T_1
               ? {1'h0, req_needT ? (highest_perm_reg == 2'h1 ? 2'h2 : 2'h1) : 2'h0}
               : _acquire_param_T_4 & _io_tasks_source_d_bits_opcode_grantOp_T
                 | ~(|(req_opcode[2:1]))
                   ? 3'h1
                   : req_param)
      : req_param;
  assign io_tasks_source_a_bits_source = io_id;
  assign io_tasks_source_a_bits_bufIdx = req_bufIdx;
  assign io_tasks_source_a_bits_size = req_size;
  assign io_tasks_source_a_bits_needData = ~(&req_opcode) | req_size != 3'h6;
  assign io_tasks_source_a_bits_putData = bypassPut_latch_reg;
  assign io_tasks_source_a_bits_reqSource = _probe_clients_T_1 ? 4'hF : req_reqSource;
  assign io_tasks_source_c_valid = io_tasks_source_c_valid_0;
  assign io_tasks_source_c_bits_opcode =
    req_channel[1]
      ? {1'h1,
         req_fromProbeHelper,
         (probe_dirty & ~probeAckDataDrop | _io_tasks_sink_c_bits_dirty_T_2
          | req_needProbeAckData) & (|highest_perm)}
      : {2'h3, meta_self_dirty};
  assign io_tasks_source_c_bits_tag = req_channel[1] ? req_tag : meta_self_tag;
  assign io_tasks_source_c_bits_set = req_set;
  assign io_tasks_source_c_bits_param =
    req_channel[1]
      ? probeack_param
      : _replace_param_T == 4'hB
          ? 3'h3
          : _replace_param_T == 4'hD
              ? 3'h0
              : _replace_param_T == 4'hC
                  ? 3'h1
                  : _replace_param_T == 4'h7 | _replace_param_T == 4'h6
                      ? 3'h3
                      : _replace_param_T == 4'h5
                          ? 3'h4
                          : {1'h0, _replace_param_T == 4'h4, 1'h0};
  assign io_tasks_source_c_bits_source = io_id;
  assign io_tasks_source_c_bits_way = meta_reg_self_way;
  assign io_tasks_source_c_bits_dirty =
    req_channel[1] ? probe_dirty | _io_tasks_sink_c_bits_dirty_T_2 : meta_self_dirty;
  assign io_tasks_source_e_valid = io_tasks_source_e_valid_0;
  assign io_tasks_source_e_bits_sink = sink;
  assign io_tasks_prefetch_train_valid = ~s_triggerprefetch;
  assign io_tasks_prefetch_train_bits_tag = io_tasks_prefetch_resp_bits_tag_0;
  assign io_tasks_prefetch_train_bits_set = req_set;
  assign io_tasks_prefetch_train_bits_needT = req_needT;
  assign io_tasks_prefetch_train_bits_source = req_source;
  assign io_tasks_prefetch_resp_valid = io_tasks_prefetch_resp_valid_0;
  assign io_tasks_prefetch_resp_bits_tag = io_tasks_prefetch_resp_bits_tag_0;
  assign io_tasks_prefetch_resp_bits_set = req_set;
  assign io_tasks_dir_write_valid = io_tasks_dir_write_valid_0;
  assign io_tasks_dir_write_bits_set = req_set;
  assign io_tasks_dir_write_bits_way = meta_reg_self_way;
  assign io_tasks_dir_write_bits_data_dirty =
    ~bad_grant
    & ((req_channel[2]
          ? ~req_fromCmoHelper
            & (meta_self_hit & meta_self_dirty | req_dirty
               & (_new_clients_meta_3_state_T_6 | ~(|req_param) | req_param == 3'h3))
          : req_channel[1]
              ? req_fromProbeHelper & ~probeAckDataThrough
                & (meta_self_hit & meta_self_dirty | probe_dirty)
              : req_acquire
                  ? ~req_needT
                    & (meta_self_hit
                         ? ~req_promoteT & (meta_self_dirty | probe_dirty)
                         : probe_dirty)
                  : ~(|(req_opcode[2:1])) | probe_dirty | meta_self_hit & meta_self_dirty)
       | nested_c_hit);
  assign io_tasks_dir_write_bits_data_state =
    bad_grant
      ? meta_self_state
      : req_channel[2]
          ? (req_fromCmoHelper
               ? (_x_probe_clients_T_12
                    ? (meta_self_hit ? {meta_self_state[1], 1'h1} : meta_self_state)
                    : 2'h0)
               : req_param == 3'h2
                   ? {meta_self_hit & (&meta_self_state), 1'h1}
                   : req_param == 3'h1 | ~(|req_param)
                       ? 2'h3
                       : req_param == 3'h3 ? 2'h2 : meta_self_state)
          : req_channel[1]
              ? (meta_self_hit
                   ? (req_fromProbeHelper & ~probeAckDataThrough
                        ? {meta_self_state[1], 1'h1}
                        : meta_self_state[1] & ~(|req_param)
                            ? meta_self_state
                            : {1'h0,
                               (|meta_self_state) & _new_self_meta_clientStates_3_T_21})
                   : meta_self_state)
              : inv_self_dir
                  ? 2'h0
                  : req_needT
                      ? {1'h1, ~req_acquire}
                      : meta_self_hit
                          ? ((&meta_self_state)
                               ? {1'h1, ~((&_meta_no_clients_T_4) & req_acquire)}
                               : {meta_self_state == 2'h2, 1'h1})
                          : transmit_from_other_client
                              ? (gotT
                                   ? {1'h1, ~_new_self_meta_state_T_36}
                                   : highest_perm_reg)
                              : gotT ? {1'h1, ~_new_self_meta_state_T_36} : 2'h1;
  assign io_tasks_dir_write_bits_data_clientStates_0 =
    ~bad_grant | meta_self_hit & (|iam)
      ? (req_channel[2]
           ? (req_fromCmoHelper
                ? (meta_self_hit
                     ? {1'h0, (|meta_self_clientStates_0) & _x_probe_clients_T_12}
                     : meta_self_clientStates_0)
                : (|iam)
                    ? meta_reg_clients_states_0_state
                    : _new_clients_meta_3_state_T_6 | _new_clients_meta_3_state_T_7
                      | _new_clients_meta_3_state_T_9
                        ? 2'h0
                        : ~(|req_param) | _new_clients_meta_3_state_T_12
                            ? 2'h1
                            : meta_self_clientStates_0)
           : req_channel[1]
               ? (~meta_self_hit | meta_self_clientStates_0[1] & ~(|req_param)
                    ? meta_self_clientStates_0
                    : {1'h0,
                       (|meta_self_clientStates_0) & _new_self_meta_clientStates_3_T_21})
               : (|iam)
                   ? (req_acquire | ~(|(req_opcode[2:1]))
                        ? ((|req_param) | req_promoteT | ~(|(req_opcode[2:1]))
                             ? 2'h0
                             : {1'h0, _GEN_1})
                        : _io_tasks_source_a_bits_param_T_1
                            ? {1'h0, _GEN_1}
                            : (|_prefetch_miss_need_probe_T)
                                ? {1'h0, ~(|req_param) & _perm_after_probe_T_6}
                                : meta_reg_clients_states_0_state)
                   : req_acquire
                       ? {req_needT | req_promoteT, 1'h1}
                       : _io_tasks_source_a_bits_param_T_1
                           ? {1'h0, meta_reg_clients_states_0_hit}
                           : meta_reg_clients_states_0_hit
                               ? meta_reg_clients_states_0_state
                               : 2'h0)
      : meta_self_clientStates_0;
  assign io_tasks_dir_write_bits_data_clientStates_1 =
    ~bad_grant | meta_self_hit & _new_self_dir_clientStates_1_T
      ? (req_channel[2]
           ? (req_fromCmoHelper
                ? (meta_self_hit
                     ? {1'h0, (|meta_self_clientStates_1) & _x_probe_clients_T_12}
                     : meta_self_clientStates_1)
                : _new_clients_meta_1_state_T_5
                    ? (_new_clients_meta_3_state_T_6 | _new_clients_meta_3_state_T_7
                       | _new_clients_meta_3_state_T_9
                         ? 2'h0
                         : ~(|req_param) | _new_clients_meta_3_state_T_12
                             ? 2'h1
                             : meta_self_clientStates_1)
                    : meta_reg_clients_states_1_state)
           : req_channel[1]
               ? (~meta_self_hit | meta_self_clientStates_1[1] & ~(|req_param)
                    ? meta_self_clientStates_1
                    : {1'h0,
                       (|meta_self_clientStates_1) & _new_self_meta_clientStates_3_T_21})
               : _new_clients_meta_1_state_T_5
                   ? (req_acquire
                        ? {req_needT | req_promoteT, 1'h1}
                        : _io_tasks_source_a_bits_param_T_1
                            ? {1'h0, meta_reg_clients_states_1_hit}
                            : meta_reg_clients_states_1_hit
                                ? meta_reg_clients_states_1_state
                                : 2'h0)
                   : req_acquire | ~(|(req_opcode[2:1]))
                       ? ((|req_param) | req_promoteT | ~(|(req_opcode[2:1]))
                            ? 2'h0
                            : {1'h0, _GEN_2})
                       : _io_tasks_source_a_bits_param_T_1
                           ? {1'h0, _GEN_2}
                           : (|_prefetch_miss_need_probe_T)
                               ? {1'h0, ~(|req_param) & _perm_after_probe_T_13}
                               : meta_reg_clients_states_1_state)
      : meta_self_clientStates_1;
  assign io_tasks_dir_write_bits_data_clientStates_2 =
    ~bad_grant | meta_self_hit & _new_self_dir_clientStates_2_T
      ? (req_channel[2]
           ? (req_fromCmoHelper
                ? (meta_self_hit
                     ? {1'h0, (|meta_self_clientStates_2) & _x_probe_clients_T_12}
                     : meta_self_clientStates_2)
                : _new_clients_meta_2_state_T_5
                    ? (_new_clients_meta_3_state_T_6 | _new_clients_meta_3_state_T_7
                       | _new_clients_meta_3_state_T_9
                         ? 2'h0
                         : ~(|req_param) | _new_clients_meta_3_state_T_12
                             ? 2'h1
                             : meta_self_clientStates_2)
                    : meta_reg_clients_states_2_state)
           : req_channel[1]
               ? (~meta_self_hit | meta_self_clientStates_2[1] & ~(|req_param)
                    ? meta_self_clientStates_2
                    : {1'h0,
                       (|meta_self_clientStates_2) & _new_self_meta_clientStates_3_T_21})
               : _new_clients_meta_2_state_T_5
                   ? (req_acquire
                        ? {req_needT | req_promoteT, 1'h1}
                        : _io_tasks_source_a_bits_param_T_1
                            ? {1'h0, meta_reg_clients_states_2_hit}
                            : meta_reg_clients_states_2_hit
                                ? meta_reg_clients_states_2_state
                                : 2'h0)
                   : req_acquire | ~(|(req_opcode[2:1]))
                       ? ((|req_param) | req_promoteT | ~(|(req_opcode[2:1]))
                            ? 2'h0
                            : {1'h0, _GEN_3})
                       : _io_tasks_source_a_bits_param_T_1
                           ? {1'h0, _GEN_3}
                           : (|_prefetch_miss_need_probe_T)
                               ? {1'h0, ~(|req_param) & _perm_after_probe_T_20}
                               : meta_reg_clients_states_2_state)
      : meta_self_clientStates_2;
  assign io_tasks_dir_write_bits_data_clientStates_3 =
    ~bad_grant | meta_self_hit & _new_self_dir_clientStates_3_T
      ? (req_channel[2]
           ? (req_fromCmoHelper
                ? (meta_self_hit
                     ? {1'h0, (|meta_self_clientStates_3) & _x_probe_clients_T_12}
                     : meta_self_clientStates_3)
                : _new_clients_meta_3_state_T_5
                    ? (_new_clients_meta_3_state_T_6 | _new_clients_meta_3_state_T_7
                       | _new_clients_meta_3_state_T_9
                         ? 2'h0
                         : ~(|req_param) | _new_clients_meta_3_state_T_12
                             ? 2'h1
                             : meta_self_clientStates_3)
                    : meta_reg_clients_states_3_state)
           : req_channel[1]
               ? (~meta_self_hit | meta_self_clientStates_3[1] & ~(|req_param)
                    ? meta_self_clientStates_3
                    : {1'h0,
                       (|meta_self_clientStates_3) & _new_self_meta_clientStates_3_T_21})
               : _new_clients_meta_3_state_T_5
                   ? (req_acquire
                        ? {req_needT | req_promoteT, 1'h1}
                        : _io_tasks_source_a_bits_param_T_1
                            ? {1'h0, meta_reg_clients_states_3_hit}
                            : meta_reg_clients_states_3_hit
                                ? meta_reg_clients_states_3_state
                                : 2'h0)
                   : req_acquire | ~(|(req_opcode[2:1]))
                       ? ((|req_param) | req_promoteT | ~(|(req_opcode[2:1]))
                            ? 2'h0
                            : {1'h0, _GEN_4})
                       : _io_tasks_source_a_bits_param_T_1
                           ? {1'h0, _GEN_4}
                           : (|_prefetch_miss_need_probe_T)
                               ? {1'h0, ~(|req_param) & _perm_after_probe_T_27}
                               : meta_reg_clients_states_3_state)
      : meta_self_clientStates_3;
  assign io_tasks_dir_write_bits_data_prefetch = meta_self_prefetch | prefetch_miss;
  assign io_tasks_tag_write_valid = io_tasks_tag_write_valid_0;
  assign io_tasks_tag_write_bits_set = req_set;
  assign io_tasks_tag_write_bits_way = meta_reg_self_way;
  assign io_tasks_tag_write_bits_tag = req_tag;
  assign io_tasks_client_dir_write_valid = io_tasks_client_dir_write_valid_0;
  assign io_tasks_client_dir_write_bits_set = req_set;
  assign io_tasks_client_dir_write_bits_way = meta_reg_clients_way;
  assign io_tasks_client_dir_write_bits_data_0_state =
    req_channel[2]
      ? (req_fromCmoHelper
           ? (meta_clients_states_0_hit
                ? {1'h0, (|meta_clients_states_0_state) & _x_probe_clients_T_12}
                : meta_clients_states_0_state)
           : (|iam)
               ? meta_reg_clients_states_0_state
               : _new_clients_meta_3_state_T_6 | _new_clients_meta_3_state_T_7
                 | _new_clients_meta_3_state_T_9
                   ? 2'h0
                   : ~(|req_param) | _new_clients_meta_3_state_T_12
                       ? 2'h1
                       : meta_reg_clients_states_0_state)
      : req_channel[1]
          ? (meta_clients_states_0_hit
               ? {1'h0,
                  ~(|client_probeack_param_vec_0) | client_probeack_param_vec_0 == 3'h4}
               : meta_reg_clients_states_0_state)
          : _io_tasks_source_a_bits_param_T_1
              ? (meta_reg_clients_states_0_hit & a_do_probe
                   ? perm_after_probe_4
                   : meta_reg_clients_states_0_state)
              : (|iam)
                  ? (req_acquire | ~(|(req_opcode[2:1]))
                       ? (meta_reg_clients_states_0_hit & a_do_probe
                            ? ((|req_param) | req_promoteT | ~(|(req_opcode[2:1]))
                                 ? 2'h0
                                 : perm_after_probe_4)
                            : meta_reg_clients_states_0_state)
                       : (|_prefetch_miss_need_probe_T)
                           ? {1'h0, ~(|req_param) & _perm_after_probe_T_34}
                           : meta_reg_clients_states_0_state)
                  : req_acquire
                      ? {req_needT | req_promoteT, 1'h1}
                      : meta_reg_clients_states_0_state;
  assign io_tasks_client_dir_write_bits_data_1_state =
    req_channel[2]
      ? (req_fromCmoHelper
           ? (meta_clients_states_1_hit
                ? {1'h0, (|meta_clients_states_1_state) & _x_probe_clients_T_12}
                : meta_clients_states_1_state)
           : _new_clients_meta_1_state_T_5
               ? (_new_clients_meta_3_state_T_6 | _new_clients_meta_3_state_T_7
                  | _new_clients_meta_3_state_T_9
                    ? 2'h0
                    : ~(|req_param) | _new_clients_meta_3_state_T_12
                        ? 2'h1
                        : meta_reg_clients_states_1_state)
               : meta_reg_clients_states_1_state)
      : req_channel[1]
          ? (meta_clients_states_1_hit
               ? {1'h0,
                  ~(|client_probeack_param_vec_1) | client_probeack_param_vec_1 == 3'h4}
               : meta_reg_clients_states_1_state)
          : _io_tasks_source_a_bits_param_T_1
              ? (meta_reg_clients_states_1_hit & a_do_probe
                   ? perm_after_probe_5
                   : meta_reg_clients_states_1_state)
              : _new_clients_meta_1_state_T_5
                  ? (req_acquire
                       ? {req_needT | req_promoteT, 1'h1}
                       : meta_reg_clients_states_1_state)
                  : req_acquire | ~(|(req_opcode[2:1]))
                      ? (meta_reg_clients_states_1_hit & a_do_probe
                           ? ((|req_param) | req_promoteT | ~(|(req_opcode[2:1]))
                                ? 2'h0
                                : perm_after_probe_5)
                           : meta_reg_clients_states_1_state)
                      : (|_prefetch_miss_need_probe_T)
                          ? {1'h0, ~(|req_param) & _perm_after_probe_T_41}
                          : meta_reg_clients_states_1_state;
  assign io_tasks_client_dir_write_bits_data_2_state =
    req_channel[2]
      ? (req_fromCmoHelper
           ? (meta_clients_states_2_hit
                ? {1'h0, (|meta_clients_states_2_state) & _x_probe_clients_T_12}
                : meta_clients_states_2_state)
           : _new_clients_meta_2_state_T_5
               ? (_new_clients_meta_3_state_T_6 | _new_clients_meta_3_state_T_7
                  | _new_clients_meta_3_state_T_9
                    ? 2'h0
                    : ~(|req_param) | _new_clients_meta_3_state_T_12
                        ? 2'h1
                        : meta_reg_clients_states_2_state)
               : meta_reg_clients_states_2_state)
      : req_channel[1]
          ? (meta_clients_states_2_hit
               ? {1'h0,
                  ~(|client_probeack_param_vec_2) | client_probeack_param_vec_2 == 3'h4}
               : meta_reg_clients_states_2_state)
          : _io_tasks_source_a_bits_param_T_1
              ? (meta_reg_clients_states_2_hit & a_do_probe
                   ? perm_after_probe_6
                   : meta_reg_clients_states_2_state)
              : _new_clients_meta_2_state_T_5
                  ? (req_acquire
                       ? {req_needT | req_promoteT, 1'h1}
                       : meta_reg_clients_states_2_state)
                  : req_acquire | ~(|(req_opcode[2:1]))
                      ? (meta_reg_clients_states_2_hit & a_do_probe
                           ? ((|req_param) | req_promoteT | ~(|(req_opcode[2:1]))
                                ? 2'h0
                                : perm_after_probe_6)
                           : meta_reg_clients_states_2_state)
                      : (|_prefetch_miss_need_probe_T)
                          ? {1'h0, ~(|req_param) & _perm_after_probe_T_48}
                          : meta_reg_clients_states_2_state;
  assign io_tasks_client_dir_write_bits_data_3_state =
    req_channel[2]
      ? (req_fromCmoHelper
           ? (meta_clients_states_3_hit
                ? {1'h0, (|meta_clients_states_3_state) & _x_probe_clients_T_12}
                : meta_clients_states_3_state)
           : _new_clients_meta_3_state_T_5
               ? (_new_clients_meta_3_state_T_6 | _new_clients_meta_3_state_T_7
                  | _new_clients_meta_3_state_T_9
                    ? 2'h0
                    : ~(|req_param) | _new_clients_meta_3_state_T_12
                        ? 2'h1
                        : meta_reg_clients_states_3_state)
               : meta_reg_clients_states_3_state)
      : req_channel[1]
          ? (meta_clients_states_3_hit
               ? {1'h0,
                  ~(|client_probeack_param_vec_3) | client_probeack_param_vec_3 == 3'h4}
               : meta_reg_clients_states_3_state)
          : _io_tasks_source_a_bits_param_T_1
              ? (meta_reg_clients_states_3_hit & a_do_probe
                   ? perm_after_probe_7
                   : meta_reg_clients_states_3_state)
              : _new_clients_meta_3_state_T_5
                  ? (req_acquire
                       ? {req_needT | req_promoteT, 1'h1}
                       : meta_reg_clients_states_3_state)
                  : req_acquire | ~(|(req_opcode[2:1]))
                      ? (meta_reg_clients_states_3_hit & a_do_probe
                           ? ((|req_param) | req_promoteT | ~(|(req_opcode[2:1]))
                                ? 2'h0
                                : perm_after_probe_7)
                           : meta_reg_clients_states_3_state)
                      : (|_prefetch_miss_need_probe_T)
                          ? {1'h0, ~(|req_param) & _perm_after_probe_T_55}
                          : meta_reg_clients_states_3_state;
  assign io_tasks_client_tag_write_valid = io_tasks_client_tag_write_valid_0;
  assign io_tasks_client_tag_write_bits_set = req_set;
  assign io_tasks_client_tag_write_bits_way = meta_reg_clients_way;
  assign io_tasks_client_tag_write_bits_tag = req_tag;
  assign io_c_status_releaseThrough =
    _nestedReleaseDataSave_T & nest_c_set_match
    & (a_c_through | req_channel[1]
       & (nest_c_tag_match & ~meta_self_hit | nest_c_way_match
          & meta_self_hit != nest_c_tag_match));
  assign io_b_status_probeAckDataThrough =
    req_valid & io_b_status_set == req_set & io_b_status_tag != req_tag
    & io_b_status_way == meta_self_way & io_b_status_nestedProbeAckData & req_channel[0]
    & _io_b_status_probeAckDataThrough_T_9 & ~acquirePermMiss;
  assign io_is_nestedReleaseData = req_channel[2] & req_valid;
  assign io_is_nestedProbeAckData = req_channel[1] & req_valid;
  assign io_probeHelperFinish =
    req_channel[1] & req_fromProbeHelper & no_schedule & no_wait;
  assign io_metaValid = meta_valid | io_dirResult_valid;
  assign io_reqDirty = req_dirty & req_valid;
endmodule

