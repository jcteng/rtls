// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module FPToVecDecoder(
  input  [31:0] io_instr,
  output [1:0]  io_vpuCtrl_vsew,
  output [2:0]  io_vpuCtrl_vlmul,
  output        io_vpuCtrl_vm,
  output        io_vpuCtrl_fpu_isFpToVecInst,
  output [2:0]  io_vpuCtrl_nf,
  output [1:0]  io_vpuCtrl_veew,
  output        io_vpuCtrl_isReverse
);

  wire [13:0] _GEN = {io_instr[31:25], io_instr[6:0]};
  wire [16:0] _GEN_0 = {io_instr[31:25], io_instr[14:12], io_instr[6:0]};
  wire [18:0] _GEN_1 = {io_instr[31:20], io_instr[6:0]};
  wire [8:0]  _GEN_2 = {io_instr[26:25], io_instr[6:0]};
  wire [21:0] _GEN_3 = {io_instr[31:20], io_instr[14:12], io_instr[6:0]};
  wire        isFP32Instr =
    _GEN == 14'h53 | _GEN == 14'h253 | _GEN_0 == 17'h14153 | _GEN_0 == 17'h140D3
    | _GEN_0 == 17'h14053 | _GEN_0 == 17'h5053 | _GEN_0 == 17'h50D3 | _GEN == 14'h453
    | _GEN == 14'h653 | _GEN_1 == 19'h2C053 | _GEN_2 == 9'h43 | _GEN_2 == 9'h47
    | _GEN_2 == 9'h4F | _GEN_2 == 9'h4B | _GEN_3 == 22'h3800D3 | _GEN_0 == 17'h4053
    | _GEN_0 == 17'h4153 | _GEN_0 == 17'h40D3;
  assign io_vpuCtrl_vsew =
    {1'h1,
     ~(isFP32Instr | _GEN_1 == 19'h60053 | _GEN_1 == 19'h600D3 | _GEN_1 == 19'h60153
       | _GEN_1 == 19'h601D3 | _GEN_1 == 19'h61053 | _GEN_1 == 19'h610D3
       | _GEN_1 == 19'h200D3 | _GEN_1 == 19'h21053 | _GEN_3 == 22'h380053)};
  assign io_vpuCtrl_vlmul =
    {2'h3,
     ~(isFP32Instr | _GEN_1 == 19'h60053 | _GEN_1 == 19'h600D3 | _GEN_3 == 22'h380053)};
  assign io_vpuCtrl_vm = io_instr[25];
  assign io_vpuCtrl_fpu_isFpToVecInst =
    _GEN == 14'h53 | _GEN == 14'h253 | _GEN == 14'hD3 | _GEN == 14'h2D3
    | _GEN_0 == 17'h14153 | _GEN_0 == 17'h140D3 | _GEN_0 == 17'h14053
    | _GEN_0 == 17'h14553 | _GEN_0 == 17'h144D3 | _GEN_0 == 17'h14453 | _GEN_0 == 17'h5053
    | _GEN_0 == 17'h50D3 | _GEN_0 == 17'h5453 | _GEN_0 == 17'h54D3 | _GEN == 14'h453
    | _GEN == 14'h4D3 | _GEN == 14'h653 | _GEN == 14'h6D3 | _GEN_1 == 19'h2C053
    | _GEN_1 == 19'h2D053 | _GEN_2 == 9'h43 | _GEN_2 == 9'h47 | _GEN_2 == 9'h4F
    | _GEN_2 == 9'h4B | _GEN_2 == 9'hC3 | _GEN_2 == 9'hC7 | _GEN_2 == 9'hCF
    | _GEN_2 == 9'hCB | _GEN_3 == 22'h3800D3 | _GEN_3 == 22'h3880D3 | _GEN_0 == 17'h4053
    | _GEN_0 == 17'h4453 | _GEN_0 == 17'h4153 | _GEN_0 == 17'h4553 | _GEN_0 == 17'h40D3
    | _GEN_0 == 17'h44D3 | _GEN_1 == 19'h60053 | _GEN_1 == 19'h600D3 | _GEN_1 == 19'h60153
    | _GEN_1 == 19'h601D3 | _GEN_1 == 19'h61053 | _GEN_1 == 19'h610D3
    | _GEN_1 == 19'h61153 | _GEN_1 == 19'h611D3 | _GEN_1 == 19'h200D3
    | _GEN_1 == 19'h21053 | _GEN_3 == 22'h380053 | _GEN_3 == 22'h388053;
  assign io_vpuCtrl_nf = io_instr[31:29];
  assign io_vpuCtrl_veew = io_instr[13:12];
  assign io_vpuCtrl_isReverse =
    _GEN == 14'h53 | _GEN == 14'h253 | _GEN == 14'hD3 | _GEN == 14'h2D3
    | _GEN_0 == 17'h14153 | _GEN_0 == 17'h140D3 | _GEN_0 == 17'h14053
    | _GEN_0 == 17'h14553 | _GEN_0 == 17'h144D3 | _GEN_0 == 17'h14453 | _GEN_0 == 17'h5053
    | _GEN_0 == 17'h50D3 | _GEN_0 == 17'h5453 | _GEN_0 == 17'h54D3 | _GEN == 14'h453
    | _GEN == 14'h4D3 | _GEN == 14'h653 | _GEN == 14'h6D3 | _GEN_1 == 19'h2C053
    | _GEN_1 == 19'h2D053 | _GEN_2 == 9'h43 | _GEN_2 == 9'h47 | _GEN_2 == 9'h4F
    | _GEN_2 == 9'h4B | _GEN_2 == 9'hC3 | _GEN_2 == 9'hC7 | _GEN_2 == 9'hCF
    | _GEN_2 == 9'hCB | _GEN_3 == 22'h3800D3 | _GEN_3 == 22'h3880D3 | _GEN_0 == 17'h4053
    | _GEN_0 == 17'h4453 | _GEN_0 == 17'h4153 | _GEN_0 == 17'h4553 | _GEN_0 == 17'h40D3
    | _GEN_0 == 17'h44D3;
endmodule

