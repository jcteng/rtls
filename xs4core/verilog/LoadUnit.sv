// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module LoadUnit(
  input          clock,
  input          reset,
  input          io_redirect_valid,
  input          io_redirect_bits_robIdx_flag,
  input  [7:0]   io_redirect_bits_robIdx_value,
  input          io_redirect_bits_level,
  input          io_csrCtrl_ldld_vio_check_enable,
  output         io_ldin_ready,
  input          io_ldin_valid,
  input          io_ldin_bits_uop_preDecodeInfo_isRVC,
  input          io_ldin_bits_uop_ftqPtr_flag,
  input  [5:0]   io_ldin_bits_uop_ftqPtr_value,
  input  [3:0]   io_ldin_bits_uop_ftqOffset,
  input  [34:0]  io_ldin_bits_uop_fuType,
  input  [8:0]   io_ldin_bits_uop_fuOpType,
  input          io_ldin_bits_uop_rfWen,
  input          io_ldin_bits_uop_fpWen,
  input  [31:0]  io_ldin_bits_uop_imm,
  input  [7:0]   io_ldin_bits_uop_pdest,
  input          io_ldin_bits_uop_robIdx_flag,
  input  [7:0]   io_ldin_bits_uop_robIdx_value,
  input          io_ldin_bits_uop_storeSetHit,
  input          io_ldin_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_ldin_bits_uop_waitForRobIdx_value,
  input          io_ldin_bits_uop_loadWaitBit,
  input          io_ldin_bits_uop_loadWaitStrict,
  input          io_ldin_bits_uop_lqIdx_flag,
  input  [6:0]   io_ldin_bits_uop_lqIdx_value,
  input          io_ldin_bits_uop_sqIdx_flag,
  input  [5:0]   io_ldin_bits_uop_sqIdx_value,
  input  [63:0]  io_ldin_bits_src_0,
  input          io_ldout_ready,
  output         io_ldout_valid,
  output         io_ldout_bits_uop_exceptionVec_4,
  output         io_ldout_bits_uop_exceptionVec_5,
  output         io_ldout_bits_uop_exceptionVec_13,
  output         io_ldout_bits_uop_exceptionVec_21,
  output [34:0]  io_ldout_bits_uop_fuType,
  output         io_ldout_bits_uop_rfWen,
  output         io_ldout_bits_uop_fpWen,
  output         io_ldout_bits_uop_flushPipe,
  output [7:0]   io_ldout_bits_uop_pdest,
  output         io_ldout_bits_uop_robIdx_flag,
  output [7:0]   io_ldout_bits_uop_robIdx_value,
  output         io_ldout_bits_uop_replayInst,
  output [63:0]  io_ldout_bits_data,
  output         io_vecldin_ready,
  input          io_vecldin_valid,
  input  [40:0]  io_vecldin_bits_vaddr,
  input  [15:0]  io_vecldin_bits_mask,
  input  [3:0]   io_vecldin_bits_reg_offset,
  input  [2:0]   io_vecldin_bits_alignedType,
  input          io_vecldin_bits_vecActive,
  input          io_vecldin_bits_uop_preDecodeInfo_isRVC,
  input          io_vecldin_bits_uop_ftqPtr_flag,
  input  [5:0]   io_vecldin_bits_uop_ftqPtr_value,
  input  [3:0]   io_vecldin_bits_uop_ftqOffset,
  input  [34:0]  io_vecldin_bits_uop_fuType,
  input  [8:0]   io_vecldin_bits_uop_fuOpType,
  input          io_vecldin_bits_uop_rfWen,
  input          io_vecldin_bits_uop_fpWen,
  input  [6:0]   io_vecldin_bits_uop_uopIdx,
  input  [7:0]   io_vecldin_bits_uop_pdest,
  input          io_vecldin_bits_uop_robIdx_flag,
  input  [7:0]   io_vecldin_bits_uop_robIdx_value,
  input          io_vecldin_bits_uop_storeSetHit,
  input          io_vecldin_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_vecldin_bits_uop_waitForRobIdx_value,
  input          io_vecldin_bits_uop_loadWaitBit,
  input          io_vecldin_bits_uop_loadWaitStrict,
  input          io_vecldin_bits_uop_lqIdx_flag,
  input  [6:0]   io_vecldin_bits_uop_lqIdx_value,
  input          io_vecldin_bits_uop_sqIdx_flag,
  input  [5:0]   io_vecldin_bits_uop_sqIdx_value,
  input          io_vecldin_bits_usSecondInv,
  input  [3:0]   io_vecldin_bits_mBIndex,
  input  [7:0]   io_vecldin_bits_elemIdx,
  input  [7:0]   io_vecldin_bits_elemIdxInsideVd,
  output         io_vecldout_valid,
  output [3:0]   io_vecldout_bits_mBIndex,
  output         io_vecldout_bits_hit,
  output         io_vecldout_bits_exceptionVec_4,
  output         io_vecldout_bits_exceptionVec_5,
  output         io_vecldout_bits_exceptionVec_13,
  output         io_vecldout_bits_exceptionVec_21,
  output [40:0]  io_vecldout_bits_vaddr,
  output         io_vecldout_bits_usSecondInv,
  output [7:0]   io_vecldout_bits_elemIdx,
  output [15:0]  io_vecldout_bits_mask,
  output [2:0]   io_vecldout_bits_alignedType,
  output [3:0]   io_vecldout_bits_reg_offset,
  output [7:0]   io_vecldout_bits_elemIdxInsideVd,
  output [127:0] io_vecldout_bits_vecdata,
  output         io_tlb_req_valid,
  output [40:0]  io_tlb_req_bits_vaddr,
  output [2:0]   io_tlb_req_bits_cmd,
  output         io_tlb_req_bits_hyperinst,
  output         io_tlb_req_bits_hlvx,
  output         io_tlb_req_bits_no_translate,
  output [35:0]  io_tlb_req_bits_pmp_addr,
  output         io_tlb_req_bits_debug_robIdx_flag,
  output [7:0]   io_tlb_req_bits_debug_robIdx_value,
  output         io_tlb_req_kill,
  input          io_tlb_resp_valid,
  input  [35:0]  io_tlb_resp_bits_paddr_0,
  input  [35:0]  io_tlb_resp_bits_paddr_1,
  input  [40:0]  io_tlb_resp_bits_gpaddr_0,
  input          io_tlb_resp_bits_miss,
  input          io_tlb_resp_bits_excp_0_gpf_ld,
  input          io_tlb_resp_bits_excp_0_pf_ld,
  input          io_tlb_resp_bits_excp_0_af_ld,
  input          io_pmp_ld,
  input          io_pmp_mmio,
  input          io_dcache_req_ready,
  output         io_dcache_req_valid,
  output [4:0]   io_dcache_req_bits_cmd,
  output [40:0]  io_dcache_req_bits_vaddr,
  output [3:0]   io_dcache_req_bits_instrtype,
  output         io_dcache_req_bits_lqIdx_flag,
  output [6:0]   io_dcache_req_bits_lqIdx_value,
  input  [127:0] io_dcache_resp_bits_data_delayed,
  input          io_dcache_resp_bits_miss,
  input  [3:0]   io_dcache_resp_bits_mshr_id,
  input  [2:0]   io_dcache_resp_bits_meta_prefetch,
  input          io_dcache_resp_bits_handled,
  output         io_dcache_s1_kill,
  output         io_dcache_s2_kill,
  output         io_dcache_is128Req,
  output [2:0]   io_dcache_pf_source,
  output [35:0]  io_dcache_s1_paddr_dup_lsu,
  output [35:0]  io_dcache_s1_paddr_dup_dcache,
  input          io_dcache_s2_bank_conflict,
  input          io_dcache_s2_mq_nack,
  output [40:0]  io_sbuffer_vaddr,
  output [35:0]  io_sbuffer_paddr,
  output         io_sbuffer_valid,
  input          io_sbuffer_forwardMask_0,
  input          io_sbuffer_forwardMask_1,
  input          io_sbuffer_forwardMask_2,
  input          io_sbuffer_forwardMask_3,
  input          io_sbuffer_forwardMask_4,
  input          io_sbuffer_forwardMask_5,
  input          io_sbuffer_forwardMask_6,
  input          io_sbuffer_forwardMask_7,
  input          io_sbuffer_forwardMask_8,
  input          io_sbuffer_forwardMask_9,
  input          io_sbuffer_forwardMask_10,
  input          io_sbuffer_forwardMask_11,
  input          io_sbuffer_forwardMask_12,
  input          io_sbuffer_forwardMask_13,
  input          io_sbuffer_forwardMask_14,
  input          io_sbuffer_forwardMask_15,
  input  [7:0]   io_sbuffer_forwardData_0,
  input  [7:0]   io_sbuffer_forwardData_1,
  input  [7:0]   io_sbuffer_forwardData_2,
  input  [7:0]   io_sbuffer_forwardData_3,
  input  [7:0]   io_sbuffer_forwardData_4,
  input  [7:0]   io_sbuffer_forwardData_5,
  input  [7:0]   io_sbuffer_forwardData_6,
  input  [7:0]   io_sbuffer_forwardData_7,
  input  [7:0]   io_sbuffer_forwardData_8,
  input  [7:0]   io_sbuffer_forwardData_9,
  input  [7:0]   io_sbuffer_forwardData_10,
  input  [7:0]   io_sbuffer_forwardData_11,
  input  [7:0]   io_sbuffer_forwardData_12,
  input  [7:0]   io_sbuffer_forwardData_13,
  input  [7:0]   io_sbuffer_forwardData_14,
  input  [7:0]   io_sbuffer_forwardData_15,
  input          io_sbuffer_matchInvalid,
  input          io_lsq_ldin_ready,
  output         io_lsq_ldin_valid,
  output         io_lsq_ldin_bits_uop_exceptionVec_4,
  output         io_lsq_ldin_bits_uop_exceptionVec_5,
  output         io_lsq_ldin_bits_uop_exceptionVec_13,
  output         io_lsq_ldin_bits_uop_exceptionVec_21,
  output         io_lsq_ldin_bits_uop_preDecodeInfo_isRVC,
  output         io_lsq_ldin_bits_uop_ftqPtr_flag,
  output [5:0]   io_lsq_ldin_bits_uop_ftqPtr_value,
  output [3:0]   io_lsq_ldin_bits_uop_ftqOffset,
  output [34:0]  io_lsq_ldin_bits_uop_fuType,
  output [8:0]   io_lsq_ldin_bits_uop_fuOpType,
  output         io_lsq_ldin_bits_uop_rfWen,
  output         io_lsq_ldin_bits_uop_fpWen,
  output [6:0]   io_lsq_ldin_bits_uop_uopIdx,
  output [7:0]   io_lsq_ldin_bits_uop_pdest,
  output         io_lsq_ldin_bits_uop_robIdx_flag,
  output [7:0]   io_lsq_ldin_bits_uop_robIdx_value,
  output         io_lsq_ldin_bits_uop_storeSetHit,
  output         io_lsq_ldin_bits_uop_waitForRobIdx_flag,
  output [7:0]   io_lsq_ldin_bits_uop_waitForRobIdx_value,
  output         io_lsq_ldin_bits_uop_loadWaitBit,
  output         io_lsq_ldin_bits_uop_loadWaitStrict,
  output         io_lsq_ldin_bits_uop_lqIdx_flag,
  output [6:0]   io_lsq_ldin_bits_uop_lqIdx_value,
  output         io_lsq_ldin_bits_uop_sqIdx_flag,
  output [5:0]   io_lsq_ldin_bits_uop_sqIdx_value,
  output         io_lsq_ldin_bits_uop_replayInst,
  output [40:0]  io_lsq_ldin_bits_vaddr,
  output [35:0]  io_lsq_ldin_bits_paddr,
  output [40:0]  io_lsq_ldin_bits_gpaddr,
  output [15:0]  io_lsq_ldin_bits_mask,
  output         io_lsq_ldin_bits_miss,
  output         io_lsq_ldin_bits_tlbMiss,
  output         io_lsq_ldin_bits_mmio,
  output         io_lsq_ldin_bits_isvec,
  output         io_lsq_ldin_bits_is128bit,
  output         io_lsq_ldin_bits_usSecondInv,
  output [7:0]   io_lsq_ldin_bits_elemIdx,
  output [2:0]   io_lsq_ldin_bits_alignedType,
  output [3:0]   io_lsq_ldin_bits_mbIndex,
  output [3:0]   io_lsq_ldin_bits_reg_offset,
  output [7:0]   io_lsq_ldin_bits_elemIdxInsideVd,
  output         io_lsq_ldin_bits_vecActive,
  output         io_lsq_ldin_bits_isLoadReplay,
  output         io_lsq_ldin_bits_handledByMSHR,
  output         io_lsq_ldin_bits_dcacheRequireReplay,
  output [6:0]   io_lsq_ldin_bits_schedIndex,
  output [3:0]   io_lsq_ldin_bits_rep_info_mshr_id,
  output         io_lsq_ldin_bits_rep_info_full_fwd,
  output         io_lsq_ldin_bits_rep_info_data_inv_sq_idx_flag,
  output [5:0]   io_lsq_ldin_bits_rep_info_data_inv_sq_idx_value,
  output         io_lsq_ldin_bits_rep_info_addr_inv_sq_idx_flag,
  output [5:0]   io_lsq_ldin_bits_rep_info_addr_inv_sq_idx_value,
  output         io_lsq_ldin_bits_rep_info_last_beat,
  output         io_lsq_ldin_bits_rep_info_cause_0,
  output         io_lsq_ldin_bits_rep_info_cause_1,
  output         io_lsq_ldin_bits_rep_info_cause_2,
  output         io_lsq_ldin_bits_rep_info_cause_3,
  output         io_lsq_ldin_bits_rep_info_cause_4,
  output         io_lsq_ldin_bits_rep_info_cause_5,
  output         io_lsq_ldin_bits_rep_info_cause_6,
  output         io_lsq_ldin_bits_rep_info_cause_7,
  output         io_lsq_ldin_bits_rep_info_cause_8,
  output         io_lsq_ldin_bits_rep_info_cause_9,
  output [3:0]   io_lsq_ldin_bits_rep_info_tlb_id,
  output         io_lsq_ldin_bits_rep_info_tlb_full,
  output         io_lsq_ldin_bits_data_wen_dup_1,
  output         io_lsq_ldin_bits_data_wen_dup_5,
  output         io_lsq_uncache_ready,
  input          io_lsq_uncache_valid,
  input          io_lsq_uncache_bits_uop_exceptionVec_4,
  input          io_lsq_uncache_bits_uop_exceptionVec_5,
  input          io_lsq_uncache_bits_uop_exceptionVec_13,
  input          io_lsq_uncache_bits_uop_exceptionVec_21,
  input          io_lsq_uncache_bits_uop_preDecodeInfo_isRVC,
  input          io_lsq_uncache_bits_uop_ftqPtr_flag,
  input  [5:0]   io_lsq_uncache_bits_uop_ftqPtr_value,
  input  [3:0]   io_lsq_uncache_bits_uop_ftqOffset,
  input  [34:0]  io_lsq_uncache_bits_uop_fuType,
  input  [8:0]   io_lsq_uncache_bits_uop_fuOpType,
  input          io_lsq_uncache_bits_uop_rfWen,
  input          io_lsq_uncache_bits_uop_fpWen,
  input          io_lsq_uncache_bits_uop_flushPipe,
  input  [6:0]   io_lsq_uncache_bits_uop_uopIdx,
  input  [7:0]   io_lsq_uncache_bits_uop_pdest,
  input          io_lsq_uncache_bits_uop_robIdx_flag,
  input  [7:0]   io_lsq_uncache_bits_uop_robIdx_value,
  input          io_lsq_uncache_bits_uop_storeSetHit,
  input          io_lsq_uncache_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_lsq_uncache_bits_uop_waitForRobIdx_value,
  input          io_lsq_uncache_bits_uop_loadWaitBit,
  input          io_lsq_uncache_bits_uop_loadWaitStrict,
  input          io_lsq_uncache_bits_uop_lqIdx_flag,
  input  [6:0]   io_lsq_uncache_bits_uop_lqIdx_value,
  input          io_lsq_uncache_bits_uop_sqIdx_flag,
  input  [5:0]   io_lsq_uncache_bits_uop_sqIdx_value,
  input          io_lsq_uncache_bits_uop_replayInst,
  input  [63:0]  io_lsq_ld_raw_data_lqData,
  input  [8:0]   io_lsq_ld_raw_data_uop_fuOpType,
  input          io_lsq_ld_raw_data_uop_fpWen,
  input  [2:0]   io_lsq_ld_raw_data_addrOffset,
  output [40:0]  io_lsq_forward_vaddr,
  output [35:0]  io_lsq_forward_paddr,
  output [15:0]  io_lsq_forward_mask,
  output         io_lsq_forward_uop_waitForRobIdx_flag,
  output [7:0]   io_lsq_forward_uop_waitForRobIdx_value,
  output         io_lsq_forward_uop_loadWaitBit,
  output         io_lsq_forward_uop_loadWaitStrict,
  output         io_lsq_forward_uop_sqIdx_flag,
  output [5:0]   io_lsq_forward_uop_sqIdx_value,
  output         io_lsq_forward_valid,
  input          io_lsq_forward_forwardMask_0,
  input          io_lsq_forward_forwardMask_1,
  input          io_lsq_forward_forwardMask_2,
  input          io_lsq_forward_forwardMask_3,
  input          io_lsq_forward_forwardMask_4,
  input          io_lsq_forward_forwardMask_5,
  input          io_lsq_forward_forwardMask_6,
  input          io_lsq_forward_forwardMask_7,
  input          io_lsq_forward_forwardMask_8,
  input          io_lsq_forward_forwardMask_9,
  input          io_lsq_forward_forwardMask_10,
  input          io_lsq_forward_forwardMask_11,
  input          io_lsq_forward_forwardMask_12,
  input          io_lsq_forward_forwardMask_13,
  input          io_lsq_forward_forwardMask_14,
  input          io_lsq_forward_forwardMask_15,
  input  [7:0]   io_lsq_forward_forwardData_0,
  input  [7:0]   io_lsq_forward_forwardData_1,
  input  [7:0]   io_lsq_forward_forwardData_2,
  input  [7:0]   io_lsq_forward_forwardData_3,
  input  [7:0]   io_lsq_forward_forwardData_4,
  input  [7:0]   io_lsq_forward_forwardData_5,
  input  [7:0]   io_lsq_forward_forwardData_6,
  input  [7:0]   io_lsq_forward_forwardData_7,
  input  [7:0]   io_lsq_forward_forwardData_8,
  input  [7:0]   io_lsq_forward_forwardData_9,
  input  [7:0]   io_lsq_forward_forwardData_10,
  input  [7:0]   io_lsq_forward_forwardData_11,
  input  [7:0]   io_lsq_forward_forwardData_12,
  input  [7:0]   io_lsq_forward_forwardData_13,
  input  [7:0]   io_lsq_forward_forwardData_14,
  input  [7:0]   io_lsq_forward_forwardData_15,
  output         io_lsq_forward_sqIdx_flag,
  input          io_lsq_forward_dataInvalid,
  input          io_lsq_forward_matchInvalid,
  input          io_lsq_forward_addrInvalid,
  output [63:0]  io_lsq_forward_sqIdxMask,
  input          io_lsq_forward_dataInvalidSqIdx_flag,
  input  [5:0]   io_lsq_forward_dataInvalidSqIdx_value,
  input          io_lsq_forward_addrInvalidSqIdx_flag,
  input  [5:0]   io_lsq_forward_addrInvalidSqIdx_value,
  input          io_lsq_stld_nuke_query_req_ready,
  output         io_lsq_stld_nuke_query_req_valid,
  output         io_lsq_stld_nuke_query_req_bits_uop_preDecodeInfo_isRVC,
  output         io_lsq_stld_nuke_query_req_bits_uop_ftqPtr_flag,
  output [5:0]   io_lsq_stld_nuke_query_req_bits_uop_ftqPtr_value,
  output [3:0]   io_lsq_stld_nuke_query_req_bits_uop_ftqOffset,
  output [6:0]   io_lsq_stld_nuke_query_req_bits_uop_uopIdx,
  output         io_lsq_stld_nuke_query_req_bits_uop_robIdx_flag,
  output [7:0]   io_lsq_stld_nuke_query_req_bits_uop_robIdx_value,
  output         io_lsq_stld_nuke_query_req_bits_uop_sqIdx_flag,
  output [5:0]   io_lsq_stld_nuke_query_req_bits_uop_sqIdx_value,
  output [15:0]  io_lsq_stld_nuke_query_req_bits_mask,
  output [35:0]  io_lsq_stld_nuke_query_req_bits_paddr,
  output         io_lsq_stld_nuke_query_req_bits_data_valid,
  output         io_lsq_stld_nuke_query_revoke,
  input          io_lsq_ldld_nuke_query_req_ready,
  output         io_lsq_ldld_nuke_query_req_valid,
  output [6:0]   io_lsq_ldld_nuke_query_req_bits_uop_uopIdx,
  output         io_lsq_ldld_nuke_query_req_bits_uop_robIdx_flag,
  output [7:0]   io_lsq_ldld_nuke_query_req_bits_uop_robIdx_value,
  output         io_lsq_ldld_nuke_query_req_bits_uop_lqIdx_flag,
  output [6:0]   io_lsq_ldld_nuke_query_req_bits_uop_lqIdx_value,
  output [35:0]  io_lsq_ldld_nuke_query_req_bits_paddr,
  output         io_lsq_ldld_nuke_query_req_bits_data_valid,
  input          io_lsq_ldld_nuke_query_resp_valid,
  input          io_lsq_ldld_nuke_query_resp_bits_rep_frm_fetch,
  output         io_lsq_ldld_nuke_query_revoke,
  output         io_lsq_trigger_hitLoadAddrTriggerHitVec_0,
  output         io_lsq_trigger_hitLoadAddrTriggerHitVec_1,
  output         io_lsq_trigger_hitLoadAddrTriggerHitVec_2,
  output         io_lsq_trigger_hitLoadAddrTriggerHitVec_3,
  input          io_lsq_trigger_lqLoadAddrTriggerHitVec_0,
  input          io_lsq_trigger_lqLoadAddrTriggerHitVec_1,
  input          io_lsq_trigger_lqLoadAddrTriggerHitVec_2,
  input          io_lsq_trigger_lqLoadAddrTriggerHitVec_3,
  input          io_tl_d_channel_valid,
  input  [255:0] io_tl_d_channel_data,
  input  [3:0]   io_tl_d_channel_mshrid,
  input          io_tl_d_channel_last,
  output         io_forward_mshr_valid,
  output [3:0]   io_forward_mshr_mshrid,
  output [35:0]  io_forward_mshr_paddr,
  input          io_forward_mshr_forward_mshr,
  input  [7:0]   io_forward_mshr_forwardData_0,
  input  [7:0]   io_forward_mshr_forwardData_1,
  input  [7:0]   io_forward_mshr_forwardData_2,
  input  [7:0]   io_forward_mshr_forwardData_3,
  input  [7:0]   io_forward_mshr_forwardData_4,
  input  [7:0]   io_forward_mshr_forwardData_5,
  input  [7:0]   io_forward_mshr_forwardData_6,
  input  [7:0]   io_forward_mshr_forwardData_7,
  input  [7:0]   io_forward_mshr_forwardData_8,
  input  [7:0]   io_forward_mshr_forwardData_9,
  input  [7:0]   io_forward_mshr_forwardData_10,
  input  [7:0]   io_forward_mshr_forwardData_11,
  input  [7:0]   io_forward_mshr_forwardData_12,
  input  [7:0]   io_forward_mshr_forwardData_13,
  input  [7:0]   io_forward_mshr_forwardData_14,
  input  [7:0]   io_forward_mshr_forwardData_15,
  input          io_forward_mshr_forward_result_valid,
  input  [3:0]   io_tlb_hint_id,
  input          io_tlb_hint_full,
  input  [63:0]  io_trigger_0_tdata2,
  input  [1:0]   io_trigger_0_matchType,
  input          io_trigger_0_tEnable,
  output         io_trigger_0_addrHit,
  input  [63:0]  io_trigger_1_tdata2,
  input  [1:0]   io_trigger_1_matchType,
  input          io_trigger_1_tEnable,
  output         io_trigger_1_addrHit,
  input  [63:0]  io_trigger_2_tdata2,
  input  [1:0]   io_trigger_2_matchType,
  input          io_trigger_2_tEnable,
  output         io_trigger_2_addrHit,
  input  [63:0]  io_trigger_3_tdata2,
  input  [1:0]   io_trigger_3_matchType,
  input          io_trigger_3_tEnable,
  output         io_trigger_3_addrHit,
  output         io_prefetch_train_valid,
  output         io_prefetch_train_bits_uop_robIdx_flag,
  output [7:0]   io_prefetch_train_bits_uop_robIdx_value,
  output [40:0]  io_prefetch_train_bits_vaddr,
  output [35:0]  io_prefetch_train_bits_paddr,
  output         io_prefetch_train_bits_miss,
  output         io_prefetch_train_bits_isFirstIssue,
  output         io_prefetch_train_l1_valid,
  output         io_prefetch_train_l1_bits_uop_robIdx_flag,
  output [7:0]   io_prefetch_train_l1_bits_uop_robIdx_value,
  output [40:0]  io_prefetch_train_l1_bits_vaddr,
  output         io_prefetch_train_l1_bits_miss,
  output         io_prefetch_train_l1_bits_isFirstIssue,
  output [2:0]   io_prefetch_train_l1_bits_meta_prefetch,
  output         io_s1_prefetch_spec,
  output         io_s2_prefetch_spec,
  input          io_prefetch_req_valid,
  input  [35:0]  io_prefetch_req_bits_paddr,
  input  [1:0]   io_prefetch_req_bits_alias,
  input          io_prefetch_req_bits_confidence,
  input          io_prefetch_req_bits_is_store,
  input  [2:0]   io_prefetch_req_bits_pf_source_value,
  output         io_canAcceptLowConfPrefetch,
  output         io_canAcceptHighConfPrefetch,
  input          io_l2l_fwd_in_valid,
  output         io_wakeup_valid,
  output         io_wakeup_bits_rfWen,
  output         io_wakeup_bits_fpWen,
  output [7:0]   io_wakeup_bits_pdest,
  output         io_ldCancel_ld2Cancel,
  input          io_stld_nuke_query_0_valid,
  input          io_stld_nuke_query_0_bits_robIdx_flag,
  input  [7:0]   io_stld_nuke_query_0_bits_robIdx_value,
  input  [35:0]  io_stld_nuke_query_0_bits_paddr,
  input  [15:0]  io_stld_nuke_query_0_bits_mask,
  input          io_stld_nuke_query_0_bits_matchLine,
  input          io_stld_nuke_query_1_valid,
  input          io_stld_nuke_query_1_bits_robIdx_flag,
  input  [7:0]   io_stld_nuke_query_1_bits_robIdx_value,
  input  [35:0]  io_stld_nuke_query_1_bits_paddr,
  input  [15:0]  io_stld_nuke_query_1_bits_mask,
  input          io_stld_nuke_query_1_bits_matchLine,
  output         io_replay_ready,
  input          io_replay_valid,
  input          io_replay_bits_uop_preDecodeInfo_isRVC,
  input          io_replay_bits_uop_ftqPtr_flag,
  input  [5:0]   io_replay_bits_uop_ftqPtr_value,
  input  [3:0]   io_replay_bits_uop_ftqOffset,
  input  [34:0]  io_replay_bits_uop_fuType,
  input  [8:0]   io_replay_bits_uop_fuOpType,
  input          io_replay_bits_uop_rfWen,
  input          io_replay_bits_uop_fpWen,
  input  [6:0]   io_replay_bits_uop_uopIdx,
  input  [7:0]   io_replay_bits_uop_pdest,
  input          io_replay_bits_uop_robIdx_flag,
  input  [7:0]   io_replay_bits_uop_robIdx_value,
  input          io_replay_bits_uop_storeSetHit,
  input          io_replay_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_replay_bits_uop_waitForRobIdx_value,
  input          io_replay_bits_uop_loadWaitBit,
  input          io_replay_bits_uop_lqIdx_flag,
  input  [6:0]   io_replay_bits_uop_lqIdx_value,
  input          io_replay_bits_uop_sqIdx_flag,
  input  [5:0]   io_replay_bits_uop_sqIdx_value,
  input  [40:0]  io_replay_bits_vaddr,
  input  [15:0]  io_replay_bits_mask,
  input          io_replay_bits_isvec,
  input          io_replay_bits_is128bit,
  input          io_replay_bits_usSecondInv,
  input  [7:0]   io_replay_bits_elemIdx,
  input  [2:0]   io_replay_bits_alignedType,
  input  [3:0]   io_replay_bits_mbIndex,
  input  [3:0]   io_replay_bits_reg_offset,
  input  [7:0]   io_replay_bits_elemIdxInsideVd,
  input          io_replay_bits_vecActive,
  input  [3:0]   io_replay_bits_mshrid,
  input          io_replay_bits_forward_tlDchannel,
  input  [6:0]   io_replay_bits_schedIndex,
  output         io_s2_ptr_chasing,
  input          io_fast_rep_in_valid,
  input          io_fast_rep_in_bits_uop_preDecodeInfo_isRVC,
  input          io_fast_rep_in_bits_uop_ftqPtr_flag,
  input  [5:0]   io_fast_rep_in_bits_uop_ftqPtr_value,
  input  [3:0]   io_fast_rep_in_bits_uop_ftqOffset,
  input  [34:0]  io_fast_rep_in_bits_uop_fuType,
  input  [8:0]   io_fast_rep_in_bits_uop_fuOpType,
  input          io_fast_rep_in_bits_uop_rfWen,
  input          io_fast_rep_in_bits_uop_fpWen,
  input  [6:0]   io_fast_rep_in_bits_uop_uopIdx,
  input  [7:0]   io_fast_rep_in_bits_uop_pdest,
  input          io_fast_rep_in_bits_uop_robIdx_flag,
  input  [7:0]   io_fast_rep_in_bits_uop_robIdx_value,
  input          io_fast_rep_in_bits_uop_storeSetHit,
  input          io_fast_rep_in_bits_uop_waitForRobIdx_flag,
  input  [7:0]   io_fast_rep_in_bits_uop_waitForRobIdx_value,
  input          io_fast_rep_in_bits_uop_loadWaitBit,
  input          io_fast_rep_in_bits_uop_loadWaitStrict,
  input          io_fast_rep_in_bits_uop_lqIdx_flag,
  input  [6:0]   io_fast_rep_in_bits_uop_lqIdx_value,
  input          io_fast_rep_in_bits_uop_sqIdx_flag,
  input  [5:0]   io_fast_rep_in_bits_uop_sqIdx_value,
  input  [40:0]  io_fast_rep_in_bits_vaddr,
  input  [15:0]  io_fast_rep_in_bits_mask,
  input          io_fast_rep_in_bits_isvec,
  input          io_fast_rep_in_bits_is128bit,
  input          io_fast_rep_in_bits_usSecondInv,
  input  [7:0]   io_fast_rep_in_bits_elemIdx,
  input  [2:0]   io_fast_rep_in_bits_alignedType,
  input  [3:0]   io_fast_rep_in_bits_mbIndex,
  input  [3:0]   io_fast_rep_in_bits_reg_offset,
  input  [7:0]   io_fast_rep_in_bits_elemIdxInsideVd,
  input          io_fast_rep_in_bits_vecActive,
  input          io_fast_rep_in_bits_isLoadReplay,
  input          io_fast_rep_in_bits_delayedLoadError,
  input          io_fast_rep_in_bits_lateKill,
  input  [6:0]   io_fast_rep_in_bits_schedIndex,
  input  [3:0]   io_fast_rep_in_bits_rep_info_mshr_id,
  output         io_fast_rep_out_valid,
  output         io_fast_rep_out_bits_uop_preDecodeInfo_isRVC,
  output         io_fast_rep_out_bits_uop_ftqPtr_flag,
  output [5:0]   io_fast_rep_out_bits_uop_ftqPtr_value,
  output [3:0]   io_fast_rep_out_bits_uop_ftqOffset,
  output [34:0]  io_fast_rep_out_bits_uop_fuType,
  output [8:0]   io_fast_rep_out_bits_uop_fuOpType,
  output         io_fast_rep_out_bits_uop_rfWen,
  output         io_fast_rep_out_bits_uop_fpWen,
  output [6:0]   io_fast_rep_out_bits_uop_uopIdx,
  output [7:0]   io_fast_rep_out_bits_uop_pdest,
  output         io_fast_rep_out_bits_uop_robIdx_flag,
  output [7:0]   io_fast_rep_out_bits_uop_robIdx_value,
  output         io_fast_rep_out_bits_uop_storeSetHit,
  output         io_fast_rep_out_bits_uop_waitForRobIdx_flag,
  output [7:0]   io_fast_rep_out_bits_uop_waitForRobIdx_value,
  output         io_fast_rep_out_bits_uop_loadWaitBit,
  output         io_fast_rep_out_bits_uop_loadWaitStrict,
  output         io_fast_rep_out_bits_uop_lqIdx_flag,
  output [6:0]   io_fast_rep_out_bits_uop_lqIdx_value,
  output         io_fast_rep_out_bits_uop_sqIdx_flag,
  output [5:0]   io_fast_rep_out_bits_uop_sqIdx_value,
  output [40:0]  io_fast_rep_out_bits_vaddr,
  output [15:0]  io_fast_rep_out_bits_mask,
  output         io_fast_rep_out_bits_isvec,
  output         io_fast_rep_out_bits_is128bit,
  output         io_fast_rep_out_bits_usSecondInv,
  output [7:0]   io_fast_rep_out_bits_elemIdx,
  output [2:0]   io_fast_rep_out_bits_alignedType,
  output [3:0]   io_fast_rep_out_bits_mbIndex,
  output [3:0]   io_fast_rep_out_bits_reg_offset,
  output [7:0]   io_fast_rep_out_bits_elemIdxInsideVd,
  output         io_fast_rep_out_bits_vecActive,
  output         io_fast_rep_out_bits_isLoadReplay,
  output         io_fast_rep_out_bits_delayedLoadError,
  output         io_fast_rep_out_bits_lateKill,
  output [6:0]   io_fast_rep_out_bits_schedIndex,
  output [3:0]   io_fast_rep_out_bits_rep_info_mshr_id,
  output         io_rollback_valid,
  output         io_rollback_bits_isRVC,
  output         io_rollback_bits_robIdx_flag,
  output [7:0]   io_rollback_bits_robIdx_value,
  output         io_rollback_bits_ftqIdx_flag,
  output [5:0]   io_rollback_bits_ftqIdx_value,
  output [3:0]   io_rollback_bits_ftqOffset,
  output         io_rollback_bits_level,
  output [5:0]   io_perf_0_value,
  output [5:0]   io_perf_1_value,
  output [5:0]   io_perf_2_value,
  output [5:0]   io_perf_3_value,
  output [5:0]   io_perf_4_value,
  output [5:0]   io_perf_5_value,
  output [5:0]   io_perf_6_value
);

  reg              s3_fast_rep_last_REG;
  wire             s3_ready;
  wire             s2_fwd_mask_15;
  wire             s2_fwd_mask_14;
  wire             s2_fwd_mask_13;
  wire             s2_fwd_mask_12;
  wire             s2_fwd_mask_11;
  wire             s2_fwd_mask_10;
  wire             s2_fwd_mask_9;
  wire             s2_fwd_mask_8;
  wire             s2_fwd_mask_7;
  wire             s2_fwd_mask_6;
  wire             s2_fwd_mask_5;
  wire             s2_fwd_mask_4;
  wire             s2_fwd_mask_3;
  wire             s2_fwd_mask_2;
  wire             s2_fwd_mask_1;
  wire             s2_fwd_mask_0;
  wire             s2_full_fwd;
  wire             io_lsq_ldld_nuke_query_req_valid_0;
  reg  [7:0]       s2_in_r_uop_robIdx_value;
  reg              s2_in_r_uop_robIdx_flag;
  wire             s2_ready;
  wire             s2_kill;
  wire             s1_kill;
  wire             s1_exception_new_vec_5;
  wire             s1_exception_new_vec_4;
  wire             s1_exception_new_vec_21;
  wire             s1_exception_new_vec_13;
  wire             s1_ready;
  wire             s0_sel_src_prf_wr;
  wire             s0_sel_src_prf_rd;
  wire             s0_sel_src_prf;
  wire             s0_valid;
  wire             s0_super_ld_rep_ready = 1'h1;
  wire             s0_fire = s0_valid & s1_ready;
  wire             s0_ld_mmio_select;
  wire             s0_mmio_fire = s0_ld_mmio_select & s1_ready;
  wire             s0_rep_stall =
    io_ldin_valid
    & (io_replay_bits_uop_robIdx_flag ^ io_ldin_bits_uop_robIdx_flag
       ^ io_replay_bits_uop_robIdx_value > io_ldin_bits_uop_robIdx_value);
  wire             s0_super_ld_rep_valid =
    io_replay_valid & io_replay_bits_forward_tlDchannel;
  wire             s0_ld_rep_valid =
    io_replay_valid & ~io_replay_bits_forward_tlDchannel & ~s0_rep_stall;
  wire             s0_high_conf_prf_valid =
    io_prefetch_req_valid & io_prefetch_req_bits_confidence;
  wire             s0_low_conf_prf_valid =
    io_prefetch_req_valid & ~io_prefetch_req_bits_confidence;
  wire             s0_ld_fast_rep_ready = ~s0_super_ld_rep_valid;
  wire             s0_ld_mmio_ready = ~s0_super_ld_rep_valid & ~io_fast_rep_in_valid;
  wire             s0_ld_rep_ready =
    ~s0_super_ld_rep_valid & ~io_fast_rep_in_valid & ~io_lsq_uncache_valid;
  wire             s0_high_conf_prf_ready =
    ~s0_super_ld_rep_valid & ~io_fast_rep_in_valid & ~io_lsq_uncache_valid
    & ~s0_ld_rep_valid;
  wire             s0_vec_iss_ready =
    ~s0_super_ld_rep_valid & ~io_fast_rep_in_valid & ~io_lsq_uncache_valid
    & ~s0_ld_rep_valid & ~s0_high_conf_prf_valid;
  wire             s0_int_iss_ready =
    ~s0_super_ld_rep_valid & ~io_fast_rep_in_valid & ~io_lsq_uncache_valid
    & ~s0_ld_rep_valid & ~s0_high_conf_prf_valid & ~io_vecldin_valid;
  wire             s0_l2l_fwd_ready =
    ~s0_super_ld_rep_valid & ~io_fast_rep_in_valid & ~io_lsq_uncache_valid
    & ~s0_ld_rep_valid & ~s0_high_conf_prf_valid & ~io_ldin_valid & ~io_vecldin_valid;
  wire             s0_low_conf_prf_ready =
    ~s0_super_ld_rep_valid & ~io_fast_rep_in_valid & ~io_lsq_uncache_valid
    & ~s0_ld_rep_valid & ~s0_high_conf_prf_valid & ~io_ldin_valid & ~io_vecldin_valid
    & ~io_l2l_fwd_in_valid;
  wire             s0_super_ld_rep_select = s0_super_ld_rep_valid & s0_super_ld_rep_ready;
  wire             s0_ld_fast_rep_select = io_fast_rep_in_valid & s0_ld_fast_rep_ready;
  assign s0_ld_mmio_select = io_lsq_uncache_valid & s0_ld_mmio_ready;
  wire             s0_ld_rep_select = s0_ld_rep_valid & s0_ld_rep_ready;
  wire             s0_hw_prf_select =
    s0_high_conf_prf_ready & s0_high_conf_prf_valid | s0_low_conf_prf_ready
    & s0_low_conf_prf_valid;
  wire             s0_vec_iss_select = s0_vec_iss_ready & io_vecldin_valid;
  wire             s0_int_iss_select = s0_int_iss_ready & io_ldin_valid;
  wire             s0_l2l_fwd_select = s0_l2l_fwd_ready & io_l2l_fwd_in_valid;
  wire             _io_wakeup_valid_T_2 = s0_super_ld_rep_valid | io_fast_rep_in_valid;
  assign s0_valid =
    (_io_wakeup_valid_T_2 | s0_ld_rep_valid | s0_high_conf_prf_valid | io_vecldin_valid
     | io_ldin_valid | io_l2l_fwd_in_valid | s0_low_conf_prf_valid) & ~s0_ld_mmio_select
    & io_dcache_req_ready;
  wire             s0_src_format_3_prf_rd = io_replay_bits_uop_fuOpType == 9'h9;
  wire             s0_src_format_3_prf_wr = io_replay_bits_uop_fuOpType == 9'hA;
  wire             _s0_sel_src_T_4 =
    _io_wakeup_valid_T_2 | io_lsq_uncache_valid | s0_ld_rep_valid;
  wire             _s0_sel_src_T_6 = s0_high_conf_prf_valid | io_vecldin_valid;
  wire [8:0]       s0_sel_src_uop_fuOpType =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_uop_fuOpType
                : io_fast_rep_in_bits_uop_fuOpType)
           : io_lsq_uncache_valid
               ? io_lsq_uncache_bits_uop_fuOpType
               : io_replay_bits_uop_fuOpType)
      : _s0_sel_src_T_6
          ? (s0_high_conf_prf_valid ? 9'h0 : io_vecldin_bits_uop_fuOpType)
          : io_ldin_valid ? io_ldin_bits_uop_fuOpType : 9'h0;
  wire             s0_sel_src_uop_robIdx_flag =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_uop_robIdx_flag
                : io_fast_rep_in_bits_uop_robIdx_flag)
           : io_lsq_uncache_valid
               ? io_lsq_uncache_bits_uop_robIdx_flag
               : io_replay_bits_uop_robIdx_flag)
      : _s0_sel_src_T_6
          ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_robIdx_flag
          : io_ldin_valid & io_ldin_bits_uop_robIdx_flag;
  wire [7:0]       s0_sel_src_uop_robIdx_value =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_uop_robIdx_value
                : io_fast_rep_in_bits_uop_robIdx_value)
           : io_lsq_uncache_valid
               ? io_lsq_uncache_bits_uop_robIdx_value
               : io_replay_bits_uop_robIdx_value)
      : _s0_sel_src_T_6
          ? (s0_high_conf_prf_valid ? 8'h0 : io_vecldin_bits_uop_robIdx_value)
          : io_ldin_valid ? io_ldin_bits_uop_robIdx_value : 8'h0;
  wire             s0_sel_src_uop_lqIdx_flag =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_uop_lqIdx_flag
                : io_fast_rep_in_bits_uop_lqIdx_flag)
           : io_lsq_uncache_valid
               ? io_lsq_uncache_bits_uop_lqIdx_flag
               : io_replay_bits_uop_lqIdx_flag)
      : _s0_sel_src_T_6
          ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_lqIdx_flag
          : io_ldin_valid & io_ldin_bits_uop_lqIdx_flag;
  wire [6:0]       s0_sel_src_uop_lqIdx_value =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_uop_lqIdx_value
                : io_fast_rep_in_bits_uop_lqIdx_value)
           : io_lsq_uncache_valid
               ? io_lsq_uncache_bits_uop_lqIdx_value
               : io_replay_bits_uop_lqIdx_value)
      : _s0_sel_src_T_6
          ? (s0_high_conf_prf_valid ? 7'h0 : io_vecldin_bits_uop_lqIdx_value)
          : io_ldin_valid ? io_ldin_bits_uop_lqIdx_value : 7'h0;
  assign s0_sel_src_prf =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_uop_fuOpType[3] & ~(|(io_replay_bits_uop_fuOpType[5:4]))
                  & ~(|(io_replay_bits_uop_fuOpType[8:7])) & ~io_replay_bits_isvec
                : io_fast_rep_in_bits_uop_fuOpType[3]
                  & io_fast_rep_in_bits_uop_fuOpType[5:4] == 2'h0
                  & ~(|(io_fast_rep_in_bits_uop_fuOpType[8:7]))
                  & ~io_fast_rep_in_bits_isvec)
           : ~io_lsq_uncache_valid & io_replay_bits_uop_fuOpType[3]
             & ~(|(io_replay_bits_uop_fuOpType[5:4]))
             & ~(|(io_replay_bits_uop_fuOpType[8:7])) & ~io_replay_bits_isvec)
      : _s0_sel_src_T_6
          ? s0_high_conf_prf_valid
          : ~io_ldin_valid | io_ldin_bits_uop_fuOpType[3]
            & io_ldin_bits_uop_fuOpType[5:4] == 2'h0
            & ~(|(io_ldin_bits_uop_fuOpType[8:7]));
  assign s0_sel_src_prf_rd =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? s0_src_format_3_prf_rd
                : io_fast_rep_in_bits_uop_fuOpType == 9'h9)
           : ~io_lsq_uncache_valid & s0_src_format_3_prf_rd)
      : _s0_sel_src_T_6
          ? s0_high_conf_prf_valid & ~io_prefetch_req_bits_is_store
          : io_ldin_valid
              ? io_ldin_bits_uop_fuOpType == 9'h9
              : ~io_prefetch_req_bits_is_store;
  assign s0_sel_src_prf_wr =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? s0_src_format_3_prf_wr
                : io_fast_rep_in_bits_uop_fuOpType == 9'hA)
           : ~io_lsq_uncache_valid & s0_src_format_3_prf_wr)
      : _s0_sel_src_T_6
          ? s0_high_conf_prf_valid & io_prefetch_req_bits_is_store
          : io_ldin_valid
              ? io_ldin_bits_uop_fuOpType == 9'hA
              : io_prefetch_req_bits_is_store;
  wire             s0_sel_src_isvec =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid ? io_replay_bits_isvec : io_fast_rep_in_bits_isvec)
           : ~io_lsq_uncache_valid & io_replay_bits_isvec)
      : _s0_sel_src_T_6 & ~s0_high_conf_prf_valid;
  wire             s0_sel_src_is128bit =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_is128bit
                : io_fast_rep_in_bits_is128bit)
           : ~io_lsq_uncache_valid & io_replay_bits_is128bit)
      : _s0_sel_src_T_6 & ~s0_high_conf_prf_valid & io_vecldin_bits_alignedType[2];
  wire             s0_sel_src_vecActive =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_vecActive
                : io_fast_rep_in_bits_vecActive)
           : io_lsq_uncache_valid | io_replay_bits_vecActive)
      : _s0_sel_src_T_6
          ? ~s0_high_conf_prf_valid & io_vecldin_bits_vecActive
          : io_ldin_valid;
  wire [40:0]      _s0_tlb_vaddr_T_9 =
    s0_super_ld_rep_valid | io_fast_rep_in_valid | s0_ld_rep_valid
      ? (s0_super_ld_rep_valid | ~io_fast_rep_in_valid
           ? io_replay_bits_vaddr
           : io_fast_rep_in_bits_vaddr)
      : io_vecldin_valid
          ? io_vecldin_bits_vaddr
          : io_ldin_valid
              ? 41'(io_ldin_bits_src_0[40:0]
                    + {{29{io_ldin_bits_uop_imm[11]}}, io_ldin_bits_uop_imm[11:0]})
              : 41'h0;
  wire [40:0]      s0_dcache_vaddr =
    s0_hw_prf_select
      ? {27'h0, io_prefetch_req_bits_alias, io_prefetch_req_bits_paddr[11:0]}
      : _s0_tlb_vaddr_T_9;
  wire             _io_ldin_ready_T = s1_ready & io_dcache_req_ready;
  reg              s1_valid;
  wire             s1_fire = s1_valid & ~s1_kill & s2_ready;
  reg              s1_vecActive;
  assign s1_ready = ~s1_valid | s1_kill | s2_ready;
  reg              s1_in_r_uop_exceptionVec_4;
  reg              s1_in_r_uop_preDecodeInfo_isRVC;
  reg              s1_in_r_uop_ftqPtr_flag;
  reg  [5:0]       s1_in_r_uop_ftqPtr_value;
  reg  [3:0]       s1_in_r_uop_ftqOffset;
  reg  [34:0]      s1_in_r_uop_fuType;
  reg  [8:0]       s1_in_r_uop_fuOpType;
  reg              s1_in_r_uop_rfWen;
  reg              s1_in_r_uop_fpWen;
  reg  [6:0]       s1_in_r_uop_uopIdx;
  reg  [7:0]       s1_in_r_uop_pdest;
  reg              s1_in_r_uop_robIdx_flag;
  reg  [7:0]       s1_in_r_uop_robIdx_value;
  reg              s1_in_r_uop_storeSetHit;
  reg              s1_in_r_uop_waitForRobIdx_flag;
  reg  [7:0]       s1_in_r_uop_waitForRobIdx_value;
  reg              s1_in_r_uop_loadWaitBit;
  reg              s1_in_r_uop_loadWaitStrict;
  reg              s1_in_r_uop_lqIdx_flag;
  reg  [6:0]       s1_in_r_uop_lqIdx_value;
  reg              s1_in_r_uop_sqIdx_flag;
  reg  [5:0]       s1_in_r_uop_sqIdx_value;
  reg  [40:0]      s1_in_r_vaddr;
  reg  [35:0]      s1_in_r_paddr;
  reg  [15:0]      s1_in_r_mask;
  reg              s1_in_r_isPrefetch;
  reg              s1_in_r_isHWPrefetch;
  reg              s1_in_r_isvec;
  reg              s1_in_r_is128bit;
  reg              s1_in_r_usSecondInv;
  reg  [7:0]       s1_in_r_elemIdx;
  reg  [2:0]       s1_in_r_alignedType;
  reg  [3:0]       s1_in_r_mbIndex;
  reg  [3:0]       s1_in_r_reg_offset;
  reg  [7:0]       s1_in_r_elemIdxInsideVd;
  reg              s1_in_r_vecActive;
  reg              s1_in_r_isFirstIssue;
  reg              s1_in_r_isLoadReplay;
  reg              s1_in_r_isFastReplay;
  reg  [3:0]       s1_in_r_mshrid;
  reg              s1_in_r_forward_tlDchannel;
  reg  [6:0]       s1_in_r_schedIndex;
  reg              s1_fast_rep_dly_kill_r;
  reg              s1_fast_rep_dly_err_r;
  wire             s1_out_delayedLoadError = s1_fast_rep_dly_err_r & s1_in_r_isFastReplay;
  wire [3:0]       _GEN =
    {s1_exception_new_vec_21,
     s1_exception_new_vec_13,
     s1_exception_new_vec_5,
     s1_exception_new_vec_4};
  wire             s1_tlb_miss = io_tlb_resp_bits_miss & io_tlb_resp_valid & s1_valid;
  wire [35:0]      s1_paddr_dup_lsu =
    s1_in_r_isHWPrefetch ? s1_in_r_paddr : io_tlb_resp_bits_paddr_0;
  wire             io_tlb_req_kill_0 = s1_kill | s1_out_delayedLoadError;
  wire             _io_lsq_forward_valid_T = (|_GEN) | s1_tlb_miss;
  assign s1_exception_new_vec_13 =
    ~s1_out_delayedLoadError & io_tlb_resp_bits_excp_0_pf_ld & s1_vecActive
    & ~s1_tlb_miss;
  assign s1_exception_new_vec_21 =
    ~s1_out_delayedLoadError & io_tlb_resp_bits_excp_0_gpf_ld & ~s1_tlb_miss;
  assign s1_exception_new_vec_4 = ~s1_out_delayedLoadError & s1_in_r_uop_exceptionVec_4;
  assign s1_exception_new_vec_5 =
    s1_out_delayedLoadError
      ? s1_out_delayedLoadError & s1_vecActive
      : io_tlb_resp_bits_excp_0_af_ld & s1_vecActive & ~s1_tlb_miss;
  reg              s1_try_ptr_chasing_last_REG;
  reg              s1_redirect_reg_bits_r_robIdx_flag;
  reg  [7:0]       s1_redirect_reg_bits_r_robIdx_value;
  reg              s1_redirect_reg_bits_r_level;
  reg              s1_redirect_reg_valid_last_REG;
  wire [8:0]       _s1_kill_flushItself_T_5 =
    {s1_in_r_uop_robIdx_flag, s1_in_r_uop_robIdx_value};
  wire [8:0]       _io_vecldout_valid_flushItself_T_6 =
    {io_redirect_bits_robIdx_flag, io_redirect_bits_robIdx_value};
  reg              s1_kill_last_REG;
  assign s1_kill =
    s1_fast_rep_dly_kill_r & s1_in_r_isFastReplay | io_redirect_valid
    & (io_redirect_bits_level
       & _s1_kill_flushItself_T_5 == _io_vecldout_valid_flushItself_T_6
       | s1_in_r_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ s1_in_r_uop_robIdx_value > io_redirect_bits_robIdx_value)
    | s1_redirect_reg_valid_last_REG
    & (s1_redirect_reg_bits_r_level
       & _s1_kill_flushItself_T_5 == {s1_redirect_reg_bits_r_robIdx_flag,
                                      s1_redirect_reg_bits_r_robIdx_value}
       | s1_in_r_uop_robIdx_flag ^ s1_redirect_reg_bits_r_robIdx_flag
       ^ s1_in_r_uop_robIdx_value > s1_redirect_reg_bits_r_robIdx_value)
    & ~s1_kill_last_REG;
  reg  [63:0]      s1_sqIdx_mask;
  wire             io_forward_mshr_valid_0 = s1_valid & s1_in_r_forward_tlDchannel;
  reg              s2_valid;
  wire             s2_fire = s2_valid & ~s2_kill & s3_ready;
  reg              s2_vecActive;
  reg              s2_isvec;
  assign s2_kill =
    io_redirect_valid
    & (io_redirect_bits_level
       & {s2_in_r_uop_robIdx_flag,
          s2_in_r_uop_robIdx_value} == _io_vecldout_valid_flushItself_T_6
       | s2_in_r_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ s2_in_r_uop_robIdx_value > io_redirect_bits_robIdx_value);
  assign s2_ready = ~s2_valid | s2_kill | s3_ready;
  reg              s2_in_r_uop_exceptionVec_4;
  reg              s2_in_r_uop_exceptionVec_5;
  reg              s2_in_r_uop_exceptionVec_13;
  reg              s2_in_r_uop_exceptionVec_21;
  reg              s2_in_r_uop_preDecodeInfo_isRVC;
  reg              s2_in_r_uop_ftqPtr_flag;
  reg  [5:0]       s2_in_r_uop_ftqPtr_value;
  reg  [3:0]       s2_in_r_uop_ftqOffset;
  reg  [34:0]      s2_in_r_uop_fuType;
  reg  [8:0]       s2_in_r_uop_fuOpType;
  reg              s2_in_r_uop_rfWen;
  reg              s2_in_r_uop_fpWen;
  reg  [6:0]       s2_in_r_uop_uopIdx;
  reg  [7:0]       s2_in_r_uop_pdest;
  reg              s2_in_r_uop_storeSetHit;
  reg              s2_in_r_uop_waitForRobIdx_flag;
  reg  [7:0]       s2_in_r_uop_waitForRobIdx_value;
  reg              s2_in_r_uop_loadWaitBit;
  reg              s2_in_r_uop_loadWaitStrict;
  reg              s2_in_r_uop_lqIdx_flag;
  reg  [6:0]       s2_in_r_uop_lqIdx_value;
  reg              s2_in_r_uop_sqIdx_flag;
  reg  [5:0]       s2_in_r_uop_sqIdx_value;
  reg  [40:0]      s2_in_r_vaddr;
  reg  [35:0]      s2_in_r_paddr;
  reg  [40:0]      s2_in_r_gpaddr;
  reg  [15:0]      s2_in_r_mask;
  reg              s2_in_r_tlbMiss;
  reg              s2_in_r_isPrefetch;
  reg              s2_in_r_isHWPrefetch;
  reg              s2_in_r_isvec;
  reg              s2_in_r_is128bit;
  reg              s2_in_r_usSecondInv;
  reg  [7:0]       s2_in_r_elemIdx;
  reg  [2:0]       s2_in_r_alignedType;
  reg  [3:0]       s2_in_r_mbIndex;
  reg  [3:0]       s2_in_r_reg_offset;
  reg  [7:0]       s2_in_r_elemIdxInsideVd;
  reg              s2_in_r_vecActive;
  reg              s2_in_r_isFirstIssue;
  reg              s2_in_r_isLoadReplay;
  reg  [3:0]       s2_in_r_mshrid;
  reg              s2_in_r_forward_tlDchannel;
  reg              s2_in_r_delayedLoadError;
  reg  [6:0]       s2_in_r_schedIndex;
  reg              s2_in_r_rep_info_cause_9;
  wire             _GEN_0 =
    ~s2_in_r_delayedLoadError & (s2_in_r_isPrefetch | s2_in_r_tlbMiss);
  wire             s2_exception_vec_4 = ~_GEN_0 & s2_in_r_uop_exceptionVec_4;
  wire             s2_exception_vec_5 =
    ~_GEN_0
    & (s2_in_r_delayedLoadError
         ? s2_in_r_uop_exceptionVec_5
         : (s2_in_r_uop_exceptionVec_5 | io_pmp_ld | s2_isvec & io_pmp_mmio
            & ~s2_in_r_isPrefetch & ~s2_in_r_tlbMiss) & s2_vecActive);
  wire             s2_exception_vec_13 = ~_GEN_0 & s2_in_r_uop_exceptionVec_13;
  wire             s2_exception_vec_21 = ~_GEN_0 & s2_in_r_uop_exceptionVec_21;
  wire             s2_exception =
    (|{s2_exception_vec_21, s2_exception_vec_13, s2_exception_vec_5, s2_exception_vec_4})
    & s2_vecActive;
  reg              s2_fwd_frm_d_chan;
  reg  [7:0]       s2_fwd_data_frm_d_chan_0;
  reg  [7:0]       s2_fwd_data_frm_d_chan_1;
  reg  [7:0]       s2_fwd_data_frm_d_chan_2;
  reg  [7:0]       s2_fwd_data_frm_d_chan_3;
  reg  [7:0]       s2_fwd_data_frm_d_chan_4;
  reg  [7:0]       s2_fwd_data_frm_d_chan_5;
  reg  [7:0]       s2_fwd_data_frm_d_chan_6;
  reg  [7:0]       s2_fwd_data_frm_d_chan_7;
  reg  [7:0]       s2_fwd_data_frm_d_chan_8;
  reg  [7:0]       s2_fwd_data_frm_d_chan_9;
  reg  [7:0]       s2_fwd_data_frm_d_chan_10;
  reg  [7:0]       s2_fwd_data_frm_d_chan_11;
  reg  [7:0]       s2_fwd_data_frm_d_chan_12;
  reg  [7:0]       s2_fwd_data_frm_d_chan_13;
  reg  [7:0]       s2_fwd_data_frm_d_chan_14;
  reg  [7:0]       s2_fwd_data_frm_d_chan_15;
  wire             s2_fwd_frm_d_chan_or_mshr =
    io_forward_mshr_forward_result_valid
    & (s2_fwd_frm_d_chan | io_forward_mshr_forward_mshr);
  wire             s2_mmio =
    ~s2_in_r_isPrefetch & io_pmp_mmio & ~s2_exception & ~s2_in_r_tlbMiss;
  wire             s2_mem_amb = s2_in_r_uop_storeSetHit & io_lsq_forward_addrInvalid;
  wire             s2_dcache_miss =
    io_dcache_resp_bits_miss & ~s2_fwd_frm_d_chan_or_mshr & ~s2_full_fwd;
  wire             s2_mq_nack =
    io_dcache_s2_mq_nack & ~s2_fwd_frm_d_chan_or_mshr & ~s2_full_fwd;
  wire             s2_bank_conflict =
    io_dcache_s2_bank_conflict & ~s2_fwd_frm_d_chan_or_mshr & ~s2_full_fwd;
  wire             s2_rar_nack =
    io_lsq_ldld_nuke_query_req_valid_0 & ~io_lsq_ldld_nuke_query_req_ready;
  wire             s2_raw_nack =
    io_lsq_ldld_nuke_query_req_valid_0 & ~io_lsq_stld_nuke_query_req_ready;
  wire             _s2_isMatch128_T_1 = s2_in_r_isvec & s2_in_r_is128bit;
  wire             s2_nuke =
    (|{io_stld_nuke_query_1_valid
         & (s2_in_r_uop_robIdx_flag ^ io_stld_nuke_query_1_bits_robIdx_flag
            ^ s2_in_r_uop_robIdx_value > io_stld_nuke_query_1_bits_robIdx_value)
         & (io_stld_nuke_query_1_bits_matchLine | _s2_isMatch128_T_1
              ? s2_in_r_paddr[35:4] == io_stld_nuke_query_1_bits_paddr[35:4]
              : s2_in_r_paddr[35:3] == io_stld_nuke_query_1_bits_paddr[35:3])
         & (|(s2_in_r_mask & io_stld_nuke_query_1_bits_mask)),
       io_stld_nuke_query_0_valid
         & (s2_in_r_uop_robIdx_flag ^ io_stld_nuke_query_0_bits_robIdx_flag
            ^ s2_in_r_uop_robIdx_value > io_stld_nuke_query_0_bits_robIdx_value)
         & (io_stld_nuke_query_0_bits_matchLine | _s2_isMatch128_T_1
              ? s2_in_r_paddr[35:4] == io_stld_nuke_query_0_bits_paddr[35:4]
              : s2_in_r_paddr[35:3] == io_stld_nuke_query_0_bits_paddr[35:3])
         & (|(s2_in_r_mask & io_stld_nuke_query_0_bits_mask))}) & ~s2_in_r_tlbMiss
    | s2_in_r_rep_info_cause_9;
  wire             s2_troublem =
    ~s2_exception & ~s2_mmio & ~s2_in_r_isPrefetch & ~s2_in_r_delayedLoadError;
  assign io_lsq_ldld_nuke_query_req_valid_0 =
    s2_valid & ~s2_mem_amb & ~s2_in_r_tlbMiss & ~io_lsq_forward_dataInvalid & s2_troublem;
  wire             _io_lsq_stld_nuke_query_req_bits_data_valid_T =
    s2_full_fwd | io_forward_mshr_forward_result_valid;
  assign s2_full_fwd =
    (~{s2_fwd_mask_15,
       s2_fwd_mask_14,
       s2_fwd_mask_13,
       s2_fwd_mask_12,
       s2_fwd_mask_11,
       s2_fwd_mask_10,
       s2_fwd_mask_9,
       s2_fwd_mask_8,
       s2_fwd_mask_7,
       s2_fwd_mask_6,
       s2_fwd_mask_5,
       s2_fwd_mask_4,
       s2_fwd_mask_3,
       s2_fwd_mask_2,
       s2_fwd_mask_1,
       s2_fwd_mask_0} & s2_in_r_mask) == 16'h0 & ~io_lsq_forward_dataInvalid;
  assign s2_fwd_mask_0 = io_lsq_forward_forwardMask_0 | io_sbuffer_forwardMask_0;
  assign s2_fwd_mask_1 = io_lsq_forward_forwardMask_1 | io_sbuffer_forwardMask_1;
  assign s2_fwd_mask_2 = io_lsq_forward_forwardMask_2 | io_sbuffer_forwardMask_2;
  assign s2_fwd_mask_3 = io_lsq_forward_forwardMask_3 | io_sbuffer_forwardMask_3;
  assign s2_fwd_mask_4 = io_lsq_forward_forwardMask_4 | io_sbuffer_forwardMask_4;
  assign s2_fwd_mask_5 = io_lsq_forward_forwardMask_5 | io_sbuffer_forwardMask_5;
  assign s2_fwd_mask_6 = io_lsq_forward_forwardMask_6 | io_sbuffer_forwardMask_6;
  assign s2_fwd_mask_7 = io_lsq_forward_forwardMask_7 | io_sbuffer_forwardMask_7;
  assign s2_fwd_mask_8 = io_lsq_forward_forwardMask_8 | io_sbuffer_forwardMask_8;
  assign s2_fwd_mask_9 = io_lsq_forward_forwardMask_9 | io_sbuffer_forwardMask_9;
  assign s2_fwd_mask_10 = io_lsq_forward_forwardMask_10 | io_sbuffer_forwardMask_10;
  assign s2_fwd_mask_11 = io_lsq_forward_forwardMask_11 | io_sbuffer_forwardMask_11;
  assign s2_fwd_mask_12 = io_lsq_forward_forwardMask_12 | io_sbuffer_forwardMask_12;
  assign s2_fwd_mask_13 = io_lsq_forward_forwardMask_13 | io_sbuffer_forwardMask_13;
  assign s2_fwd_mask_14 = io_lsq_forward_forwardMask_14 | io_sbuffer_forwardMask_14;
  assign s2_fwd_mask_15 = io_lsq_forward_forwardMask_15 | io_sbuffer_forwardMask_15;
  wire             s2_out_uop_fpWen = s2_in_r_uop_fpWen & ~s2_exception;
  reg              io_s2_ptr_chasing_r;
  wire             s2_prefetch_train_valid =
    s2_valid & ~io_pmp_mmio & (~s2_in_r_tlbMiss | s2_in_r_isHWPrefetch);
  reg              io_prefetch_train_valid_last_REG;
  reg  [40:0]      io_prefetch_train_bits_vaddr_r;
  reg  [35:0]      io_prefetch_train_bits_paddr_r;
  reg              io_prefetch_train_bits_uop_r_robIdx_flag;
  reg  [7:0]       io_prefetch_train_bits_uop_r_robIdx_value;
  reg              io_prefetch_train_bits_isFirstIssue_r;
  reg              io_prefetch_train_bits_miss_r_1;
  wire             s2_prefetch_train_l1_valid = s2_valid & ~io_pmp_mmio;
  reg              io_prefetch_train_l1_valid_last_REG;
  reg  [40:0]      io_prefetch_train_l1_bits_vaddr_r;
  reg              io_prefetch_train_l1_bits_uop_r_robIdx_flag;
  reg  [7:0]       io_prefetch_train_l1_bits_uop_r_robIdx_value;
  reg              io_prefetch_train_l1_bits_isFirstIssue_r;
  reg              io_prefetch_train_l1_bits_miss_r_1;
  reg  [2:0]       io_prefetch_train_l1_bits_meta_prefetch_r;
  reg  [5:0]       s2_ld_valid_dup;
  reg              s3_valid_last_REG;
  reg              s3_in_uop_exceptionVec_4;
  reg              s3_in_uop_exceptionVec_5;
  reg              s3_in_uop_exceptionVec_13;
  reg              s3_in_uop_exceptionVec_21;
  reg              s3_in_uop_preDecodeInfo_isRVC;
  reg              s3_in_uop_ftqPtr_flag;
  reg  [5:0]       s3_in_uop_ftqPtr_value;
  reg  [3:0]       s3_in_uop_ftqOffset;
  reg  [34:0]      s3_in_uop_fuType;
  reg  [8:0]       s3_in_uop_fuOpType;
  reg              s3_in_uop_rfWen;
  reg              s3_in_uop_fpWen;
  reg  [6:0]       s3_in_uop_uopIdx;
  reg  [7:0]       s3_in_uop_pdest;
  reg              s3_in_uop_robIdx_flag;
  reg  [7:0]       s3_in_uop_robIdx_value;
  reg              s3_in_uop_storeSetHit;
  reg              s3_in_uop_waitForRobIdx_flag;
  reg  [7:0]       s3_in_uop_waitForRobIdx_value;
  reg              s3_in_uop_loadWaitBit;
  reg              s3_in_uop_loadWaitStrict;
  reg              s3_in_uop_lqIdx_flag;
  reg  [6:0]       s3_in_uop_lqIdx_value;
  reg              s3_in_uop_sqIdx_flag;
  reg  [5:0]       s3_in_uop_sqIdx_value;
  reg  [40:0]      s3_in_vaddr;
  reg  [35:0]      s3_in_paddr;
  reg  [40:0]      s3_in_gpaddr;
  reg  [15:0]      s3_in_mask;
  reg              s3_in_miss;
  reg              s3_in_tlbMiss;
  reg              s3_in_mmio;
  reg              s3_in_isvec;
  reg              s3_in_is128bit;
  reg              s3_in_usSecondInv;
  reg  [7:0]       s3_in_elemIdx;
  reg  [2:0]       s3_in_alignedType;
  reg  [3:0]       s3_in_mbIndex;
  reg  [3:0]       s3_in_reg_offset;
  reg  [7:0]       s3_in_elemIdxInsideVd;
  reg              s3_in_vecActive;
  reg              s3_in_isLoadReplay;
  reg              s3_in_handledByMSHR;
  reg              s3_in_delayedLoadError;
  reg  [6:0]       s3_in_schedIndex;
  reg  [3:0]       s3_in_rep_info_mshr_id;
  reg              s3_in_rep_info_full_fwd;
  reg              s3_in_rep_info_data_inv_sq_idx_flag;
  reg  [5:0]       s3_in_rep_info_data_inv_sq_idx_value;
  reg              s3_in_rep_info_addr_inv_sq_idx_flag;
  reg  [5:0]       s3_in_rep_info_addr_inv_sq_idx_value;
  reg              s3_in_rep_info_last_beat;
  reg              s3_in_rep_info_cause_0;
  reg              s3_in_rep_info_cause_1;
  reg              s3_in_rep_info_cause_2;
  reg              s3_in_rep_info_cause_3;
  reg              s3_in_rep_info_cause_4;
  reg              s3_in_rep_info_cause_6;
  reg              s3_in_rep_info_cause_7;
  reg              s3_in_rep_info_cause_8;
  reg              s3_in_rep_info_cause_9;
  reg  [3:0]       s3_in_rep_info_tlb_id;
  reg              s3_in_rep_info_tlb_full;
  reg              s3_dcache_rep;
  reg  [5:0]       s3_ld_valid_dup;
  reg              s3_troublem_last_REG;
  reg              s3_vecActive;
  reg              s3_isvec;
  reg  [2:0]       s3_vec_alignedType;
  reg  [3:0]       s3_vec_mBIndex;
  reg  [7:0]       s3_data_select;
  reg              s3_data_select_by_offset_0;
  reg              s3_data_select_by_offset_1;
  reg              s3_data_select_by_offset_2;
  reg              s3_data_select_by_offset_3;
  reg              s3_data_select_by_offset_4;
  reg              s3_data_select_by_offset_5;
  reg              s3_data_select_by_offset_6;
  reg              s3_data_select_by_offset_7;
  reg              s3_data_select_by_offset_8;
  reg              s3_data_select_by_offset_9;
  reg              s3_data_select_by_offset_10;
  reg              s3_data_select_by_offset_11;
  reg              s3_data_select_by_offset_12;
  reg              s3_data_select_by_offset_13;
  reg              s3_data_select_by_offset_14;
  reg              s3_data_select_by_offset_15;
  assign s3_ready =
    ~s3_valid_last_REG | io_redirect_valid
    & (io_redirect_bits_level
       & {s3_in_uop_robIdx_flag,
          s3_in_uop_robIdx_value} == _io_vecldout_valid_flushItself_T_6
       | s3_in_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ s3_in_uop_robIdx_value > io_redirect_bits_robIdx_value) | io_ldout_ready;
  reg              s3_mmio_valid_REG;
  reg              s3_mmio_valid_REG_1;
  reg              s3_mmio_valid_REG_2;
  reg              s3_mmio_bits_REG_uop_exceptionVec_4;
  reg              s3_mmio_bits_REG_uop_exceptionVec_5;
  reg              s3_mmio_bits_REG_uop_exceptionVec_13;
  reg              s3_mmio_bits_REG_uop_exceptionVec_21;
  reg  [34:0]      s3_mmio_bits_REG_uop_fuType;
  reg              s3_mmio_bits_REG_uop_rfWen;
  reg              s3_mmio_bits_REG_uop_fpWen;
  reg              s3_mmio_bits_REG_uop_flushPipe;
  reg  [7:0]       s3_mmio_bits_REG_uop_pdest;
  reg              s3_mmio_bits_REG_uop_robIdx_flag;
  reg  [7:0]       s3_mmio_bits_REG_uop_robIdx_value;
  reg              s3_mmio_bits_REG_uop_replayInst;
  reg              s3_mmio_bits_REG_1_uop_exceptionVec_4;
  reg              s3_mmio_bits_REG_1_uop_exceptionVec_5;
  reg              s3_mmio_bits_REG_1_uop_exceptionVec_13;
  reg              s3_mmio_bits_REG_1_uop_exceptionVec_21;
  reg  [34:0]      s3_mmio_bits_REG_1_uop_fuType;
  reg              s3_mmio_bits_REG_1_uop_rfWen;
  reg              s3_mmio_bits_REG_1_uop_fpWen;
  reg              s3_mmio_bits_REG_1_uop_flushPipe;
  reg  [7:0]       s3_mmio_bits_REG_1_uop_pdest;
  reg              s3_mmio_bits_REG_1_uop_robIdx_flag;
  reg  [7:0]       s3_mmio_bits_REG_1_uop_robIdx_value;
  reg              s3_mmio_bits_REG_1_uop_replayInst;
  reg              s3_mmio_bits_REG_2_uop_exceptionVec_4;
  reg              s3_mmio_bits_REG_2_uop_exceptionVec_5;
  reg              s3_mmio_bits_REG_2_uop_exceptionVec_13;
  reg              s3_mmio_bits_REG_2_uop_exceptionVec_21;
  reg  [34:0]      s3_mmio_bits_REG_2_uop_fuType;
  reg              s3_mmio_bits_REG_2_uop_rfWen;
  reg              s3_mmio_bits_REG_2_uop_fpWen;
  reg              s3_mmio_bits_REG_2_uop_flushPipe;
  reg  [7:0]       s3_mmio_bits_REG_2_uop_pdest;
  reg              s3_mmio_bits_REG_2_uop_robIdx_flag;
  reg  [7:0]       s3_mmio_bits_REG_2_uop_robIdx_value;
  reg              s3_mmio_bits_REG_2_uop_replayInst;
  reg              s3_fwd_frm_d_chan;
  reg  [7:0]       s3_fwd_data_frm_d_chan_0;
  reg  [7:0]       s3_fwd_data_frm_d_chan_1;
  reg  [7:0]       s3_fwd_data_frm_d_chan_2;
  reg  [7:0]       s3_fwd_data_frm_d_chan_3;
  reg  [7:0]       s3_fwd_data_frm_d_chan_4;
  reg  [7:0]       s3_fwd_data_frm_d_chan_5;
  reg  [7:0]       s3_fwd_data_frm_d_chan_6;
  reg  [7:0]       s3_fwd_data_frm_d_chan_7;
  reg  [7:0]       s3_fwd_data_frm_d_chan_8;
  reg  [7:0]       s3_fwd_data_frm_d_chan_9;
  reg  [7:0]       s3_fwd_data_frm_d_chan_10;
  reg  [7:0]       s3_fwd_data_frm_d_chan_11;
  reg  [7:0]       s3_fwd_data_frm_d_chan_12;
  reg  [7:0]       s3_fwd_data_frm_d_chan_13;
  reg  [7:0]       s3_fwd_data_frm_d_chan_14;
  reg  [7:0]       s3_fwd_data_frm_d_chan_15;
  reg              s3_fwd_data_valid;
  wire             s3_fwd_frm_d_chan_valid =
    s3_fwd_frm_d_chan & s3_fwd_data_valid & s3_in_handledByMSHR;
  reg              s3_vp_match_fail_last_REG;
  wire             s3_vp_match_fail = s3_vp_match_fail_last_REG & s3_troublem_last_REG;
  reg              s3_ldld_rep_inst_last_REG;
  wire             s3_rep_info_cause_4 =
    s3_in_rep_info_cause_4 & ~s3_fwd_frm_d_chan_valid;
  wire [9:0]       s3_sel_rep_cause =
    s3_in_rep_info_cause_0
      ? 10'h1
      : s3_in_rep_info_cause_1
          ? 10'h2
          : s3_in_rep_info_cause_2
              ? 10'h4
              : s3_in_rep_info_cause_3
                  ? 10'h8
                  : s3_rep_info_cause_4
                      ? 10'h10
                      : s3_in_rep_info_cause_6
                          ? 10'h40
                          : s3_in_rep_info_cause_7
                              ? 10'h80
                              : s3_in_rep_info_cause_8
                                  ? 10'h100
                                  : {s3_in_rep_info_cause_9, 9'h0};
  wire             s3_exception =
    (|{s3_in_uop_exceptionVec_21,
       s3_in_uop_exceptionVec_13,
       s3_in_uop_exceptionVec_5,
       s3_in_uop_exceptionVec_4}) & s3_vecActive;
  wire             _GEN_1 = s3_exception | s3_vp_match_fail;
  wire             io_lsq_ldin_bits_rep_info_cause_0_0 = ~_GEN_1 & s3_sel_rep_cause[0];
  wire             io_lsq_ldin_bits_rep_info_cause_1_0 = ~_GEN_1 & s3_sel_rep_cause[1];
  wire             io_lsq_ldin_bits_rep_info_cause_2_0 = ~_GEN_1 & s3_sel_rep_cause[2];
  wire             io_lsq_ldin_bits_rep_info_cause_3_0 = ~_GEN_1 & s3_sel_rep_cause[3];
  wire             io_lsq_ldin_bits_rep_info_cause_4_0 = ~_GEN_1 & s3_sel_rep_cause[4];
  wire             io_lsq_ldin_bits_rep_info_cause_5_0 = ~_GEN_1 & s3_sel_rep_cause[5];
  wire             io_lsq_ldin_bits_rep_info_cause_6_0 = ~_GEN_1 & s3_sel_rep_cause[6];
  wire             io_lsq_ldin_bits_rep_info_cause_7_0 = ~_GEN_1 & s3_sel_rep_cause[7];
  wire             io_lsq_ldin_bits_rep_info_cause_8_0 = ~_GEN_1 & s3_sel_rep_cause[8];
  wire             io_lsq_ldin_bits_rep_info_cause_9_0 = ~_GEN_1 & s3_sel_rep_cause[9];
  wire             s3_out_valid =
    s3_valid_last_REG
    & {io_lsq_ldin_bits_rep_info_cause_9_0,
       io_lsq_ldin_bits_rep_info_cause_8_0,
       io_lsq_ldin_bits_rep_info_cause_7_0,
       io_lsq_ldin_bits_rep_info_cause_6_0,
       io_lsq_ldin_bits_rep_info_cause_5_0,
       io_lsq_ldin_bits_rep_info_cause_4_0,
       io_lsq_ldin_bits_rep_info_cause_3_0,
       io_lsq_ldin_bits_rep_info_cause_2_0,
       io_lsq_ldin_bits_rep_info_cause_1_0,
       io_lsq_ldin_bits_rep_info_cause_0_0} == 10'h0 & ~s3_in_mmio;
  wire             new_vec_1_5 = s3_in_uop_exceptionVec_5 & s3_vecActive;
  wire             s3_out_bits_uop_replayInst =
    s3_vp_match_fail | io_lsq_ldld_nuke_query_resp_valid
    & io_lsq_ldld_nuke_query_resp_bits_rep_frm_fetch & s3_ldld_rep_inst_last_REG;
  wire             s3_revoke =
    s3_exception
    | (|{io_lsq_ldin_bits_rep_info_cause_9_0,
         io_lsq_ldin_bits_rep_info_cause_8_0,
         io_lsq_ldin_bits_rep_info_cause_7_0,
         io_lsq_ldin_bits_rep_info_cause_6_0,
         io_lsq_ldin_bits_rep_info_cause_5_0,
         io_lsq_ldin_bits_rep_info_cause_4_0,
         io_lsq_ldin_bits_rep_info_cause_3_0,
         io_lsq_ldin_bits_rep_info_cause_2_0,
         io_lsq_ldin_bits_rep_info_cause_1_0,
         io_lsq_ldin_bits_rep_info_cause_0_0});
  reg  [63:0]      s3_ld_raw_data_frm_uncache_REG_lqData;
  reg  [8:0]       s3_ld_raw_data_frm_uncache_REG_uop_fuOpType;
  reg              s3_ld_raw_data_frm_uncache_REG_uop_fpWen;
  reg  [2:0]       s3_ld_raw_data_frm_uncache_REG_addrOffset;
  reg  [63:0]      s3_ld_raw_data_frm_uncache_REG_1_lqData;
  reg  [8:0]       s3_ld_raw_data_frm_uncache_REG_1_uop_fuOpType;
  reg              s3_ld_raw_data_frm_uncache_REG_1_uop_fpWen;
  reg  [2:0]       s3_ld_raw_data_frm_uncache_REG_1_addrOffset;
  reg  [63:0]      s3_ld_raw_data_frm_uncache_lqData;
  reg  [8:0]       s3_ld_raw_data_frm_uncache_uop_fuOpType;
  reg              s3_ld_raw_data_frm_uncache_uop_fpWen;
  reg  [2:0]       s3_ld_raw_data_frm_uncache_addrOffset;
  wire [63:0]      _s3_picked_data_frm_uncache_T_16 =
    s3_ld_raw_data_frm_uncache_addrOffset == 3'h0
      ? s3_ld_raw_data_frm_uncache_lqData
      : 64'h0;
  wire [55:0]      _GEN_2 =
    _s3_picked_data_frm_uncache_T_16[55:0]
    | (s3_ld_raw_data_frm_uncache_addrOffset == 3'h1
         ? s3_ld_raw_data_frm_uncache_lqData[63:8]
         : 56'h0);
  wire [47:0]      _GEN_3 =
    _GEN_2[47:0]
    | (s3_ld_raw_data_frm_uncache_addrOffset == 3'h2
         ? s3_ld_raw_data_frm_uncache_lqData[63:16]
         : 48'h0);
  wire [39:0]      _GEN_4 =
    _GEN_3[39:0]
    | (s3_ld_raw_data_frm_uncache_addrOffset == 3'h3
         ? s3_ld_raw_data_frm_uncache_lqData[63:24]
         : 40'h0);
  wire [31:0]      _GEN_5 =
    _GEN_4[31:0]
    | (s3_ld_raw_data_frm_uncache_addrOffset == 3'h4
         ? s3_ld_raw_data_frm_uncache_lqData[63:32]
         : 32'h0);
  wire [23:0]      _GEN_6 =
    _GEN_5[23:0]
    | (s3_ld_raw_data_frm_uncache_addrOffset == 3'h5
         ? s3_ld_raw_data_frm_uncache_lqData[63:40]
         : 24'h0);
  wire [15:0]      _GEN_7 =
    _GEN_6[15:0]
    | (s3_ld_raw_data_frm_uncache_addrOffset == 3'h6
         ? s3_ld_raw_data_frm_uncache_lqData[63:48]
         : 16'h0);
  wire [7:0]       _s3_ld_data_frm_uncache_T_40 =
    _GEN_7[7:0]
    | ((&s3_ld_raw_data_frm_uncache_addrOffset)
         ? s3_ld_raw_data_frm_uncache_lqData[63:56]
         : 8'h0);
  wire [63:0]      s3_picked_data_frm_uncache =
    {_s3_picked_data_frm_uncache_T_16[63:56],
     _GEN_2[55:48],
     _GEN_3[47:40],
     _GEN_4[39:32],
     _GEN_5[31:24],
     _GEN_6[23:16],
     _GEN_7[15:8],
     _s3_ld_data_frm_uncache_T_40};
  reg              r_4_0;
  reg              r_4_1;
  reg              r_4_2;
  reg              r_4_3;
  reg              r_4_4;
  reg              r_4_5;
  reg              r_4_6;
  reg              r_4_7;
  reg              r_4_8;
  reg              r_4_9;
  reg              r_4_10;
  reg              r_4_11;
  reg              r_4_12;
  reg              r_4_13;
  reg              r_4_14;
  reg              r_4_15;
  reg  [7:0]       r_5_0;
  reg  [7:0]       r_5_1;
  reg  [7:0]       r_5_2;
  reg  [7:0]       r_5_3;
  reg  [7:0]       r_5_4;
  reg  [7:0]       r_5_5;
  reg  [7:0]       r_5_6;
  reg  [7:0]       r_5_7;
  reg  [7:0]       r_5_8;
  reg  [7:0]       r_5_9;
  reg  [7:0]       r_5_10;
  reg  [7:0]       r_5_11;
  reg  [7:0]       r_5_12;
  reg  [7:0]       r_5_13;
  reg  [7:0]       r_5_14;
  reg  [7:0]       r_5_15;
  reg              s3_ld_raw_data_frm_cache_forward_D_r;
  reg  [7:0]       r_6_0;
  reg  [7:0]       r_6_1;
  reg  [7:0]       r_6_2;
  reg  [7:0]       r_6_3;
  reg  [7:0]       r_6_4;
  reg  [7:0]       r_6_5;
  reg  [7:0]       r_6_6;
  reg  [7:0]       r_6_7;
  reg  [7:0]       r_6_8;
  reg  [7:0]       r_6_9;
  reg  [7:0]       r_6_10;
  reg  [7:0]       r_6_11;
  reg  [7:0]       r_6_12;
  reg  [7:0]       r_6_13;
  reg  [7:0]       r_6_14;
  reg  [7:0]       r_6_15;
  reg              s3_ld_raw_data_frm_cache_forward_mshr_r;
  reg  [7:0]       r_7_0;
  reg  [7:0]       r_7_1;
  reg  [7:0]       r_7_2;
  reg  [7:0]       r_7_3;
  reg  [7:0]       r_7_4;
  reg  [7:0]       r_7_5;
  reg  [7:0]       r_7_6;
  reg  [7:0]       r_7_7;
  reg  [7:0]       r_7_8;
  reg  [7:0]       r_7_9;
  reg  [7:0]       r_7_10;
  reg  [7:0]       r_7_11;
  reg  [7:0]       r_7_12;
  reg  [7:0]       r_7_13;
  reg  [7:0]       r_7_14;
  reg  [7:0]       r_7_15;
  reg              s3_ld_raw_data_frm_cache_forward_result_valid_r;
  wire             s3_merged_data_frm_cache_rdataVec_use_D =
    (s3_ld_raw_data_frm_cache_forward_D_r | s3_fwd_frm_d_chan_valid)
    & s3_ld_raw_data_frm_cache_forward_result_valid_r;
  wire             s3_merged_data_frm_cache_rdataVec_use_mshr =
    s3_ld_raw_data_frm_cache_forward_mshr_r
    & s3_ld_raw_data_frm_cache_forward_result_valid_r;
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_0 =
    r_4_0
      ? r_5_0
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_0 : r_6_0)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_0
              : io_dcache_resp_bits_data_delayed[7:0];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_1 =
    r_4_1
      ? r_5_1
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_1 : r_6_1)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_1
              : io_dcache_resp_bits_data_delayed[15:8];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_2 =
    r_4_2
      ? r_5_2
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_2 : r_6_2)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_2
              : io_dcache_resp_bits_data_delayed[23:16];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_3 =
    r_4_3
      ? r_5_3
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_3 : r_6_3)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_3
              : io_dcache_resp_bits_data_delayed[31:24];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_4 =
    r_4_4
      ? r_5_4
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_4 : r_6_4)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_4
              : io_dcache_resp_bits_data_delayed[39:32];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_5 =
    r_4_5
      ? r_5_5
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_5 : r_6_5)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_5
              : io_dcache_resp_bits_data_delayed[47:40];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_6 =
    r_4_6
      ? r_5_6
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_6 : r_6_6)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_6
              : io_dcache_resp_bits_data_delayed[55:48];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_7 =
    r_4_7
      ? r_5_7
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_7 : r_6_7)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_7
              : io_dcache_resp_bits_data_delayed[63:56];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_8 =
    r_4_8
      ? r_5_8
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_8 : r_6_8)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_8
              : io_dcache_resp_bits_data_delayed[71:64];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_9 =
    r_4_9
      ? r_5_9
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_9 : r_6_9)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_9
              : io_dcache_resp_bits_data_delayed[79:72];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_10 =
    r_4_10
      ? r_5_10
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_10 : r_6_10)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_10
              : io_dcache_resp_bits_data_delayed[87:80];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_11 =
    r_4_11
      ? r_5_11
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_11 : r_6_11)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_11
              : io_dcache_resp_bits_data_delayed[95:88];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_12 =
    r_4_12
      ? r_5_12
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_12 : r_6_12)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_12
              : io_dcache_resp_bits_data_delayed[103:96];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_13 =
    r_4_13
      ? r_5_13
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_13 : r_6_13)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_13
              : io_dcache_resp_bits_data_delayed[111:104];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_14 =
    r_4_14
      ? r_5_14
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_14 : r_6_14)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_14
              : io_dcache_resp_bits_data_delayed[119:112];
  wire [7:0]       s3_merged_data_frm_cache_rdataVec_15 =
    r_4_15
      ? r_5_15
      : s3_merged_data_frm_cache_rdataVec_use_D
          ? (s3_fwd_frm_d_chan_valid ? s3_fwd_data_frm_d_chan_15 : r_6_15)
          : s3_merged_data_frm_cache_rdataVec_use_mshr
              ? r_7_15
              : io_dcache_resp_bits_data_delayed[127:120];
  wire [63:0]      _s3_picked_data_frm_cache_T =
    s3_data_select_by_offset_0
      ? {s3_merged_data_frm_cache_rdataVec_7,
         s3_merged_data_frm_cache_rdataVec_6,
         s3_merged_data_frm_cache_rdataVec_5,
         s3_merged_data_frm_cache_rdataVec_4,
         s3_merged_data_frm_cache_rdataVec_3,
         s3_merged_data_frm_cache_rdataVec_2,
         s3_merged_data_frm_cache_rdataVec_1,
         s3_merged_data_frm_cache_rdataVec_0}
      : 64'h0;
  wire [55:0]      _GEN_8 =
    _s3_picked_data_frm_cache_T[55:0]
    | (s3_data_select_by_offset_1
         ? {s3_merged_data_frm_cache_rdataVec_7,
            s3_merged_data_frm_cache_rdataVec_6,
            s3_merged_data_frm_cache_rdataVec_5,
            s3_merged_data_frm_cache_rdataVec_4,
            s3_merged_data_frm_cache_rdataVec_3,
            s3_merged_data_frm_cache_rdataVec_2,
            s3_merged_data_frm_cache_rdataVec_1}
         : 56'h0);
  wire [47:0]      _GEN_9 =
    _GEN_8[47:0]
    | (s3_data_select_by_offset_2
         ? {s3_merged_data_frm_cache_rdataVec_7,
            s3_merged_data_frm_cache_rdataVec_6,
            s3_merged_data_frm_cache_rdataVec_5,
            s3_merged_data_frm_cache_rdataVec_4,
            s3_merged_data_frm_cache_rdataVec_3,
            s3_merged_data_frm_cache_rdataVec_2}
         : 48'h0);
  wire [39:0]      _GEN_10 =
    _GEN_9[39:0]
    | (s3_data_select_by_offset_3
         ? {s3_merged_data_frm_cache_rdataVec_7,
            s3_merged_data_frm_cache_rdataVec_6,
            s3_merged_data_frm_cache_rdataVec_5,
            s3_merged_data_frm_cache_rdataVec_4,
            s3_merged_data_frm_cache_rdataVec_3}
         : 40'h0);
  wire [31:0]      _GEN_11 =
    _GEN_10[31:0]
    | (s3_data_select_by_offset_4
         ? {s3_merged_data_frm_cache_rdataVec_7,
            s3_merged_data_frm_cache_rdataVec_6,
            s3_merged_data_frm_cache_rdataVec_5,
            s3_merged_data_frm_cache_rdataVec_4}
         : 32'h0);
  wire [23:0]      _GEN_12 =
    _GEN_11[23:0]
    | (s3_data_select_by_offset_5
         ? {s3_merged_data_frm_cache_rdataVec_7,
            s3_merged_data_frm_cache_rdataVec_6,
            s3_merged_data_frm_cache_rdataVec_5}
         : 24'h0);
  wire [15:0]      _GEN_13 =
    _GEN_12[15:0]
    | (s3_data_select_by_offset_6
         ? {s3_merged_data_frm_cache_rdataVec_7, s3_merged_data_frm_cache_rdataVec_6}
         : 16'h0);
  wire [63:0]      _s3_picked_data_frm_cache_T_23 =
    {_s3_picked_data_frm_cache_T[63:56],
     _GEN_8[55:48],
     _GEN_9[47:40],
     _GEN_10[39:32],
     _GEN_11[31:24],
     _GEN_12[23:16],
     _GEN_13[15:8],
     _GEN_13[7:0]
       | (s3_data_select_by_offset_7 ? s3_merged_data_frm_cache_rdataVec_7 : 8'h0)}
    | (s3_data_select_by_offset_8
         ? {s3_merged_data_frm_cache_rdataVec_15,
            s3_merged_data_frm_cache_rdataVec_14,
            s3_merged_data_frm_cache_rdataVec_13,
            s3_merged_data_frm_cache_rdataVec_12,
            s3_merged_data_frm_cache_rdataVec_11,
            s3_merged_data_frm_cache_rdataVec_10,
            s3_merged_data_frm_cache_rdataVec_9,
            s3_merged_data_frm_cache_rdataVec_8}
         : 64'h0);
  wire [55:0]      _GEN_14 =
    _s3_picked_data_frm_cache_T_23[55:0]
    | (s3_data_select_by_offset_9
         ? {s3_merged_data_frm_cache_rdataVec_15,
            s3_merged_data_frm_cache_rdataVec_14,
            s3_merged_data_frm_cache_rdataVec_13,
            s3_merged_data_frm_cache_rdataVec_12,
            s3_merged_data_frm_cache_rdataVec_11,
            s3_merged_data_frm_cache_rdataVec_10,
            s3_merged_data_frm_cache_rdataVec_9}
         : 56'h0);
  wire [47:0]      _GEN_15 =
    _GEN_14[47:0]
    | (s3_data_select_by_offset_10
         ? {s3_merged_data_frm_cache_rdataVec_15,
            s3_merged_data_frm_cache_rdataVec_14,
            s3_merged_data_frm_cache_rdataVec_13,
            s3_merged_data_frm_cache_rdataVec_12,
            s3_merged_data_frm_cache_rdataVec_11,
            s3_merged_data_frm_cache_rdataVec_10}
         : 48'h0);
  wire [39:0]      _GEN_16 =
    _GEN_15[39:0]
    | (s3_data_select_by_offset_11
         ? {s3_merged_data_frm_cache_rdataVec_15,
            s3_merged_data_frm_cache_rdataVec_14,
            s3_merged_data_frm_cache_rdataVec_13,
            s3_merged_data_frm_cache_rdataVec_12,
            s3_merged_data_frm_cache_rdataVec_11}
         : 40'h0);
  wire [31:0]      _GEN_17 =
    _GEN_16[31:0]
    | (s3_data_select_by_offset_12
         ? {s3_merged_data_frm_cache_rdataVec_15,
            s3_merged_data_frm_cache_rdataVec_14,
            s3_merged_data_frm_cache_rdataVec_13,
            s3_merged_data_frm_cache_rdataVec_12}
         : 32'h0);
  wire [23:0]      _GEN_18 =
    _GEN_17[23:0]
    | (s3_data_select_by_offset_13
         ? {s3_merged_data_frm_cache_rdataVec_15,
            s3_merged_data_frm_cache_rdataVec_14,
            s3_merged_data_frm_cache_rdataVec_13}
         : 24'h0);
  wire [15:0]      _GEN_19 =
    _GEN_18[15:0]
    | (s3_data_select_by_offset_14
         ? {s3_merged_data_frm_cache_rdataVec_15, s3_merged_data_frm_cache_rdataVec_14}
         : 16'h0);
  wire [7:0]       _vecdata_T_1 =
    _GEN_19[7:0]
    | (s3_data_select_by_offset_15 ? s3_merged_data_frm_cache_rdataVec_15 : 8'h0);
  reg  [63:0]      tdata2_next_r;
  reg  [1:0]       matchType;
  reg              tEnable;
  reg  [40:0]      hit_ld_addr_trig_hit_vec_0_r;
  wire             hit_ld_addr_trig_hit_vec_0 =
    ((&matchType)
       ? hit_ld_addr_trig_hit_vec_0_r < tdata2_next_r[40:0]
       : matchType == 2'h2
           ? hit_ld_addr_trig_hit_vec_0_r >= tdata2_next_r[40:0]
           : matchType == 2'h0 & hit_ld_addr_trig_hit_vec_0_r == tdata2_next_r[40:0])
    & tEnable;
  reg  [63:0]      tdata2_next_r_1;
  reg  [1:0]       matchType_1;
  reg              tEnable_1;
  reg  [40:0]      hit_ld_addr_trig_hit_vec_1_r;
  wire             hit_ld_addr_trig_hit_vec_1 =
    ((&matchType_1)
       ? hit_ld_addr_trig_hit_vec_1_r < tdata2_next_r_1[40:0]
       : matchType_1 == 2'h2
           ? hit_ld_addr_trig_hit_vec_1_r >= tdata2_next_r_1[40:0]
           : matchType_1 == 2'h0 & hit_ld_addr_trig_hit_vec_1_r == tdata2_next_r_1[40:0])
    & tEnable_1;
  reg  [63:0]      tdata2_next_r_2;
  reg  [1:0]       matchType_2;
  reg              tEnable_2;
  reg  [40:0]      hit_ld_addr_trig_hit_vec_2_r;
  wire             hit_ld_addr_trig_hit_vec_2 =
    ((&matchType_2)
       ? hit_ld_addr_trig_hit_vec_2_r < tdata2_next_r_2[40:0]
       : matchType_2 == 2'h2
           ? hit_ld_addr_trig_hit_vec_2_r >= tdata2_next_r_2[40:0]
           : matchType_2 == 2'h0 & hit_ld_addr_trig_hit_vec_2_r == tdata2_next_r_2[40:0])
    & tEnable_2;
  reg  [63:0]      tdata2_next_r_3;
  reg  [1:0]       matchType_3;
  reg              tEnable_3;
  reg  [40:0]      hit_ld_addr_trig_hit_vec_3_r;
  wire             hit_ld_addr_trig_hit_vec_3 =
    ((&matchType_3)
       ? hit_ld_addr_trig_hit_vec_3_r < tdata2_next_r_3[40:0]
       : matchType_3 == 2'h2
           ? hit_ld_addr_trig_hit_vec_3_r >= tdata2_next_r_3[40:0]
           : matchType_3 == 2'h0 & hit_ld_addr_trig_hit_vec_3_r == tdata2_next_r_3[40:0])
    & tEnable_3;
  reg              io_perf_0_value_REG;
  reg              io_perf_0_value_REG_1;
  reg              io_perf_1_value_REG;
  reg              io_perf_1_value_REG_1;
  reg              io_perf_2_value_REG;
  reg              io_perf_2_value_REG_1;
  reg              io_perf_3_value_REG;
  reg              io_perf_3_value_REG_1;
  reg              io_perf_4_value_REG;
  reg              io_perf_4_value_REG_1;
  reg              io_perf_5_value_REG;
  reg              io_perf_5_value_REG_1;
  reg              io_perf_6_value_REG;
  reg              io_perf_6_value_REG_1;
  wire             _s2_data_select_result_T_2 = s2_in_r_uop_fuOpType == 9'h2;
  wire             all_match =
    io_forward_mshr_valid_0 & io_tl_d_channel_valid
    & s1_in_r_mshrid == io_tl_d_channel_mshrid
    & s1_paddr_dup_lsu[5] == io_tl_d_channel_last;
  wire [3:0][63:0] _GEN_20 =
    {{io_tl_d_channel_data[255:192]},
     {io_tl_d_channel_data[191:128]},
     {io_tl_d_channel_data[127:64]},
     {io_tl_d_channel_data[63:0]}};
  wire             s2_dcache_fast_rep = s2_mq_nack | ~s2_dcache_miss & s2_bank_conflict;
  wire             all_match_1 =
    s2_valid & s2_in_r_forward_tlDchannel & io_tl_d_channel_valid
    & s2_in_r_mshrid == io_tl_d_channel_mshrid & s2_in_r_paddr[5] == io_tl_d_channel_last;
  wire [63:0]      _GEN_21 = _GEN_20[s1_paddr_dup_lsu[4:3]];
  wire [63:0]      _GEN_22 =
    s1_paddr_dup_lsu[3] ? _GEN_21 : _GEN_20[2'(s1_paddr_dup_lsu[4:3] + 2'h1)];
  wire [63:0]      _GEN_23 = _GEN_20[s2_in_r_paddr[4:3]];
  wire [63:0]      _GEN_24 =
    s2_in_r_paddr[3] ? _GEN_23 : _GEN_20[2'(s2_in_r_paddr[4:3] + 2'h1)];
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      s1_valid <= 1'h0;
      s1_vecActive <= 1'h1;
      s1_try_ptr_chasing_last_REG <= 1'h0;
      s1_redirect_reg_valid_last_REG <= 1'h0;
      s1_kill_last_REG <= 1'h0;
      s2_valid <= 1'h0;
      s2_vecActive <= 1'h1;
      s2_isvec <= 1'h0;
      s2_fwd_frm_d_chan <= 1'h0;
      s2_fwd_data_frm_d_chan_0 <= 8'h0;
      s2_fwd_data_frm_d_chan_1 <= 8'h0;
      s2_fwd_data_frm_d_chan_2 <= 8'h0;
      s2_fwd_data_frm_d_chan_3 <= 8'h0;
      s2_fwd_data_frm_d_chan_4 <= 8'h0;
      s2_fwd_data_frm_d_chan_5 <= 8'h0;
      s2_fwd_data_frm_d_chan_6 <= 8'h0;
      s2_fwd_data_frm_d_chan_7 <= 8'h0;
      s2_fwd_data_frm_d_chan_8 <= 8'h0;
      s2_fwd_data_frm_d_chan_9 <= 8'h0;
      s2_fwd_data_frm_d_chan_10 <= 8'h0;
      s2_fwd_data_frm_d_chan_11 <= 8'h0;
      s2_fwd_data_frm_d_chan_12 <= 8'h0;
      s2_fwd_data_frm_d_chan_13 <= 8'h0;
      s2_fwd_data_frm_d_chan_14 <= 8'h0;
      s2_fwd_data_frm_d_chan_15 <= 8'h0;
      io_s2_ptr_chasing_r <= 1'h0;
      io_prefetch_train_valid_last_REG <= 1'h0;
      io_prefetch_train_l1_valid_last_REG <= 1'h0;
      s2_ld_valid_dup <= 6'h0;
      s3_valid_last_REG <= 1'h0;
      s3_dcache_rep <= 1'h0;
      s3_troublem_last_REG <= 1'h0;
      s3_vecActive <= 1'h1;
      s3_isvec <= 1'h0;
      s3_data_select <= 8'h0;
      s3_data_select_by_offset_0 <= 1'h0;
      s3_data_select_by_offset_1 <= 1'h0;
      s3_data_select_by_offset_2 <= 1'h0;
      s3_data_select_by_offset_3 <= 1'h0;
      s3_data_select_by_offset_4 <= 1'h0;
      s3_data_select_by_offset_5 <= 1'h0;
      s3_data_select_by_offset_6 <= 1'h0;
      s3_data_select_by_offset_7 <= 1'h0;
      s3_data_select_by_offset_8 <= 1'h0;
      s3_data_select_by_offset_9 <= 1'h0;
      s3_data_select_by_offset_10 <= 1'h0;
      s3_data_select_by_offset_11 <= 1'h0;
      s3_data_select_by_offset_12 <= 1'h0;
      s3_data_select_by_offset_13 <= 1'h0;
      s3_data_select_by_offset_14 <= 1'h0;
      s3_data_select_by_offset_15 <= 1'h0;
      s3_mmio_valid_REG <= 1'h0;
      s3_mmio_valid_REG_1 <= 1'h0;
      s3_mmio_valid_REG_2 <= 1'h0;
      s3_fwd_frm_d_chan <= 1'h0;
      s3_fwd_data_frm_d_chan_0 <= 8'h0;
      s3_fwd_data_frm_d_chan_1 <= 8'h0;
      s3_fwd_data_frm_d_chan_2 <= 8'h0;
      s3_fwd_data_frm_d_chan_3 <= 8'h0;
      s3_fwd_data_frm_d_chan_4 <= 8'h0;
      s3_fwd_data_frm_d_chan_5 <= 8'h0;
      s3_fwd_data_frm_d_chan_6 <= 8'h0;
      s3_fwd_data_frm_d_chan_7 <= 8'h0;
      s3_fwd_data_frm_d_chan_8 <= 8'h0;
      s3_fwd_data_frm_d_chan_9 <= 8'h0;
      s3_fwd_data_frm_d_chan_10 <= 8'h0;
      s3_fwd_data_frm_d_chan_11 <= 8'h0;
      s3_fwd_data_frm_d_chan_12 <= 8'h0;
      s3_fwd_data_frm_d_chan_13 <= 8'h0;
      s3_fwd_data_frm_d_chan_14 <= 8'h0;
      s3_fwd_data_frm_d_chan_15 <= 8'h0;
      s3_fwd_data_valid <= 1'h0;
      s3_vp_match_fail_last_REG <= 1'h0;
      s3_ldld_rep_inst_last_REG <= 1'h0;
      s3_fast_rep_last_REG <= 1'h0;
      s3_ld_raw_data_frm_cache_forward_D_r <= 1'h0;
      s3_ld_raw_data_frm_cache_forward_mshr_r <= 1'h0;
      s3_ld_raw_data_frm_cache_forward_result_valid_r <= 1'h0;
      tdata2_next_r <= 64'h0;
      hit_ld_addr_trig_hit_vec_0_r <= 41'h0;
      tdata2_next_r_1 <= 64'h0;
      hit_ld_addr_trig_hit_vec_1_r <= 41'h0;
      tdata2_next_r_2 <= 64'h0;
      hit_ld_addr_trig_hit_vec_2_r <= 41'h0;
      tdata2_next_r_3 <= 64'h0;
      hit_ld_addr_trig_hit_vec_3_r <= 41'h0;
    end
    else begin
      s1_valid <= s0_fire | ~(s1_fire | s1_kill) & s1_valid;
      if (s0_fire)
        s1_vecActive <= s0_sel_src_vecActive;
      s1_try_ptr_chasing_last_REG <= s0_l2l_fwd_select & s1_ready & io_dcache_req_ready;
      s1_redirect_reg_valid_last_REG <= io_redirect_valid;
      s1_kill_last_REG <= s0_l2l_fwd_select;
      s2_valid <= s1_fire | ~(s2_fire | s2_kill) & s2_valid;
      if (s1_fire) begin
        s2_vecActive <= s1_in_r_vecActive;
        s2_isvec <= s1_in_r_isvec;
        io_s2_ptr_chasing_r <= s1_try_ptr_chasing_last_REG;
      end
      s2_fwd_frm_d_chan <= all_match;
      if (all_match) begin
        s2_fwd_data_frm_d_chan_0 <= _GEN_21[7:0];
        s2_fwd_data_frm_d_chan_1 <= _GEN_21[15:8];
        s2_fwd_data_frm_d_chan_2 <= _GEN_21[23:16];
        s2_fwd_data_frm_d_chan_3 <= _GEN_21[31:24];
        s2_fwd_data_frm_d_chan_4 <= _GEN_21[39:32];
        s2_fwd_data_frm_d_chan_5 <= _GEN_21[47:40];
        s2_fwd_data_frm_d_chan_6 <= _GEN_21[55:48];
        s2_fwd_data_frm_d_chan_7 <= _GEN_21[63:56];
        s2_fwd_data_frm_d_chan_8 <= _GEN_22[7:0];
        s2_fwd_data_frm_d_chan_9 <= _GEN_22[15:8];
        s2_fwd_data_frm_d_chan_10 <= _GEN_22[23:16];
        s2_fwd_data_frm_d_chan_11 <= _GEN_22[31:24];
        s2_fwd_data_frm_d_chan_12 <= _GEN_22[39:32];
        s2_fwd_data_frm_d_chan_13 <= _GEN_22[47:40];
        s2_fwd_data_frm_d_chan_14 <= _GEN_22[55:48];
        s2_fwd_data_frm_d_chan_15 <= _GEN_22[63:56];
      end
      io_prefetch_train_valid_last_REG <= s2_prefetch_train_valid;
      io_prefetch_train_l1_valid_last_REG <= s2_prefetch_train_l1_valid;
      s2_ld_valid_dup <=
        s1_kill | s1_in_r_isHWPrefetch
          ? 6'h0
          : {6{s1_valid & ~s1_kill & s2_ready & ~s1_in_r_isHWPrefetch}};
      s3_valid_last_REG <=
        s2_valid & ~s2_in_r_isHWPrefetch
        & ~(io_redirect_valid
            & (io_redirect_bits_level
               & {s2_in_r_uop_robIdx_flag,
                  s2_in_r_uop_robIdx_value} == _io_vecldout_valid_flushItself_T_6
               | s2_in_r_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
               ^ s2_in_r_uop_robIdx_value > io_redirect_bits_robIdx_value));
      if (s2_fire) begin
        s3_dcache_rep <= s2_dcache_fast_rep & s2_troublem;
        s3_vecActive <= s2_in_r_vecActive;
        s3_isvec <= s2_in_r_isvec;
        s3_data_select <=
          {_s2_data_select_result_T_2 & s2_out_uop_fpWen,
           _s2_data_select_result_T_2 & ~s2_out_uop_fpWen | s2_in_r_uop_fuOpType == 9'h12,
           s2_in_r_uop_fuOpType == 9'h1 | s2_in_r_uop_fuOpType == 9'h11,
           s2_in_r_uop_fuOpType == 9'h0 | s2_in_r_uop_fuOpType == 9'h10,
           s2_in_r_uop_fuOpType == 9'h3 | s2_in_r_uop_fuOpType == 9'h13,
           s2_in_r_uop_fuOpType == 9'h6 | s2_in_r_uop_fuOpType == 9'h16
             | s2_in_r_uop_fuOpType == 9'h1E,
           s2_in_r_uop_fuOpType == 9'h5 | s2_in_r_uop_fuOpType == 9'h15
             | s2_in_r_uop_fuOpType == 9'h1D,
           s2_in_r_uop_fuOpType == 9'h4 | s2_in_r_uop_fuOpType == 9'h14};
        s3_data_select_by_offset_0 <= s2_in_r_paddr[3:0] == 4'h0;
        s3_data_select_by_offset_1 <= s2_in_r_paddr[3:0] == 4'h1;
        s3_data_select_by_offset_2 <= s2_in_r_paddr[3:0] == 4'h2;
        s3_data_select_by_offset_3 <= s2_in_r_paddr[3:0] == 4'h3;
        s3_data_select_by_offset_4 <= s2_in_r_paddr[3:0] == 4'h4;
        s3_data_select_by_offset_5 <= s2_in_r_paddr[3:0] == 4'h5;
        s3_data_select_by_offset_6 <= s2_in_r_paddr[3:0] == 4'h6;
        s3_data_select_by_offset_7 <= s2_in_r_paddr[3:0] == 4'h7;
        s3_data_select_by_offset_8 <= s2_in_r_paddr[3:0] == 4'h8;
        s3_data_select_by_offset_9 <= s2_in_r_paddr[3:0] == 4'h9;
        s3_data_select_by_offset_10 <= s2_in_r_paddr[3:0] == 4'hA;
        s3_data_select_by_offset_11 <= s2_in_r_paddr[3:0] == 4'hB;
        s3_data_select_by_offset_12 <= s2_in_r_paddr[3:0] == 4'hC;
        s3_data_select_by_offset_13 <= s2_in_r_paddr[3:0] == 4'hD;
        s3_data_select_by_offset_14 <= s2_in_r_paddr[3:0] == 4'hE;
        s3_data_select_by_offset_15 <= &(s2_in_r_paddr[3:0]);
      end
      s3_troublem_last_REG <= s2_troublem;
      s3_mmio_valid_REG <= s0_mmio_fire & io_lsq_uncache_valid;
      s3_mmio_valid_REG_1 <= s3_mmio_valid_REG;
      s3_mmio_valid_REG_2 <= s3_mmio_valid_REG_1;
      s3_fwd_frm_d_chan <= all_match_1;
      if (all_match_1) begin
        s3_fwd_data_frm_d_chan_0 <= _GEN_23[7:0];
        s3_fwd_data_frm_d_chan_1 <= _GEN_23[15:8];
        s3_fwd_data_frm_d_chan_2 <= _GEN_23[23:16];
        s3_fwd_data_frm_d_chan_3 <= _GEN_23[31:24];
        s3_fwd_data_frm_d_chan_4 <= _GEN_23[39:32];
        s3_fwd_data_frm_d_chan_5 <= _GEN_23[47:40];
        s3_fwd_data_frm_d_chan_6 <= _GEN_23[55:48];
        s3_fwd_data_frm_d_chan_7 <= _GEN_23[63:56];
        s3_fwd_data_frm_d_chan_8 <= _GEN_24[7:0];
        s3_fwd_data_frm_d_chan_9 <= _GEN_24[15:8];
        s3_fwd_data_frm_d_chan_10 <= _GEN_24[23:16];
        s3_fwd_data_frm_d_chan_11 <= _GEN_24[31:24];
        s3_fwd_data_frm_d_chan_12 <= _GEN_24[39:32];
        s3_fwd_data_frm_d_chan_13 <= _GEN_24[47:40];
        s3_fwd_data_frm_d_chan_14 <= _GEN_24[55:48];
        s3_fwd_data_frm_d_chan_15 <= _GEN_24[63:56];
      end
      if (s2_valid) begin
        s3_fwd_data_valid <= io_forward_mshr_forward_result_valid;
        s3_ld_raw_data_frm_cache_forward_D_r <= s2_fwd_frm_d_chan;
        s3_ld_raw_data_frm_cache_forward_mshr_r <= io_forward_mshr_forward_mshr;
        s3_ld_raw_data_frm_cache_forward_result_valid_r <=
          io_forward_mshr_forward_result_valid;
        hit_ld_addr_trig_hit_vec_0_r <= s2_in_r_vaddr;
        hit_ld_addr_trig_hit_vec_1_r <= s2_in_r_vaddr;
        hit_ld_addr_trig_hit_vec_2_r <= s2_in_r_vaddr;
        hit_ld_addr_trig_hit_vec_3_r <= s2_in_r_vaddr;
      end
      s3_vp_match_fail_last_REG <= io_lsq_forward_matchInvalid | io_sbuffer_matchInvalid;
      s3_ldld_rep_inst_last_REG <= io_csrCtrl_ldld_vio_check_enable;
      s3_fast_rep_last_REG <=
        ~s2_mem_amb & ~s2_in_r_tlbMiss & ~io_lsq_forward_dataInvalid
        & (s2_dcache_fast_rep | ~s2_mq_nack & ~s2_dcache_miss & ~s2_bank_conflict
           & ~s2_rar_nack & ~s2_raw_nack & s2_nuke) & s2_troublem;
      if (~(io_trigger_0_tdata2 == tdata2_next_r))
        tdata2_next_r <= io_trigger_0_tdata2;
      if (~(io_trigger_1_tdata2 == tdata2_next_r_1))
        tdata2_next_r_1 <= io_trigger_1_tdata2;
      if (~(io_trigger_2_tdata2 == tdata2_next_r_2))
        tdata2_next_r_2 <= io_trigger_2_tdata2;
      if (~(io_trigger_3_tdata2 == tdata2_next_r_3))
        tdata2_next_r_3 <= io_trigger_3_tdata2;
    end
  end // always @(posedge, posedge)
  wire [22:0]      _GEN_25 = {19'h0, io_replay_bits_vaddr[3:0]};
  wire             _GEN_26 = ~_s0_sel_src_T_6 | s0_high_conf_prf_valid;
  wire [5:0]       s0_sel_src_uop_sqIdx_value =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_uop_sqIdx_value
                : io_fast_rep_in_bits_uop_sqIdx_value)
           : io_lsq_uncache_valid
               ? io_lsq_uncache_bits_uop_sqIdx_value
               : io_replay_bits_uop_sqIdx_value)
      : _s0_sel_src_T_6
          ? (s0_high_conf_prf_valid ? 6'h0 : io_vecldin_bits_uop_sqIdx_value)
          : io_ldin_valid ? io_ldin_bits_uop_sqIdx_value : 6'h0;
  wire [2:0]       s0_sel_src_alignedType =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_alignedType
                : io_fast_rep_in_bits_alignedType)
           : io_lsq_uncache_valid ? 3'h0 : io_replay_bits_alignedType)
      : _GEN_26 ? 3'h0 : io_vecldin_bits_alignedType;
  wire [1:0]       _s0_addr_aligned_T_2 =
    s0_sel_src_isvec ? s0_sel_src_alignedType[1:0] : s0_sel_src_uop_fuOpType[1:0];
  wire [22:0]      _s0_src_format_out_mask_T_43 =
    {15'h0,
     {4'h0,
      {2'h0,
       {1'h0, io_ldin_bits_uop_fuOpType[1:0] == 2'h0}
         | {2{io_ldin_bits_uop_fuOpType[1:0] == 2'h1}}}
        | {4{io_ldin_bits_uop_fuOpType[1:0] == 2'h2}}}
       | {8{&(io_ldin_bits_uop_fuOpType[1:0])}}}
    << 4'(io_ldin_bits_src_0[3:0] + io_ldin_bits_uop_imm[3:0]);
  wire [22:0]      _s0_src_format_out_mask_T_28 =
    {15'h0,
     {4'h0,
      {2'h0,
       {1'h0, ~(|(io_replay_bits_uop_fuOpType[1:0]))}
         | {2{io_replay_bits_uop_fuOpType[1:0] == 2'h1}}}
        | {4{io_replay_bits_uop_fuOpType[1:0] == 2'h2}}}
       | {8{&(io_replay_bits_uop_fuOpType[1:0])}}} << _GEN_25;
  wire [22:0]      _s0_src_format_out_mask_T_13 =
    {15'h0,
     {4'h0,
      {2'h0,
       {1'h0, ~(|(io_replay_bits_uop_fuOpType[1:0]))}
         | {2{io_replay_bits_uop_fuOpType[1:0] == 2'h1}}}
        | {4{io_replay_bits_uop_fuOpType[1:0] == 2'h2}}}
       | {8{&(io_replay_bits_uop_fuOpType[1:0])}}} << _GEN_25;
  wire             _s1_isMatch128_T_1 = s1_in_r_isvec & s1_in_r_is128bit;
  wire             s2_out_miss = s2_dcache_miss & s2_troublem;
  always @(posedge clock) begin
    if (s0_fire) begin
      s1_in_r_uop_exceptionVec_4 <=
        ~(_s0_addr_aligned_T_2 == 2'h0 | _s0_addr_aligned_T_2 == 2'h1
          & ~(s0_dcache_vaddr[0]) | _s0_addr_aligned_T_2 == 2'h2
          & s0_dcache_vaddr[1:0] == 2'h0 | (&_s0_addr_aligned_T_2)
          & s0_dcache_vaddr[2:0] == 3'h0) & s0_sel_src_vecActive;
      s1_in_r_uop_preDecodeInfo_isRVC <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_preDecodeInfo_isRVC
                    : io_fast_rep_in_bits_uop_preDecodeInfo_isRVC)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_preDecodeInfo_isRVC
                   : io_replay_bits_uop_preDecodeInfo_isRVC)
          : _s0_sel_src_T_6
              ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_preDecodeInfo_isRVC
              : io_ldin_valid & io_ldin_bits_uop_preDecodeInfo_isRVC;
      s1_in_r_uop_ftqPtr_flag <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_ftqPtr_flag
                    : io_fast_rep_in_bits_uop_ftqPtr_flag)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_ftqPtr_flag
                   : io_replay_bits_uop_ftqPtr_flag)
          : _s0_sel_src_T_6
              ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_ftqPtr_flag
              : io_ldin_valid & io_ldin_bits_uop_ftqPtr_flag;
      s1_in_r_uop_ftqPtr_value <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_ftqPtr_value
                    : io_fast_rep_in_bits_uop_ftqPtr_value)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_ftqPtr_value
                   : io_replay_bits_uop_ftqPtr_value)
          : _s0_sel_src_T_6
              ? (s0_high_conf_prf_valid ? 6'h0 : io_vecldin_bits_uop_ftqPtr_value)
              : io_ldin_valid ? io_ldin_bits_uop_ftqPtr_value : 6'h0;
      s1_in_r_uop_ftqOffset <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_ftqOffset
                    : io_fast_rep_in_bits_uop_ftqOffset)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_ftqOffset
                   : io_replay_bits_uop_ftqOffset)
          : _s0_sel_src_T_6
              ? (s0_high_conf_prf_valid ? 4'h0 : io_vecldin_bits_uop_ftqOffset)
              : io_ldin_valid ? io_ldin_bits_uop_ftqOffset : 4'h0;
      s1_in_r_uop_fuType <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_fuType
                    : io_fast_rep_in_bits_uop_fuType)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_fuType
                   : io_replay_bits_uop_fuType)
          : _s0_sel_src_T_6
              ? (s0_high_conf_prf_valid ? 35'h0 : io_vecldin_bits_uop_fuType)
              : io_ldin_valid ? io_ldin_bits_uop_fuType : 35'h0;
      s1_in_r_uop_fuOpType <= s0_sel_src_uop_fuOpType;
      s1_in_r_uop_rfWen <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_rfWen
                    : io_fast_rep_in_bits_uop_rfWen)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_rfWen
                   : io_replay_bits_uop_rfWen)
          : _s0_sel_src_T_6
              ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_rfWen
              : io_ldin_valid & io_ldin_bits_uop_rfWen;
      s1_in_r_uop_fpWen <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_fpWen
                    : io_fast_rep_in_bits_uop_fpWen)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_fpWen
                   : io_replay_bits_uop_fpWen)
          : _s0_sel_src_T_6
              ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_fpWen
              : io_ldin_valid & io_ldin_bits_uop_fpWen;
      s1_in_r_uop_uopIdx <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_uopIdx
                    : io_fast_rep_in_bits_uop_uopIdx)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_uopIdx
                   : io_replay_bits_uop_uopIdx)
          : _GEN_26 ? 7'h0 : io_vecldin_bits_uop_uopIdx;
      s1_in_r_uop_pdest <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_pdest
                    : io_fast_rep_in_bits_uop_pdest)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_pdest
                   : io_replay_bits_uop_pdest)
          : _s0_sel_src_T_6
              ? (s0_high_conf_prf_valid ? 8'h0 : io_vecldin_bits_uop_pdest)
              : io_ldin_valid ? io_ldin_bits_uop_pdest : 8'h0;
      s1_in_r_uop_robIdx_flag <= s0_sel_src_uop_robIdx_flag;
      s1_in_r_uop_robIdx_value <= s0_sel_src_uop_robIdx_value;
      s1_in_r_uop_storeSetHit <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_storeSetHit
                    : io_fast_rep_in_bits_uop_storeSetHit)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_storeSetHit
                   : io_replay_bits_uop_storeSetHit)
          : _s0_sel_src_T_6
              ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_storeSetHit
              : io_ldin_valid & io_ldin_bits_uop_storeSetHit;
      s1_in_r_uop_waitForRobIdx_flag <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_waitForRobIdx_flag
                    : io_fast_rep_in_bits_uop_waitForRobIdx_flag)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_waitForRobIdx_flag
                   : io_replay_bits_uop_waitForRobIdx_flag)
          : _s0_sel_src_T_6
              ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_waitForRobIdx_flag
              : io_ldin_valid & io_ldin_bits_uop_waitForRobIdx_flag;
      s1_in_r_uop_waitForRobIdx_value <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_waitForRobIdx_value
                    : io_fast_rep_in_bits_uop_waitForRobIdx_value)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_waitForRobIdx_value
                   : io_replay_bits_uop_waitForRobIdx_value)
          : _s0_sel_src_T_6
              ? (s0_high_conf_prf_valid ? 8'h0 : io_vecldin_bits_uop_waitForRobIdx_value)
              : io_ldin_valid ? io_ldin_bits_uop_waitForRobIdx_value : 8'h0;
      s1_in_r_uop_loadWaitBit <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_loadWaitBit
                    : io_fast_rep_in_bits_uop_loadWaitBit)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_loadWaitBit
                   : io_replay_bits_uop_loadWaitBit)
          : _s0_sel_src_T_6
              ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_loadWaitBit
              : io_ldin_valid & io_ldin_bits_uop_loadWaitBit;
      s1_in_r_uop_loadWaitStrict <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? ~s0_super_ld_rep_valid & io_fast_rep_in_bits_uop_loadWaitStrict
               : io_lsq_uncache_valid & io_lsq_uncache_bits_uop_loadWaitStrict)
          : _s0_sel_src_T_6
              ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_loadWaitStrict
              : io_ldin_valid & io_ldin_bits_uop_loadWaitStrict;
      s1_in_r_uop_lqIdx_flag <= s0_sel_src_uop_lqIdx_flag;
      s1_in_r_uop_lqIdx_value <= s0_sel_src_uop_lqIdx_value;
      s1_in_r_uop_sqIdx_flag <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_uop_sqIdx_flag
                    : io_fast_rep_in_bits_uop_sqIdx_flag)
               : io_lsq_uncache_valid
                   ? io_lsq_uncache_bits_uop_sqIdx_flag
                   : io_replay_bits_uop_sqIdx_flag)
          : _s0_sel_src_T_6
              ? ~s0_high_conf_prf_valid & io_vecldin_bits_uop_sqIdx_flag
              : io_ldin_valid & io_ldin_bits_uop_sqIdx_flag;
      s1_in_r_uop_sqIdx_value <= s0_sel_src_uop_sqIdx_value;
      s1_in_r_vaddr <= s0_dcache_vaddr;
      s1_in_r_paddr <= io_prefetch_req_bits_paddr;
      s1_in_r_mask <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? (io_replay_bits_isvec
                         ? io_replay_bits_mask
                         : _s0_src_format_out_mask_T_13[15:0])
                    : io_fast_rep_in_bits_mask)
               : io_lsq_uncache_valid
                   ? 16'h0
                   : io_replay_bits_isvec
                       ? io_replay_bits_mask
                       : _s0_src_format_out_mask_T_28[15:0])
          : _s0_sel_src_T_6
              ? (s0_high_conf_prf_valid ? 16'h0 : io_vecldin_bits_mask)
              : io_ldin_valid ? _s0_src_format_out_mask_T_43[15:0] : 16'h0;
      s1_in_r_isPrefetch <= s0_sel_src_prf;
      s1_in_r_isHWPrefetch <= s0_hw_prf_select;
      s1_in_r_isvec <= s0_sel_src_isvec;
      s1_in_r_is128bit <= s0_sel_src_is128bit;
      s1_in_r_usSecondInv <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_usSecondInv
                    : io_fast_rep_in_bits_usSecondInv)
               : ~io_lsq_uncache_valid & io_replay_bits_usSecondInv)
          : _s0_sel_src_T_6 & ~s0_high_conf_prf_valid & io_vecldin_bits_usSecondInv;
      s1_in_r_elemIdx <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_elemIdx
                    : io_fast_rep_in_bits_elemIdx)
               : io_lsq_uncache_valid ? 8'h0 : io_replay_bits_elemIdx)
          : _GEN_26 ? 8'h0 : io_vecldin_bits_elemIdx;
      s1_in_r_alignedType <= s0_sel_src_alignedType;
      s1_in_r_mbIndex <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_mbIndex
                    : io_fast_rep_in_bits_mbIndex)
               : io_lsq_uncache_valid ? 4'h0 : io_replay_bits_mbIndex)
          : _GEN_26 ? 4'h0 : io_vecldin_bits_mBIndex;
      s1_in_r_reg_offset <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_reg_offset
                    : io_fast_rep_in_bits_reg_offset)
               : io_lsq_uncache_valid ? 4'h0 : io_replay_bits_reg_offset)
          : _GEN_26 ? 4'h0 : io_vecldin_bits_reg_offset;
      s1_in_r_elemIdxInsideVd <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_elemIdxInsideVd
                    : io_fast_rep_in_bits_elemIdxInsideVd)
               : io_lsq_uncache_valid ? 8'h0 : io_replay_bits_elemIdxInsideVd)
          : _GEN_26 ? 8'h0 : io_vecldin_bits_elemIdxInsideVd;
      s1_in_r_vecActive <= s0_sel_src_vecActive;
      s1_in_r_isFirstIssue <= ~(_s0_sel_src_T_4 | _s0_sel_src_T_6) & io_ldin_valid;
      s1_in_r_isLoadReplay <=
        _s0_sel_src_T_4
        & (_io_wakeup_valid_T_2
             ? s0_super_ld_rep_valid | io_fast_rep_in_bits_isLoadReplay
             : ~io_lsq_uncache_valid);
      s1_in_r_isFastReplay <=
        _s0_sel_src_T_4 & _io_wakeup_valid_T_2 & ~s0_super_ld_rep_valid;
      s1_in_r_mshrid <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_mshrid
                    : io_fast_rep_in_bits_rep_info_mshr_id)
               : io_lsq_uncache_valid ? 4'h0 : io_replay_bits_mshrid)
          : 4'h0;
      s1_in_r_forward_tlDchannel <= s0_super_ld_rep_select;
      s1_in_r_schedIndex <=
        _s0_sel_src_T_4
          ? (_io_wakeup_valid_T_2
               ? (s0_super_ld_rep_valid
                    ? io_replay_bits_schedIndex
                    : io_fast_rep_in_bits_schedIndex)
               : io_lsq_uncache_valid ? 7'h0 : io_replay_bits_schedIndex)
          : 7'h0;
      s1_sqIdx_mask <= 64'((64'h1 << s0_sel_src_uop_sqIdx_value) - 64'h1);
    end
    if (io_fast_rep_in_valid) begin
      s1_fast_rep_dly_kill_r <= io_fast_rep_in_bits_lateKill;
      s1_fast_rep_dly_err_r <= io_fast_rep_in_bits_delayedLoadError;
    end
    if (io_redirect_valid) begin
      s1_redirect_reg_bits_r_robIdx_flag <= io_redirect_bits_robIdx_flag;
      s1_redirect_reg_bits_r_robIdx_value <= io_redirect_bits_robIdx_value;
      s1_redirect_reg_bits_r_level <= io_redirect_bits_level;
    end
    if (s1_fire) begin
      s2_in_r_uop_exceptionVec_4 <= s1_exception_new_vec_4;
      s2_in_r_uop_exceptionVec_5 <= s1_exception_new_vec_5;
      s2_in_r_uop_exceptionVec_13 <= s1_exception_new_vec_13;
      s2_in_r_uop_exceptionVec_21 <= s1_exception_new_vec_21;
      s2_in_r_uop_preDecodeInfo_isRVC <= s1_in_r_uop_preDecodeInfo_isRVC;
      s2_in_r_uop_ftqPtr_flag <= s1_in_r_uop_ftqPtr_flag;
      s2_in_r_uop_ftqPtr_value <= s1_in_r_uop_ftqPtr_value;
      s2_in_r_uop_ftqOffset <= s1_in_r_uop_ftqOffset;
      s2_in_r_uop_fuType <= s1_in_r_uop_fuType;
      s2_in_r_uop_fuOpType <= s1_in_r_uop_fuOpType;
      s2_in_r_uop_rfWen <= s1_in_r_uop_rfWen;
      s2_in_r_uop_fpWen <= s1_in_r_uop_fpWen;
      s2_in_r_uop_uopIdx <= s1_in_r_uop_uopIdx;
      s2_in_r_uop_pdest <= s1_in_r_uop_pdest;
      s2_in_r_uop_robIdx_flag <= s1_in_r_uop_robIdx_flag;
      s2_in_r_uop_robIdx_value <= s1_in_r_uop_robIdx_value;
      s2_in_r_uop_storeSetHit <= s1_in_r_uop_storeSetHit;
      s2_in_r_uop_waitForRobIdx_flag <= s1_in_r_uop_waitForRobIdx_flag;
      s2_in_r_uop_waitForRobIdx_value <= s1_in_r_uop_waitForRobIdx_value;
      s2_in_r_uop_loadWaitBit <= s1_in_r_uop_loadWaitBit;
      s2_in_r_uop_loadWaitStrict <= s1_in_r_uop_loadWaitStrict;
      s2_in_r_uop_lqIdx_flag <= s1_in_r_uop_lqIdx_flag;
      s2_in_r_uop_lqIdx_value <= s1_in_r_uop_lqIdx_value;
      s2_in_r_uop_sqIdx_flag <= s1_in_r_uop_sqIdx_flag;
      s2_in_r_uop_sqIdx_value <= s1_in_r_uop_sqIdx_value;
      s2_in_r_vaddr <= s1_in_r_vaddr;
      s2_in_r_paddr <= s1_paddr_dup_lsu;
      s2_in_r_gpaddr <=
        s1_in_r_isHWPrefetch ? {5'h0, s1_in_r_paddr} : io_tlb_resp_bits_gpaddr_0;
      s2_in_r_mask <= s1_in_r_mask;
      s2_in_r_tlbMiss <= s1_tlb_miss;
      s2_in_r_isPrefetch <= s1_in_r_isPrefetch;
      s2_in_r_isHWPrefetch <= s1_in_r_isHWPrefetch;
      s2_in_r_isvec <= s1_in_r_isvec;
      s2_in_r_is128bit <= s1_in_r_is128bit;
      s2_in_r_usSecondInv <= s1_in_r_usSecondInv;
      s2_in_r_elemIdx <= s1_in_r_elemIdx;
      s2_in_r_alignedType <= s1_in_r_alignedType;
      s2_in_r_mbIndex <= s1_in_r_mbIndex;
      s2_in_r_reg_offset <= s1_in_r_reg_offset;
      s2_in_r_elemIdxInsideVd <= s1_in_r_elemIdxInsideVd;
      s2_in_r_vecActive <= s1_in_r_vecActive;
      s2_in_r_isFirstIssue <= s1_in_r_isFirstIssue;
      s2_in_r_isLoadReplay <= s1_in_r_isLoadReplay;
      s2_in_r_mshrid <= s1_in_r_mshrid;
      s2_in_r_forward_tlDchannel <= s1_in_r_forward_tlDchannel;
      s2_in_r_delayedLoadError <= s1_out_delayedLoadError;
      s2_in_r_schedIndex <= s1_in_r_schedIndex;
      s2_in_r_rep_info_cause_9 <=
        (|{io_stld_nuke_query_1_valid
             & (s1_in_r_uop_robIdx_flag ^ io_stld_nuke_query_1_bits_robIdx_flag
                ^ s1_in_r_uop_robIdx_value > io_stld_nuke_query_1_bits_robIdx_value)
             & (io_stld_nuke_query_1_bits_matchLine | _s1_isMatch128_T_1
                  ? s1_paddr_dup_lsu[35:4] == io_stld_nuke_query_1_bits_paddr[35:4]
                  : s1_paddr_dup_lsu[35:3] == io_stld_nuke_query_1_bits_paddr[35:3])
             & (|(s1_in_r_mask & io_stld_nuke_query_1_bits_mask)),
           io_stld_nuke_query_0_valid
             & (s1_in_r_uop_robIdx_flag ^ io_stld_nuke_query_0_bits_robIdx_flag
                ^ s1_in_r_uop_robIdx_value > io_stld_nuke_query_0_bits_robIdx_value)
             & (io_stld_nuke_query_0_bits_matchLine | _s1_isMatch128_T_1
                  ? s1_paddr_dup_lsu[35:4] == io_stld_nuke_query_0_bits_paddr[35:4]
                  : s1_paddr_dup_lsu[35:3] == io_stld_nuke_query_0_bits_paddr[35:3])
             & (|(s1_in_r_mask & io_stld_nuke_query_0_bits_mask))}) & ~s1_tlb_miss
        & ~(s1_in_r_isPrefetch & ~s1_in_r_isHWPrefetch);
    end
    if (s2_prefetch_train_valid) begin
      io_prefetch_train_bits_vaddr_r <= s2_in_r_vaddr;
      io_prefetch_train_bits_paddr_r <= s2_in_r_paddr;
      io_prefetch_train_bits_uop_r_robIdx_flag <= s2_in_r_uop_robIdx_flag;
      io_prefetch_train_bits_uop_r_robIdx_value <= s2_in_r_uop_robIdx_value;
      io_prefetch_train_bits_isFirstIssue_r <= s2_in_r_isFirstIssue;
      io_prefetch_train_bits_miss_r_1 <= io_dcache_resp_bits_miss;
    end
    if (s2_prefetch_train_l1_valid) begin
      io_prefetch_train_l1_bits_vaddr_r <= s2_in_r_vaddr;
      io_prefetch_train_l1_bits_uop_r_robIdx_flag <= s2_in_r_uop_robIdx_flag;
      io_prefetch_train_l1_bits_uop_r_robIdx_value <= s2_in_r_uop_robIdx_value;
      io_prefetch_train_l1_bits_isFirstIssue_r <= s2_in_r_isFirstIssue;
      io_prefetch_train_l1_bits_miss_r_1 <= io_dcache_resp_bits_miss;
      io_prefetch_train_l1_bits_meta_prefetch_r <= io_dcache_resp_bits_meta_prefetch;
    end
    if (s2_fire) begin
      s3_in_uop_exceptionVec_4 <= s2_exception_vec_4;
      s3_in_uop_exceptionVec_5 <= s2_exception_vec_5;
      s3_in_uop_exceptionVec_13 <= s2_exception_vec_13;
      s3_in_uop_exceptionVec_21 <= s2_exception_vec_21;
      s3_in_uop_preDecodeInfo_isRVC <= s2_in_r_uop_preDecodeInfo_isRVC;
      s3_in_uop_ftqPtr_flag <= s2_in_r_uop_ftqPtr_flag;
      s3_in_uop_ftqPtr_value <= s2_in_r_uop_ftqPtr_value;
      s3_in_uop_ftqOffset <= s2_in_r_uop_ftqOffset;
      s3_in_uop_fuType <= s2_in_r_uop_fuType;
      s3_in_uop_fuOpType <= s2_in_r_uop_fuOpType;
      s3_in_uop_rfWen <= s2_in_r_uop_rfWen;
      s3_in_uop_fpWen <= s2_out_uop_fpWen;
      s3_in_uop_uopIdx <= s2_in_r_uop_uopIdx;
      s3_in_uop_pdest <= s2_in_r_uop_pdest;
      s3_in_uop_robIdx_flag <= s2_in_r_uop_robIdx_flag;
      s3_in_uop_robIdx_value <= s2_in_r_uop_robIdx_value;
      s3_in_uop_storeSetHit <= s2_in_r_uop_storeSetHit;
      s3_in_uop_waitForRobIdx_flag <= s2_in_r_uop_waitForRobIdx_flag;
      s3_in_uop_waitForRobIdx_value <= s2_in_r_uop_waitForRobIdx_value;
      s3_in_uop_loadWaitBit <= s2_in_r_uop_loadWaitBit;
      s3_in_uop_loadWaitStrict <= s2_in_r_uop_loadWaitStrict;
      s3_in_uop_lqIdx_flag <= s2_in_r_uop_lqIdx_flag;
      s3_in_uop_lqIdx_value <= s2_in_r_uop_lqIdx_value;
      s3_in_uop_sqIdx_flag <= s2_in_r_uop_sqIdx_flag;
      s3_in_uop_sqIdx_value <= s2_in_r_uop_sqIdx_value;
      s3_in_vaddr <= s2_in_r_vaddr;
      s3_in_paddr <= s2_in_r_paddr;
      s3_in_gpaddr <= s2_in_r_gpaddr;
      s3_in_mask <= s2_in_r_mask;
      s3_in_miss <= s2_out_miss;
      s3_in_tlbMiss <= s2_in_r_tlbMiss;
      s3_in_mmio <= s2_mmio;
      s3_in_isvec <= s2_in_r_isvec;
      s3_in_is128bit <= s2_in_r_is128bit;
      s3_in_usSecondInv <= s2_in_r_usSecondInv;
      s3_in_elemIdx <= s2_in_r_elemIdx;
      s3_in_alignedType <= s2_in_r_alignedType;
      s3_in_mbIndex <= s2_in_r_mbIndex;
      s3_in_reg_offset <= s2_in_r_reg_offset;
      s3_in_elemIdxInsideVd <= s2_in_r_elemIdxInsideVd;
      s3_in_vecActive <= s2_in_r_vecActive;
      s3_in_isLoadReplay <= s2_in_r_isLoadReplay;
      s3_in_handledByMSHR <= io_dcache_resp_bits_handled;
      s3_in_delayedLoadError <= s2_in_r_delayedLoadError;
      s3_in_schedIndex <= s2_in_r_schedIndex;
      s3_in_rep_info_mshr_id <= io_dcache_resp_bits_mshr_id;
      s3_in_rep_info_full_fwd <= s2_dcache_miss & s2_full_fwd;
      s3_in_rep_info_data_inv_sq_idx_flag <= io_lsq_forward_dataInvalidSqIdx_flag;
      s3_in_rep_info_data_inv_sq_idx_value <= io_lsq_forward_dataInvalidSqIdx_value;
      s3_in_rep_info_addr_inv_sq_idx_flag <= io_lsq_forward_addrInvalidSqIdx_flag;
      s3_in_rep_info_addr_inv_sq_idx_value <= io_lsq_forward_addrInvalidSqIdx_value;
      s3_in_rep_info_last_beat <= s2_in_r_paddr[5];
      s3_in_rep_info_cause_0 <= s2_mem_amb & s2_troublem;
      s3_in_rep_info_cause_1 <= s2_in_r_tlbMiss & s2_troublem;
      s3_in_rep_info_cause_2 <= io_lsq_forward_dataInvalid & s2_troublem;
      s3_in_rep_info_cause_3 <= s2_mq_nack & s2_troublem;
      s3_in_rep_info_cause_4 <= s2_out_miss;
      s3_in_rep_info_cause_6 <= s2_bank_conflict & s2_troublem;
      s3_in_rep_info_cause_7 <= s2_rar_nack & s2_troublem;
      s3_in_rep_info_cause_8 <= s2_raw_nack & s2_troublem;
      s3_in_rep_info_cause_9 <= s2_nuke & s2_troublem;
      s3_in_rep_info_tlb_id <= io_tlb_hint_id;
      s3_in_rep_info_tlb_full <= io_tlb_hint_full;
      s3_ld_valid_dup <= s2_ld_valid_dup;
      s3_vec_alignedType <= s2_in_r_alignedType;
      s3_vec_mBIndex <= s2_in_r_mbIndex;
    end
    s3_mmio_bits_REG_uop_exceptionVec_4 <= io_lsq_uncache_bits_uop_exceptionVec_4;
    s3_mmio_bits_REG_uop_exceptionVec_5 <= io_lsq_uncache_bits_uop_exceptionVec_5;
    s3_mmio_bits_REG_uop_exceptionVec_13 <= io_lsq_uncache_bits_uop_exceptionVec_13;
    s3_mmio_bits_REG_uop_exceptionVec_21 <= io_lsq_uncache_bits_uop_exceptionVec_21;
    s3_mmio_bits_REG_uop_fuType <= io_lsq_uncache_bits_uop_fuType;
    s3_mmio_bits_REG_uop_rfWen <= io_lsq_uncache_bits_uop_rfWen;
    s3_mmio_bits_REG_uop_fpWen <= io_lsq_uncache_bits_uop_fpWen;
    s3_mmio_bits_REG_uop_flushPipe <= io_lsq_uncache_bits_uop_flushPipe;
    s3_mmio_bits_REG_uop_pdest <= io_lsq_uncache_bits_uop_pdest;
    s3_mmio_bits_REG_uop_robIdx_flag <= io_lsq_uncache_bits_uop_robIdx_flag;
    s3_mmio_bits_REG_uop_robIdx_value <= io_lsq_uncache_bits_uop_robIdx_value;
    s3_mmio_bits_REG_uop_replayInst <= io_lsq_uncache_bits_uop_replayInst;
    s3_mmio_bits_REG_1_uop_exceptionVec_4 <= s3_mmio_bits_REG_uop_exceptionVec_4;
    s3_mmio_bits_REG_1_uop_exceptionVec_5 <= s3_mmio_bits_REG_uop_exceptionVec_5;
    s3_mmio_bits_REG_1_uop_exceptionVec_13 <= s3_mmio_bits_REG_uop_exceptionVec_13;
    s3_mmio_bits_REG_1_uop_exceptionVec_21 <= s3_mmio_bits_REG_uop_exceptionVec_21;
    s3_mmio_bits_REG_1_uop_fuType <= s3_mmio_bits_REG_uop_fuType;
    s3_mmio_bits_REG_1_uop_rfWen <= s3_mmio_bits_REG_uop_rfWen;
    s3_mmio_bits_REG_1_uop_fpWen <= s3_mmio_bits_REG_uop_fpWen;
    s3_mmio_bits_REG_1_uop_flushPipe <= s3_mmio_bits_REG_uop_flushPipe;
    s3_mmio_bits_REG_1_uop_pdest <= s3_mmio_bits_REG_uop_pdest;
    s3_mmio_bits_REG_1_uop_robIdx_flag <= s3_mmio_bits_REG_uop_robIdx_flag;
    s3_mmio_bits_REG_1_uop_robIdx_value <= s3_mmio_bits_REG_uop_robIdx_value;
    s3_mmio_bits_REG_1_uop_replayInst <= s3_mmio_bits_REG_uop_replayInst;
    s3_mmio_bits_REG_2_uop_exceptionVec_4 <= s3_mmio_bits_REG_1_uop_exceptionVec_4;
    s3_mmio_bits_REG_2_uop_exceptionVec_5 <= s3_mmio_bits_REG_1_uop_exceptionVec_5;
    s3_mmio_bits_REG_2_uop_exceptionVec_13 <= s3_mmio_bits_REG_1_uop_exceptionVec_13;
    s3_mmio_bits_REG_2_uop_exceptionVec_21 <= s3_mmio_bits_REG_1_uop_exceptionVec_21;
    s3_mmio_bits_REG_2_uop_fuType <= s3_mmio_bits_REG_1_uop_fuType;
    s3_mmio_bits_REG_2_uop_rfWen <= s3_mmio_bits_REG_1_uop_rfWen;
    s3_mmio_bits_REG_2_uop_fpWen <= s3_mmio_bits_REG_1_uop_fpWen;
    s3_mmio_bits_REG_2_uop_flushPipe <= s3_mmio_bits_REG_1_uop_flushPipe;
    s3_mmio_bits_REG_2_uop_pdest <= s3_mmio_bits_REG_1_uop_pdest;
    s3_mmio_bits_REG_2_uop_robIdx_flag <= s3_mmio_bits_REG_1_uop_robIdx_flag;
    s3_mmio_bits_REG_2_uop_robIdx_value <= s3_mmio_bits_REG_1_uop_robIdx_value;
    s3_mmio_bits_REG_2_uop_replayInst <= s3_mmio_bits_REG_1_uop_replayInst;
    s3_ld_raw_data_frm_uncache_REG_lqData <= io_lsq_ld_raw_data_lqData;
    s3_ld_raw_data_frm_uncache_REG_uop_fuOpType <= io_lsq_ld_raw_data_uop_fuOpType;
    s3_ld_raw_data_frm_uncache_REG_uop_fpWen <= io_lsq_ld_raw_data_uop_fpWen;
    s3_ld_raw_data_frm_uncache_REG_addrOffset <= io_lsq_ld_raw_data_addrOffset;
    s3_ld_raw_data_frm_uncache_REG_1_lqData <= s3_ld_raw_data_frm_uncache_REG_lqData;
    s3_ld_raw_data_frm_uncache_REG_1_uop_fuOpType <=
      s3_ld_raw_data_frm_uncache_REG_uop_fuOpType;
    s3_ld_raw_data_frm_uncache_REG_1_uop_fpWen <=
      s3_ld_raw_data_frm_uncache_REG_uop_fpWen;
    s3_ld_raw_data_frm_uncache_REG_1_addrOffset <=
      s3_ld_raw_data_frm_uncache_REG_addrOffset;
    s3_ld_raw_data_frm_uncache_lqData <= s3_ld_raw_data_frm_uncache_REG_1_lqData;
    s3_ld_raw_data_frm_uncache_uop_fuOpType <=
      s3_ld_raw_data_frm_uncache_REG_1_uop_fuOpType;
    s3_ld_raw_data_frm_uncache_uop_fpWen <= s3_ld_raw_data_frm_uncache_REG_1_uop_fpWen;
    s3_ld_raw_data_frm_uncache_addrOffset <= s3_ld_raw_data_frm_uncache_REG_1_addrOffset;
    if (s2_valid) begin
      r_4_0 <= s2_fwd_mask_0;
      r_4_1 <= s2_fwd_mask_1;
      r_4_2 <= s2_fwd_mask_2;
      r_4_3 <= s2_fwd_mask_3;
      r_4_4 <= s2_fwd_mask_4;
      r_4_5 <= s2_fwd_mask_5;
      r_4_6 <= s2_fwd_mask_6;
      r_4_7 <= s2_fwd_mask_7;
      r_4_8 <= s2_fwd_mask_8;
      r_4_9 <= s2_fwd_mask_9;
      r_4_10 <= s2_fwd_mask_10;
      r_4_11 <= s2_fwd_mask_11;
      r_4_12 <= s2_fwd_mask_12;
      r_4_13 <= s2_fwd_mask_13;
      r_4_14 <= s2_fwd_mask_14;
      r_4_15 <= s2_fwd_mask_15;
      r_5_0 <=
        io_lsq_forward_forwardMask_0
          ? io_lsq_forward_forwardData_0
          : io_sbuffer_forwardData_0;
      r_5_1 <=
        io_lsq_forward_forwardMask_1
          ? io_lsq_forward_forwardData_1
          : io_sbuffer_forwardData_1;
      r_5_2 <=
        io_lsq_forward_forwardMask_2
          ? io_lsq_forward_forwardData_2
          : io_sbuffer_forwardData_2;
      r_5_3 <=
        io_lsq_forward_forwardMask_3
          ? io_lsq_forward_forwardData_3
          : io_sbuffer_forwardData_3;
      r_5_4 <=
        io_lsq_forward_forwardMask_4
          ? io_lsq_forward_forwardData_4
          : io_sbuffer_forwardData_4;
      r_5_5 <=
        io_lsq_forward_forwardMask_5
          ? io_lsq_forward_forwardData_5
          : io_sbuffer_forwardData_5;
      r_5_6 <=
        io_lsq_forward_forwardMask_6
          ? io_lsq_forward_forwardData_6
          : io_sbuffer_forwardData_6;
      r_5_7 <=
        io_lsq_forward_forwardMask_7
          ? io_lsq_forward_forwardData_7
          : io_sbuffer_forwardData_7;
      r_5_8 <=
        io_lsq_forward_forwardMask_8
          ? io_lsq_forward_forwardData_8
          : io_sbuffer_forwardData_8;
      r_5_9 <=
        io_lsq_forward_forwardMask_9
          ? io_lsq_forward_forwardData_9
          : io_sbuffer_forwardData_9;
      r_5_10 <=
        io_lsq_forward_forwardMask_10
          ? io_lsq_forward_forwardData_10
          : io_sbuffer_forwardData_10;
      r_5_11 <=
        io_lsq_forward_forwardMask_11
          ? io_lsq_forward_forwardData_11
          : io_sbuffer_forwardData_11;
      r_5_12 <=
        io_lsq_forward_forwardMask_12
          ? io_lsq_forward_forwardData_12
          : io_sbuffer_forwardData_12;
      r_5_13 <=
        io_lsq_forward_forwardMask_13
          ? io_lsq_forward_forwardData_13
          : io_sbuffer_forwardData_13;
      r_5_14 <=
        io_lsq_forward_forwardMask_14
          ? io_lsq_forward_forwardData_14
          : io_sbuffer_forwardData_14;
      r_5_15 <=
        io_lsq_forward_forwardMask_15
          ? io_lsq_forward_forwardData_15
          : io_sbuffer_forwardData_15;
      r_6_0 <= s2_fwd_data_frm_d_chan_0;
      r_6_1 <= s2_fwd_data_frm_d_chan_1;
      r_6_2 <= s2_fwd_data_frm_d_chan_2;
      r_6_3 <= s2_fwd_data_frm_d_chan_3;
      r_6_4 <= s2_fwd_data_frm_d_chan_4;
      r_6_5 <= s2_fwd_data_frm_d_chan_5;
      r_6_6 <= s2_fwd_data_frm_d_chan_6;
      r_6_7 <= s2_fwd_data_frm_d_chan_7;
      r_6_8 <= s2_fwd_data_frm_d_chan_8;
      r_6_9 <= s2_fwd_data_frm_d_chan_9;
      r_6_10 <= s2_fwd_data_frm_d_chan_10;
      r_6_11 <= s2_fwd_data_frm_d_chan_11;
      r_6_12 <= s2_fwd_data_frm_d_chan_12;
      r_6_13 <= s2_fwd_data_frm_d_chan_13;
      r_6_14 <= s2_fwd_data_frm_d_chan_14;
      r_6_15 <= s2_fwd_data_frm_d_chan_15;
      r_7_0 <= io_forward_mshr_forwardData_0;
      r_7_1 <= io_forward_mshr_forwardData_1;
      r_7_2 <= io_forward_mshr_forwardData_2;
      r_7_3 <= io_forward_mshr_forwardData_3;
      r_7_4 <= io_forward_mshr_forwardData_4;
      r_7_5 <= io_forward_mshr_forwardData_5;
      r_7_6 <= io_forward_mshr_forwardData_6;
      r_7_7 <= io_forward_mshr_forwardData_7;
      r_7_8 <= io_forward_mshr_forwardData_8;
      r_7_9 <= io_forward_mshr_forwardData_9;
      r_7_10 <= io_forward_mshr_forwardData_10;
      r_7_11 <= io_forward_mshr_forwardData_11;
      r_7_12 <= io_forward_mshr_forwardData_12;
      r_7_13 <= io_forward_mshr_forwardData_13;
      r_7_14 <= io_forward_mshr_forwardData_14;
      r_7_15 <= io_forward_mshr_forwardData_15;
    end
    matchType <= io_trigger_0_matchType;
    tEnable <= io_trigger_0_tEnable;
    matchType_1 <= io_trigger_1_matchType;
    tEnable_1 <= io_trigger_1_tEnable;
    matchType_2 <= io_trigger_2_matchType;
    tEnable_2 <= io_trigger_2_tEnable;
    matchType_3 <= io_trigger_3_matchType;
    tEnable_3 <= io_trigger_3_tEnable;
    io_perf_0_value_REG <= s0_fire;
    io_perf_0_value_REG_1 <= io_perf_0_value_REG;
    io_perf_1_value_REG <= s1_fire & s1_try_ptr_chasing_last_REG;
    io_perf_1_value_REG_1 <= io_perf_1_value_REG;
    io_perf_2_value_REG <= s0_fire & ~io_dcache_req_ready;
    io_perf_2_value_REG_1 <= io_perf_2_value_REG;
    io_perf_3_value_REG <= s0_fire;
    io_perf_3_value_REG_1 <= io_perf_3_value_REG;
    io_perf_4_value_REG <= s1_fire & io_tlb_resp_bits_miss;
    io_perf_4_value_REG_1 <= io_perf_4_value_REG;
    io_perf_5_value_REG <= s1_fire;
    io_perf_5_value_REG_1 <= io_perf_5_value_REG;
    io_perf_6_value_REG <= s2_fire & io_dcache_resp_bits_miss;
    io_perf_6_value_REG_1 <= io_perf_6_value_REG;
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:714];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [9:0] i = 10'h0; i < 10'h2CB; i += 10'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        s1_valid = _RANDOM[10'h2][0];
        s1_vecActive = _RANDOM[10'h2][1];
        s1_in_r_uop_exceptionVec_4 = _RANDOM[10'h4][25];
        s1_in_r_uop_preDecodeInfo_isRVC = _RANDOM[10'h5][31];
        s1_in_r_uop_ftqPtr_flag = _RANDOM[10'h6][6];
        s1_in_r_uop_ftqPtr_value = _RANDOM[10'h6][12:7];
        s1_in_r_uop_ftqOffset = _RANDOM[10'h6][16:13];
        s1_in_r_uop_fuType = {_RANDOM[10'h7][31:11], _RANDOM[10'h8][13:0]};
        s1_in_r_uop_fuOpType = _RANDOM[10'h8][22:14];
        s1_in_r_uop_rfWen = _RANDOM[10'h8][23];
        s1_in_r_uop_fpWen = _RANDOM[10'h8][24];
        s1_in_r_uop_uopIdx = {_RANDOM[10'h10][31:29], _RANDOM[10'h11][3:0]};
        s1_in_r_uop_pdest = _RANDOM[10'h14][10:3];
        s1_in_r_uop_robIdx_flag = _RANDOM[10'h14][23];
        s1_in_r_uop_robIdx_value = _RANDOM[10'h14][31:24];
        s1_in_r_uop_storeSetHit = _RANDOM[10'h27][8];
        s1_in_r_uop_waitForRobIdx_flag = _RANDOM[10'h27][9];
        s1_in_r_uop_waitForRobIdx_value = _RANDOM[10'h27][17:10];
        s1_in_r_uop_loadWaitBit = _RANDOM[10'h27][18];
        s1_in_r_uop_loadWaitStrict = _RANDOM[10'h27][19];
        s1_in_r_uop_lqIdx_flag = _RANDOM[10'h27][25];
        s1_in_r_uop_lqIdx_value = {_RANDOM[10'h27][31:26], _RANDOM[10'h28][0]};
        s1_in_r_uop_sqIdx_flag = _RANDOM[10'h28][1];
        s1_in_r_uop_sqIdx_value = _RANDOM[10'h28][7:2];
        s1_in_r_vaddr = {_RANDOM[10'h28][31:15], _RANDOM[10'h29][23:0]};
        s1_in_r_paddr = {_RANDOM[10'h29][31:24], _RANDOM[10'h2A][27:0]};
        s1_in_r_mask = _RANDOM[10'h2C][20:5];
        s1_in_r_isPrefetch = _RANDOM[10'h35][13];
        s1_in_r_isHWPrefetch = _RANDOM[10'h35][14];
        s1_in_r_isvec = _RANDOM[10'h35][15];
        s1_in_r_is128bit = _RANDOM[10'h35][17];
        s1_in_r_usSecondInv = _RANDOM[10'h35][19];
        s1_in_r_elemIdx = _RANDOM[10'h35][27:20];
        s1_in_r_alignedType = _RANDOM[10'h35][30:28];
        s1_in_r_mbIndex = {_RANDOM[10'h35][31], _RANDOM[10'h36][2:0]};
        s1_in_r_reg_offset = _RANDOM[10'h36][6:3];
        s1_in_r_elemIdxInsideVd = _RANDOM[10'h36][14:7];
        s1_in_r_vecActive = _RANDOM[10'h36][15];
        s1_in_r_isFirstIssue = _RANDOM[10'h36][17];
        s1_in_r_isLoadReplay = _RANDOM[10'h36][19];
        s1_in_r_isFastReplay = _RANDOM[10'h36][21];
        s1_in_r_mshrid = {_RANDOM[10'h36][31], _RANDOM[10'h37][2:0]};
        s1_in_r_forward_tlDchannel = _RANDOM[10'h37][6];
        s1_in_r_schedIndex = _RANDOM[10'h37][20:14];
        s1_fast_rep_dly_kill_r = _RANDOM[10'h4B][8];
        s1_fast_rep_dly_err_r = _RANDOM[10'h4B][9];
        s1_try_ptr_chasing_last_REG = _RANDOM[10'h4D][11];
        s1_redirect_reg_bits_r_robIdx_flag = _RANDOM[10'h4D][20];
        s1_redirect_reg_bits_r_robIdx_value = _RANDOM[10'h4D][28:21];
        s1_redirect_reg_bits_r_level = _RANDOM[10'h4E][8];
        s1_redirect_reg_valid_last_REG = _RANDOM[10'h5C][10];
        s1_kill_last_REG = _RANDOM[10'h5C][11];
        s1_sqIdx_mask = {_RANDOM[10'h5C][31:13], _RANDOM[10'h5D], _RANDOM[10'h5E][12:0]};
        s2_valid = _RANDOM[10'h5E][13];
        s2_vecActive = _RANDOM[10'h5E][14];
        s2_isvec = _RANDOM[10'h5E][15];
        s2_in_r_uop_exceptionVec_4 = _RANDOM[10'h61][7];
        s2_in_r_uop_exceptionVec_5 = _RANDOM[10'h61][8];
        s2_in_r_uop_exceptionVec_13 = _RANDOM[10'h61][16];
        s2_in_r_uop_exceptionVec_21 = _RANDOM[10'h61][24];
        s2_in_r_uop_preDecodeInfo_isRVC = _RANDOM[10'h62][13];
        s2_in_r_uop_ftqPtr_flag = _RANDOM[10'h62][20];
        s2_in_r_uop_ftqPtr_value = _RANDOM[10'h62][26:21];
        s2_in_r_uop_ftqOffset = _RANDOM[10'h62][30:27];
        s2_in_r_uop_fuType = {_RANDOM[10'h63][31:25], _RANDOM[10'h64][27:0]};
        s2_in_r_uop_fuOpType = {_RANDOM[10'h64][31:28], _RANDOM[10'h65][4:0]};
        s2_in_r_uop_rfWen = _RANDOM[10'h65][5];
        s2_in_r_uop_fpWen = _RANDOM[10'h65][6];
        s2_in_r_uop_uopIdx = _RANDOM[10'h6D][17:11];
        s2_in_r_uop_pdest = _RANDOM[10'h70][24:17];
        s2_in_r_uop_robIdx_flag = _RANDOM[10'h71][5];
        s2_in_r_uop_robIdx_value = _RANDOM[10'h71][13:6];
        s2_in_r_uop_storeSetHit = _RANDOM[10'h83][22];
        s2_in_r_uop_waitForRobIdx_flag = _RANDOM[10'h83][23];
        s2_in_r_uop_waitForRobIdx_value = _RANDOM[10'h83][31:24];
        s2_in_r_uop_loadWaitBit = _RANDOM[10'h84][0];
        s2_in_r_uop_loadWaitStrict = _RANDOM[10'h84][1];
        s2_in_r_uop_lqIdx_flag = _RANDOM[10'h84][7];
        s2_in_r_uop_lqIdx_value = _RANDOM[10'h84][14:8];
        s2_in_r_uop_sqIdx_flag = _RANDOM[10'h84][15];
        s2_in_r_uop_sqIdx_value = _RANDOM[10'h84][21:16];
        s2_in_r_vaddr = {_RANDOM[10'h84][31:29], _RANDOM[10'h85], _RANDOM[10'h86][5:0]};
        s2_in_r_paddr = {_RANDOM[10'h86][31:6], _RANDOM[10'h87][9:0]};
        s2_in_r_gpaddr = {_RANDOM[10'h87][31:10], _RANDOM[10'h88][18:0]};
        s2_in_r_mask = {_RANDOM[10'h88][31:19], _RANDOM[10'h89][2:0]};
        s2_in_r_tlbMiss = _RANDOM[10'h8D][6];
        s2_in_r_isPrefetch = _RANDOM[10'h91][27];
        s2_in_r_isHWPrefetch = _RANDOM[10'h91][28];
        s2_in_r_isvec = _RANDOM[10'h91][29];
        s2_in_r_is128bit = _RANDOM[10'h91][31];
        s2_in_r_usSecondInv = _RANDOM[10'h92][1];
        s2_in_r_elemIdx = _RANDOM[10'h92][9:2];
        s2_in_r_alignedType = _RANDOM[10'h92][12:10];
        s2_in_r_mbIndex = _RANDOM[10'h92][16:13];
        s2_in_r_reg_offset = _RANDOM[10'h92][20:17];
        s2_in_r_elemIdxInsideVd = _RANDOM[10'h92][28:21];
        s2_in_r_vecActive = _RANDOM[10'h92][29];
        s2_in_r_isFirstIssue = _RANDOM[10'h92][31];
        s2_in_r_isLoadReplay = _RANDOM[10'h93][1];
        s2_in_r_mshrid = _RANDOM[10'h93][16:13];
        s2_in_r_forward_tlDchannel = _RANDOM[10'h93][20];
        s2_in_r_delayedLoadError = _RANDOM[10'h93][22];
        s2_in_r_schedIndex = {_RANDOM[10'h93][31:28], _RANDOM[10'h94][2:0]};
        s2_in_r_rep_info_cause_9 = _RANDOM[10'h95][9];
        s2_fwd_frm_d_chan = _RANDOM[10'hA7][23];
        s2_fwd_data_frm_d_chan_0 = _RANDOM[10'hA7][31:24];
        s2_fwd_data_frm_d_chan_1 = _RANDOM[10'hA8][7:0];
        s2_fwd_data_frm_d_chan_2 = _RANDOM[10'hA8][15:8];
        s2_fwd_data_frm_d_chan_3 = _RANDOM[10'hA8][23:16];
        s2_fwd_data_frm_d_chan_4 = _RANDOM[10'hA8][31:24];
        s2_fwd_data_frm_d_chan_5 = _RANDOM[10'hA9][7:0];
        s2_fwd_data_frm_d_chan_6 = _RANDOM[10'hA9][15:8];
        s2_fwd_data_frm_d_chan_7 = _RANDOM[10'hA9][23:16];
        s2_fwd_data_frm_d_chan_8 = _RANDOM[10'hA9][31:24];
        s2_fwd_data_frm_d_chan_9 = _RANDOM[10'hAA][7:0];
        s2_fwd_data_frm_d_chan_10 = _RANDOM[10'hAA][15:8];
        s2_fwd_data_frm_d_chan_11 = _RANDOM[10'hAA][23:16];
        s2_fwd_data_frm_d_chan_12 = _RANDOM[10'hAA][31:24];
        s2_fwd_data_frm_d_chan_13 = _RANDOM[10'hAB][7:0];
        s2_fwd_data_frm_d_chan_14 = _RANDOM[10'hAB][15:8];
        s2_fwd_data_frm_d_chan_15 = _RANDOM[10'hAB][23:16];
        io_s2_ptr_chasing_r = _RANDOM[10'hD2][7];
        io_prefetch_train_valid_last_REG = _RANDOM[10'hD2][8];
        io_prefetch_train_bits_vaddr_r = {_RANDOM[10'hD2][31:9], _RANDOM[10'hD3][17:0]};
        io_prefetch_train_bits_paddr_r = {_RANDOM[10'hD3][31:18], _RANDOM[10'hD4][21:0]};
        io_prefetch_train_bits_uop_r_robIdx_flag = _RANDOM[10'hED][5];
        io_prefetch_train_bits_uop_r_robIdx_value = _RANDOM[10'hED][13:6];
        io_prefetch_train_bits_isFirstIssue_r = _RANDOM[10'h105][21];
        io_prefetch_train_bits_miss_r_1 = _RANDOM[10'h107][1];
        io_prefetch_train_l1_valid_last_REG = _RANDOM[10'h107][6];
        io_prefetch_train_l1_bits_vaddr_r =
          {_RANDOM[10'h107][31:7], _RANDOM[10'h108][15:0]};
        io_prefetch_train_l1_bits_uop_r_robIdx_flag = _RANDOM[10'h122][3];
        io_prefetch_train_l1_bits_uop_r_robIdx_value = _RANDOM[10'h122][11:4];
        io_prefetch_train_l1_bits_isFirstIssue_r = _RANDOM[10'h13A][19];
        io_prefetch_train_l1_bits_miss_r_1 = _RANDOM[10'h13B][31];
        io_prefetch_train_l1_bits_meta_prefetch_r = _RANDOM[10'h13C][2:0];
        s2_ld_valid_dup = _RANDOM[10'h13C][9:4];
        s3_valid_last_REG = _RANDOM[10'h13C][12];
        s3_in_uop_exceptionVec_4 = _RANDOM[10'h13F][4];
        s3_in_uop_exceptionVec_5 = _RANDOM[10'h13F][5];
        s3_in_uop_exceptionVec_13 = _RANDOM[10'h13F][13];
        s3_in_uop_exceptionVec_21 = _RANDOM[10'h13F][21];
        s3_in_uop_preDecodeInfo_isRVC = _RANDOM[10'h140][10];
        s3_in_uop_ftqPtr_flag = _RANDOM[10'h140][17];
        s3_in_uop_ftqPtr_value = _RANDOM[10'h140][23:18];
        s3_in_uop_ftqOffset = _RANDOM[10'h140][27:24];
        s3_in_uop_fuType = {_RANDOM[10'h141][31:22], _RANDOM[10'h142][24:0]};
        s3_in_uop_fuOpType = {_RANDOM[10'h142][31:25], _RANDOM[10'h143][1:0]};
        s3_in_uop_rfWen = _RANDOM[10'h143][2];
        s3_in_uop_fpWen = _RANDOM[10'h143][3];
        s3_in_uop_uopIdx = _RANDOM[10'h14B][14:8];
        s3_in_uop_pdest = _RANDOM[10'h14E][21:14];
        s3_in_uop_robIdx_flag = _RANDOM[10'h14F][2];
        s3_in_uop_robIdx_value = _RANDOM[10'h14F][10:3];
        s3_in_uop_storeSetHit = _RANDOM[10'h161][19];
        s3_in_uop_waitForRobIdx_flag = _RANDOM[10'h161][20];
        s3_in_uop_waitForRobIdx_value = _RANDOM[10'h161][28:21];
        s3_in_uop_loadWaitBit = _RANDOM[10'h161][29];
        s3_in_uop_loadWaitStrict = _RANDOM[10'h161][30];
        s3_in_uop_lqIdx_flag = _RANDOM[10'h162][4];
        s3_in_uop_lqIdx_value = _RANDOM[10'h162][11:5];
        s3_in_uop_sqIdx_flag = _RANDOM[10'h162][12];
        s3_in_uop_sqIdx_value = _RANDOM[10'h162][18:13];
        s3_in_vaddr = {_RANDOM[10'h162][31:26], _RANDOM[10'h163], _RANDOM[10'h164][2:0]};
        s3_in_paddr = {_RANDOM[10'h164][31:3], _RANDOM[10'h165][6:0]};
        s3_in_gpaddr = {_RANDOM[10'h165][31:7], _RANDOM[10'h166][15:0]};
        s3_in_mask = _RANDOM[10'h166][31:16];
        s3_in_miss = _RANDOM[10'h16B][2];
        s3_in_tlbMiss = _RANDOM[10'h16B][3];
        s3_in_mmio = _RANDOM[10'h16B][6];
        s3_in_isvec = _RANDOM[10'h16F][26];
        s3_in_is128bit = _RANDOM[10'h16F][28];
        s3_in_usSecondInv = _RANDOM[10'h16F][30];
        s3_in_elemIdx = {_RANDOM[10'h16F][31], _RANDOM[10'h170][6:0]};
        s3_in_alignedType = _RANDOM[10'h170][9:7];
        s3_in_mbIndex = _RANDOM[10'h170][13:10];
        s3_in_reg_offset = _RANDOM[10'h170][17:14];
        s3_in_elemIdxInsideVd = _RANDOM[10'h170][25:18];
        s3_in_vecActive = _RANDOM[10'h170][26];
        s3_in_isLoadReplay = _RANDOM[10'h170][30];
        s3_in_handledByMSHR = _RANDOM[10'h171][14];
        s3_in_delayedLoadError = _RANDOM[10'h171][19];
        s3_in_schedIndex = _RANDOM[10'h171][31:25];
        s3_in_rep_info_mshr_id = _RANDOM[10'h172][3:0];
        s3_in_rep_info_full_fwd = _RANDOM[10'h172][4];
        s3_in_rep_info_data_inv_sq_idx_flag = _RANDOM[10'h172][5];
        s3_in_rep_info_data_inv_sq_idx_value = _RANDOM[10'h172][11:6];
        s3_in_rep_info_addr_inv_sq_idx_flag = _RANDOM[10'h172][12];
        s3_in_rep_info_addr_inv_sq_idx_value = _RANDOM[10'h172][18:13];
        s3_in_rep_info_last_beat = _RANDOM[10'h172][28];
        s3_in_rep_info_cause_0 = _RANDOM[10'h172][29];
        s3_in_rep_info_cause_1 = _RANDOM[10'h172][30];
        s3_in_rep_info_cause_2 = _RANDOM[10'h172][31];
        s3_in_rep_info_cause_3 = _RANDOM[10'h173][0];
        s3_in_rep_info_cause_4 = _RANDOM[10'h173][1];
        s3_in_rep_info_cause_6 = _RANDOM[10'h173][3];
        s3_in_rep_info_cause_7 = _RANDOM[10'h173][4];
        s3_in_rep_info_cause_8 = _RANDOM[10'h173][5];
        s3_in_rep_info_cause_9 = _RANDOM[10'h173][6];
        s3_in_rep_info_tlb_id = _RANDOM[10'h185][11:8];
        s3_in_rep_info_tlb_full = _RANDOM[10'h185][12];
        s3_dcache_rep = _RANDOM[10'h185][19];
        s3_ld_valid_dup = _RANDOM[10'h185][25:20];
        s3_troublem_last_REG = _RANDOM[10'h185][26];
        s3_vecActive = _RANDOM[10'h185][27];
        s3_isvec = _RANDOM[10'h185][28];
        s3_vec_alignedType = _RANDOM[10'h185][31:29];
        s3_vec_mBIndex = _RANDOM[10'h186][3:0];
        s3_data_select = _RANDOM[10'h186][11:4];
        s3_data_select_by_offset_0 = _RANDOM[10'h186][12];
        s3_data_select_by_offset_1 = _RANDOM[10'h186][13];
        s3_data_select_by_offset_2 = _RANDOM[10'h186][14];
        s3_data_select_by_offset_3 = _RANDOM[10'h186][15];
        s3_data_select_by_offset_4 = _RANDOM[10'h186][16];
        s3_data_select_by_offset_5 = _RANDOM[10'h186][17];
        s3_data_select_by_offset_6 = _RANDOM[10'h186][18];
        s3_data_select_by_offset_7 = _RANDOM[10'h186][19];
        s3_data_select_by_offset_8 = _RANDOM[10'h186][20];
        s3_data_select_by_offset_9 = _RANDOM[10'h186][21];
        s3_data_select_by_offset_10 = _RANDOM[10'h186][22];
        s3_data_select_by_offset_11 = _RANDOM[10'h186][23];
        s3_data_select_by_offset_12 = _RANDOM[10'h186][24];
        s3_data_select_by_offset_13 = _RANDOM[10'h186][25];
        s3_data_select_by_offset_14 = _RANDOM[10'h186][26];
        s3_data_select_by_offset_15 = _RANDOM[10'h186][27];
        s3_mmio_valid_REG = _RANDOM[10'h186][28];
        s3_mmio_valid_REG_1 = _RANDOM[10'h186][29];
        s3_mmio_valid_REG_2 = _RANDOM[10'h186][30];
        s3_mmio_bits_REG_uop_exceptionVec_4 = _RANDOM[10'h189][22];
        s3_mmio_bits_REG_uop_exceptionVec_5 = _RANDOM[10'h189][23];
        s3_mmio_bits_REG_uop_exceptionVec_13 = _RANDOM[10'h189][31];
        s3_mmio_bits_REG_uop_exceptionVec_21 = _RANDOM[10'h18A][7];
        s3_mmio_bits_REG_uop_fuType = {_RANDOM[10'h18C][31:8], _RANDOM[10'h18D][10:0]};
        s3_mmio_bits_REG_uop_rfWen = _RANDOM[10'h18D][20];
        s3_mmio_bits_REG_uop_fpWen = _RANDOM[10'h18D][21];
        s3_mmio_bits_REG_uop_flushPipe = _RANDOM[10'h18D][28];
        s3_mmio_bits_REG_uop_pdest = _RANDOM[10'h199][7:0];
        s3_mmio_bits_REG_uop_robIdx_flag = _RANDOM[10'h199][20];
        s3_mmio_bits_REG_uop_robIdx_value = _RANDOM[10'h199][28:21];
        s3_mmio_bits_REG_uop_replayInst = _RANDOM[10'h1AD][6];
        s3_mmio_bits_REG_1_uop_exceptionVec_4 = _RANDOM[10'h1B4][18];
        s3_mmio_bits_REG_1_uop_exceptionVec_5 = _RANDOM[10'h1B4][19];
        s3_mmio_bits_REG_1_uop_exceptionVec_13 = _RANDOM[10'h1B4][27];
        s3_mmio_bits_REG_1_uop_exceptionVec_21 = _RANDOM[10'h1B5][3];
        s3_mmio_bits_REG_1_uop_fuType = {_RANDOM[10'h1B7][31:4], _RANDOM[10'h1B8][6:0]};
        s3_mmio_bits_REG_1_uop_rfWen = _RANDOM[10'h1B8][16];
        s3_mmio_bits_REG_1_uop_fpWen = _RANDOM[10'h1B8][17];
        s3_mmio_bits_REG_1_uop_flushPipe = _RANDOM[10'h1B8][24];
        s3_mmio_bits_REG_1_uop_pdest = {_RANDOM[10'h1C3][31:28], _RANDOM[10'h1C4][3:0]};
        s3_mmio_bits_REG_1_uop_robIdx_flag = _RANDOM[10'h1C4][16];
        s3_mmio_bits_REG_1_uop_robIdx_value = _RANDOM[10'h1C4][24:17];
        s3_mmio_bits_REG_1_uop_replayInst = _RANDOM[10'h1D8][2];
        s3_mmio_bits_REG_2_uop_exceptionVec_4 = _RANDOM[10'h1DF][14];
        s3_mmio_bits_REG_2_uop_exceptionVec_5 = _RANDOM[10'h1DF][15];
        s3_mmio_bits_REG_2_uop_exceptionVec_13 = _RANDOM[10'h1DF][23];
        s3_mmio_bits_REG_2_uop_exceptionVec_21 = _RANDOM[10'h1DF][31];
        s3_mmio_bits_REG_2_uop_fuType = {_RANDOM[10'h1E2], _RANDOM[10'h1E3][2:0]};
        s3_mmio_bits_REG_2_uop_rfWen = _RANDOM[10'h1E3][12];
        s3_mmio_bits_REG_2_uop_fpWen = _RANDOM[10'h1E3][13];
        s3_mmio_bits_REG_2_uop_flushPipe = _RANDOM[10'h1E3][20];
        s3_mmio_bits_REG_2_uop_pdest = _RANDOM[10'h1EE][31:24];
        s3_mmio_bits_REG_2_uop_robIdx_flag = _RANDOM[10'h1EF][12];
        s3_mmio_bits_REG_2_uop_robIdx_value = _RANDOM[10'h1EF][20:13];
        s3_mmio_bits_REG_2_uop_replayInst = _RANDOM[10'h202][30];
        s3_fwd_frm_d_chan = _RANDOM[10'h207][19];
        s3_fwd_data_frm_d_chan_0 = _RANDOM[10'h207][27:20];
        s3_fwd_data_frm_d_chan_1 = {_RANDOM[10'h207][31:28], _RANDOM[10'h208][3:0]};
        s3_fwd_data_frm_d_chan_2 = _RANDOM[10'h208][11:4];
        s3_fwd_data_frm_d_chan_3 = _RANDOM[10'h208][19:12];
        s3_fwd_data_frm_d_chan_4 = _RANDOM[10'h208][27:20];
        s3_fwd_data_frm_d_chan_5 = {_RANDOM[10'h208][31:28], _RANDOM[10'h209][3:0]};
        s3_fwd_data_frm_d_chan_6 = _RANDOM[10'h209][11:4];
        s3_fwd_data_frm_d_chan_7 = _RANDOM[10'h209][19:12];
        s3_fwd_data_frm_d_chan_8 = _RANDOM[10'h209][27:20];
        s3_fwd_data_frm_d_chan_9 = {_RANDOM[10'h209][31:28], _RANDOM[10'h20A][3:0]};
        s3_fwd_data_frm_d_chan_10 = _RANDOM[10'h20A][11:4];
        s3_fwd_data_frm_d_chan_11 = _RANDOM[10'h20A][19:12];
        s3_fwd_data_frm_d_chan_12 = _RANDOM[10'h20A][27:20];
        s3_fwd_data_frm_d_chan_13 = {_RANDOM[10'h20A][31:28], _RANDOM[10'h20B][3:0]};
        s3_fwd_data_frm_d_chan_14 = _RANDOM[10'h20B][11:4];
        s3_fwd_data_frm_d_chan_15 = _RANDOM[10'h20B][19:12];
        s3_fwd_data_valid = _RANDOM[10'h20B][20];
        s3_vp_match_fail_last_REG = _RANDOM[10'h20B][22];
        s3_ldld_rep_inst_last_REG = _RANDOM[10'h20B][23];
        s3_fast_rep_last_REG = _RANDOM[10'h20B][24];
        s3_ld_raw_data_frm_uncache_REG_lqData =
          {_RANDOM[10'h20B][31:25], _RANDOM[10'h20C], _RANDOM[10'h20D][24:0]};
        s3_ld_raw_data_frm_uncache_REG_uop_fuOpType = _RANDOM[10'h214][13:5];
        s3_ld_raw_data_frm_uncache_REG_uop_fpWen = _RANDOM[10'h214][15];
        s3_ld_raw_data_frm_uncache_REG_addrOffset = _RANDOM[10'h234][8:6];
        s3_ld_raw_data_frm_uncache_REG_1_lqData =
          {_RANDOM[10'h234][31:9], _RANDOM[10'h235], _RANDOM[10'h236][8:0]};
        s3_ld_raw_data_frm_uncache_REG_1_uop_fuOpType = _RANDOM[10'h23C][29:21];
        s3_ld_raw_data_frm_uncache_REG_1_uop_fpWen = _RANDOM[10'h23C][31];
        s3_ld_raw_data_frm_uncache_REG_1_addrOffset = _RANDOM[10'h25C][24:22];
        s3_ld_raw_data_frm_uncache_lqData =
          {_RANDOM[10'h25C][31:25], _RANDOM[10'h25D], _RANDOM[10'h25E][24:0]};
        s3_ld_raw_data_frm_uncache_uop_fuOpType = _RANDOM[10'h265][13:5];
        s3_ld_raw_data_frm_uncache_uop_fpWen = _RANDOM[10'h265][15];
        s3_ld_raw_data_frm_uncache_addrOffset = _RANDOM[10'h285][8:6];
        r_4_0 = _RANDOM[10'h285][9];
        r_4_1 = _RANDOM[10'h285][10];
        r_4_2 = _RANDOM[10'h285][11];
        r_4_3 = _RANDOM[10'h285][12];
        r_4_4 = _RANDOM[10'h285][13];
        r_4_5 = _RANDOM[10'h285][14];
        r_4_6 = _RANDOM[10'h285][15];
        r_4_7 = _RANDOM[10'h285][16];
        r_4_8 = _RANDOM[10'h285][17];
        r_4_9 = _RANDOM[10'h285][18];
        r_4_10 = _RANDOM[10'h285][19];
        r_4_11 = _RANDOM[10'h285][20];
        r_4_12 = _RANDOM[10'h285][21];
        r_4_13 = _RANDOM[10'h285][22];
        r_4_14 = _RANDOM[10'h285][23];
        r_4_15 = _RANDOM[10'h285][24];
        r_5_0 = {_RANDOM[10'h285][31:25], _RANDOM[10'h286][0]};
        r_5_1 = _RANDOM[10'h286][8:1];
        r_5_2 = _RANDOM[10'h286][16:9];
        r_5_3 = _RANDOM[10'h286][24:17];
        r_5_4 = {_RANDOM[10'h286][31:25], _RANDOM[10'h287][0]};
        r_5_5 = _RANDOM[10'h287][8:1];
        r_5_6 = _RANDOM[10'h287][16:9];
        r_5_7 = _RANDOM[10'h287][24:17];
        r_5_8 = {_RANDOM[10'h287][31:25], _RANDOM[10'h288][0]};
        r_5_9 = _RANDOM[10'h288][8:1];
        r_5_10 = _RANDOM[10'h288][16:9];
        r_5_11 = _RANDOM[10'h288][24:17];
        r_5_12 = {_RANDOM[10'h288][31:25], _RANDOM[10'h289][0]};
        r_5_13 = _RANDOM[10'h289][8:1];
        r_5_14 = _RANDOM[10'h289][16:9];
        r_5_15 = _RANDOM[10'h289][24:17];
        s3_ld_raw_data_frm_cache_forward_D_r = _RANDOM[10'h2B0][10];
        r_6_0 = _RANDOM[10'h2B0][18:11];
        r_6_1 = _RANDOM[10'h2B0][26:19];
        r_6_2 = {_RANDOM[10'h2B0][31:27], _RANDOM[10'h2B1][2:0]};
        r_6_3 = _RANDOM[10'h2B1][10:3];
        r_6_4 = _RANDOM[10'h2B1][18:11];
        r_6_5 = _RANDOM[10'h2B1][26:19];
        r_6_6 = {_RANDOM[10'h2B1][31:27], _RANDOM[10'h2B2][2:0]};
        r_6_7 = _RANDOM[10'h2B2][10:3];
        r_6_8 = _RANDOM[10'h2B2][18:11];
        r_6_9 = _RANDOM[10'h2B2][26:19];
        r_6_10 = {_RANDOM[10'h2B2][31:27], _RANDOM[10'h2B3][2:0]};
        r_6_11 = _RANDOM[10'h2B3][10:3];
        r_6_12 = _RANDOM[10'h2B3][18:11];
        r_6_13 = _RANDOM[10'h2B3][26:19];
        r_6_14 = {_RANDOM[10'h2B3][31:27], _RANDOM[10'h2B4][2:0]};
        r_6_15 = _RANDOM[10'h2B4][10:3];
        s3_ld_raw_data_frm_cache_forward_mshr_r = _RANDOM[10'h2B4][11];
        r_7_0 = _RANDOM[10'h2B4][19:12];
        r_7_1 = _RANDOM[10'h2B4][27:20];
        r_7_2 = {_RANDOM[10'h2B4][31:28], _RANDOM[10'h2B5][3:0]};
        r_7_3 = _RANDOM[10'h2B5][11:4];
        r_7_4 = _RANDOM[10'h2B5][19:12];
        r_7_5 = _RANDOM[10'h2B5][27:20];
        r_7_6 = {_RANDOM[10'h2B5][31:28], _RANDOM[10'h2B6][3:0]};
        r_7_7 = _RANDOM[10'h2B6][11:4];
        r_7_8 = _RANDOM[10'h2B6][19:12];
        r_7_9 = _RANDOM[10'h2B6][27:20];
        r_7_10 = {_RANDOM[10'h2B6][31:28], _RANDOM[10'h2B7][3:0]};
        r_7_11 = _RANDOM[10'h2B7][11:4];
        r_7_12 = _RANDOM[10'h2B7][19:12];
        r_7_13 = _RANDOM[10'h2B7][27:20];
        r_7_14 = {_RANDOM[10'h2B7][31:28], _RANDOM[10'h2B8][3:0]};
        r_7_15 = _RANDOM[10'h2B8][11:4];
        s3_ld_raw_data_frm_cache_forward_result_valid_r = _RANDOM[10'h2B8][12];
        tdata2_next_r =
          {_RANDOM[10'h2BC][31:13], _RANDOM[10'h2BD], _RANDOM[10'h2BE][12:0]};
        matchType = _RANDOM[10'h2BE][14:13];
        tEnable = _RANDOM[10'h2BE][15];
        hit_ld_addr_trig_hit_vec_0_r = {_RANDOM[10'h2BE][31:16], _RANDOM[10'h2BF][24:0]};
        tdata2_next_r_1 =
          {_RANDOM[10'h2BF][31:25], _RANDOM[10'h2C0], _RANDOM[10'h2C1][24:0]};
        matchType_1 = _RANDOM[10'h2C1][26:25];
        tEnable_1 = _RANDOM[10'h2C1][27];
        hit_ld_addr_trig_hit_vec_1_r =
          {_RANDOM[10'h2C1][31:28], _RANDOM[10'h2C2], _RANDOM[10'h2C3][4:0]};
        tdata2_next_r_2 =
          {_RANDOM[10'h2C3][31:5], _RANDOM[10'h2C4], _RANDOM[10'h2C5][4:0]};
        matchType_2 = _RANDOM[10'h2C5][6:5];
        tEnable_2 = _RANDOM[10'h2C5][7];
        hit_ld_addr_trig_hit_vec_2_r = {_RANDOM[10'h2C5][31:8], _RANDOM[10'h2C6][16:0]};
        tdata2_next_r_3 =
          {_RANDOM[10'h2C6][31:17], _RANDOM[10'h2C7], _RANDOM[10'h2C8][16:0]};
        matchType_3 = _RANDOM[10'h2C8][18:17];
        tEnable_3 = _RANDOM[10'h2C8][19];
        hit_ld_addr_trig_hit_vec_3_r = {_RANDOM[10'h2C8][31:20], _RANDOM[10'h2C9][28:0]};
        io_perf_0_value_REG = _RANDOM[10'h2C9][30];
        io_perf_0_value_REG_1 = _RANDOM[10'h2C9][31];
        io_perf_1_value_REG = _RANDOM[10'h2CA][0];
        io_perf_1_value_REG_1 = _RANDOM[10'h2CA][1];
        io_perf_2_value_REG = _RANDOM[10'h2CA][2];
        io_perf_2_value_REG_1 = _RANDOM[10'h2CA][3];
        io_perf_3_value_REG = _RANDOM[10'h2CA][4];
        io_perf_3_value_REG_1 = _RANDOM[10'h2CA][5];
        io_perf_4_value_REG = _RANDOM[10'h2CA][6];
        io_perf_4_value_REG_1 = _RANDOM[10'h2CA][7];
        io_perf_5_value_REG = _RANDOM[10'h2CA][8];
        io_perf_5_value_REG_1 = _RANDOM[10'h2CA][9];
        io_perf_6_value_REG = _RANDOM[10'h2CA][10];
        io_perf_6_value_REG_1 = _RANDOM[10'h2CA][11];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        s1_valid = 1'h0;
        s1_vecActive = 1'h1;
        s1_try_ptr_chasing_last_REG = 1'h0;
        s1_redirect_reg_valid_last_REG = 1'h0;
        s1_kill_last_REG = 1'h0;
        s2_valid = 1'h0;
        s2_vecActive = 1'h1;
        s2_isvec = 1'h0;
        s2_fwd_frm_d_chan = 1'h0;
        s2_fwd_data_frm_d_chan_0 = 8'h0;
        s2_fwd_data_frm_d_chan_1 = 8'h0;
        s2_fwd_data_frm_d_chan_2 = 8'h0;
        s2_fwd_data_frm_d_chan_3 = 8'h0;
        s2_fwd_data_frm_d_chan_4 = 8'h0;
        s2_fwd_data_frm_d_chan_5 = 8'h0;
        s2_fwd_data_frm_d_chan_6 = 8'h0;
        s2_fwd_data_frm_d_chan_7 = 8'h0;
        s2_fwd_data_frm_d_chan_8 = 8'h0;
        s2_fwd_data_frm_d_chan_9 = 8'h0;
        s2_fwd_data_frm_d_chan_10 = 8'h0;
        s2_fwd_data_frm_d_chan_11 = 8'h0;
        s2_fwd_data_frm_d_chan_12 = 8'h0;
        s2_fwd_data_frm_d_chan_13 = 8'h0;
        s2_fwd_data_frm_d_chan_14 = 8'h0;
        s2_fwd_data_frm_d_chan_15 = 8'h0;
        io_s2_ptr_chasing_r = 1'h0;
        io_prefetch_train_valid_last_REG = 1'h0;
        io_prefetch_train_l1_valid_last_REG = 1'h0;
        s2_ld_valid_dup = 6'h0;
        s3_valid_last_REG = 1'h0;
        s3_dcache_rep = 1'h0;
        s3_troublem_last_REG = 1'h0;
        s3_vecActive = 1'h1;
        s3_isvec = 1'h0;
        s3_data_select = 8'h0;
        s3_data_select_by_offset_0 = 1'h0;
        s3_data_select_by_offset_1 = 1'h0;
        s3_data_select_by_offset_2 = 1'h0;
        s3_data_select_by_offset_3 = 1'h0;
        s3_data_select_by_offset_4 = 1'h0;
        s3_data_select_by_offset_5 = 1'h0;
        s3_data_select_by_offset_6 = 1'h0;
        s3_data_select_by_offset_7 = 1'h0;
        s3_data_select_by_offset_8 = 1'h0;
        s3_data_select_by_offset_9 = 1'h0;
        s3_data_select_by_offset_10 = 1'h0;
        s3_data_select_by_offset_11 = 1'h0;
        s3_data_select_by_offset_12 = 1'h0;
        s3_data_select_by_offset_13 = 1'h0;
        s3_data_select_by_offset_14 = 1'h0;
        s3_data_select_by_offset_15 = 1'h0;
        s3_mmio_valid_REG = 1'h0;
        s3_mmio_valid_REG_1 = 1'h0;
        s3_mmio_valid_REG_2 = 1'h0;
        s3_fwd_frm_d_chan = 1'h0;
        s3_fwd_data_frm_d_chan_0 = 8'h0;
        s3_fwd_data_frm_d_chan_1 = 8'h0;
        s3_fwd_data_frm_d_chan_2 = 8'h0;
        s3_fwd_data_frm_d_chan_3 = 8'h0;
        s3_fwd_data_frm_d_chan_4 = 8'h0;
        s3_fwd_data_frm_d_chan_5 = 8'h0;
        s3_fwd_data_frm_d_chan_6 = 8'h0;
        s3_fwd_data_frm_d_chan_7 = 8'h0;
        s3_fwd_data_frm_d_chan_8 = 8'h0;
        s3_fwd_data_frm_d_chan_9 = 8'h0;
        s3_fwd_data_frm_d_chan_10 = 8'h0;
        s3_fwd_data_frm_d_chan_11 = 8'h0;
        s3_fwd_data_frm_d_chan_12 = 8'h0;
        s3_fwd_data_frm_d_chan_13 = 8'h0;
        s3_fwd_data_frm_d_chan_14 = 8'h0;
        s3_fwd_data_frm_d_chan_15 = 8'h0;
        s3_fwd_data_valid = 1'h0;
        s3_vp_match_fail_last_REG = 1'h0;
        s3_ldld_rep_inst_last_REG = 1'h0;
        s3_fast_rep_last_REG = 1'h0;
        s3_ld_raw_data_frm_cache_forward_D_r = 1'h0;
        s3_ld_raw_data_frm_cache_forward_mshr_r = 1'h0;
        s3_ld_raw_data_frm_cache_forward_result_valid_r = 1'h0;
        tdata2_next_r = 64'h0;
        hit_ld_addr_trig_hit_vec_0_r = 41'h0;
        tdata2_next_r_1 = 64'h0;
        hit_ld_addr_trig_hit_vec_1_r = 41'h0;
        tdata2_next_r_2 = 64'h0;
        hit_ld_addr_trig_hit_vec_2_r = 41'h0;
        tdata2_next_r_3 = 64'h0;
        hit_ld_addr_trig_hit_vec_3_r = 41'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_ldin_ready = _io_ldin_ready_T & s0_int_iss_ready;
  assign io_ldout_valid =
    s3_out_valid & ~s3_isvec | s3_mmio_valid_REG_2 & ~s3_valid_last_REG;
  assign io_ldout_bits_uop_exceptionVec_4 =
    s3_valid_last_REG ? s3_in_uop_exceptionVec_4 : s3_mmio_bits_REG_2_uop_exceptionVec_4;
  assign io_ldout_bits_uop_exceptionVec_5 =
    s3_valid_last_REG ? new_vec_1_5 : s3_mmio_bits_REG_2_uop_exceptionVec_5;
  assign io_ldout_bits_uop_exceptionVec_13 =
    s3_valid_last_REG
      ? s3_in_uop_exceptionVec_13
      : s3_mmio_bits_REG_2_uop_exceptionVec_13;
  assign io_ldout_bits_uop_exceptionVec_21 =
    s3_valid_last_REG
      ? s3_in_uop_exceptionVec_21
      : s3_mmio_bits_REG_2_uop_exceptionVec_21;
  assign io_ldout_bits_uop_fuType =
    s3_valid_last_REG ? s3_in_uop_fuType : s3_mmio_bits_REG_2_uop_fuType;
  assign io_ldout_bits_uop_rfWen =
    s3_valid_last_REG ? s3_in_uop_rfWen : s3_mmio_bits_REG_2_uop_rfWen;
  assign io_ldout_bits_uop_fpWen =
    s3_valid_last_REG ? s3_in_uop_fpWen : s3_mmio_bits_REG_2_uop_fpWen;
  assign io_ldout_bits_uop_flushPipe =
    ~s3_valid_last_REG & s3_mmio_bits_REG_2_uop_flushPipe;
  assign io_ldout_bits_uop_pdest =
    s3_valid_last_REG ? s3_in_uop_pdest : s3_mmio_bits_REG_2_uop_pdest;
  assign io_ldout_bits_uop_robIdx_flag =
    s3_valid_last_REG ? s3_in_uop_robIdx_flag : s3_mmio_bits_REG_2_uop_robIdx_flag;
  assign io_ldout_bits_uop_robIdx_value =
    s3_valid_last_REG ? s3_in_uop_robIdx_value : s3_mmio_bits_REG_2_uop_robIdx_value;
  assign io_ldout_bits_uop_replayInst =
    s3_valid_last_REG ? s3_out_bits_uop_replayInst : s3_mmio_bits_REG_2_uop_replayInst;
  assign io_ldout_bits_data =
    s3_valid_last_REG
      ? (s3_data_select[0] ? {56'h0, _vecdata_T_1} : 64'h0)
        | (s3_data_select[1] ? {48'h0, _GEN_19[15:8], _vecdata_T_1} : 64'h0)
        | (s3_data_select[2]
             ? {32'h0, _GEN_17[31:24], _GEN_18[23:16], _GEN_19[15:8], _vecdata_T_1}
             : 64'h0)
        | (s3_data_select[3]
             ? {_s3_picked_data_frm_cache_T_23[63:56],
                _GEN_14[55:48],
                _GEN_15[47:40],
                _GEN_16[39:32],
                _GEN_17[31:24],
                _GEN_18[23:16],
                _GEN_19[15:8],
                _vecdata_T_1}
             : 64'h0)
        | (s3_data_select[4] ? {{56{_vecdata_T_1[7]}}, _vecdata_T_1} : 64'h0)
        | (s3_data_select[5] ? {{48{_GEN_19[15]}}, _GEN_19[15:8], _vecdata_T_1} : 64'h0)
        | (s3_data_select[6]
             ? {{32{_GEN_17[31]}},
                _GEN_17[31:24],
                _GEN_18[23:16],
                _GEN_19[15:8],
                _vecdata_T_1}
             : 64'h0)
        | (s3_data_select[7]
             ? {32'hFFFFFFFF, _GEN_17[31:24], _GEN_18[23:16], _GEN_19[15:8], _vecdata_T_1}
             : 64'h0)
      : (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h0
           ? {{56{_s3_ld_data_frm_uncache_T_40[7]}}, _s3_ld_data_frm_uncache_T_40}
           : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h1
             ? {{48{_GEN_7[15]}}, _GEN_7[15:8], _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h2
             ? {{32{s3_ld_raw_data_frm_uncache_uop_fpWen | _GEN_5[31]}},
                _GEN_5[31:24],
                _GEN_6[23:16],
                _GEN_7[15:8],
                _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h3
             ? s3_picked_data_frm_uncache
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h4
             ? {56'h0, _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h5
             ? {48'h0, _GEN_7[15:8], _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h6
             ? {32'h0,
                _GEN_5[31:24],
                _GEN_6[23:16],
                _GEN_7[15:8],
                _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h10
             ? {{56{_s3_ld_data_frm_uncache_T_40[7]}}, _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h11
             ? {{48{_GEN_7[15]}}, _GEN_7[15:8], _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h12
             ? {{32{_GEN_5[31]}},
                _GEN_5[31:24],
                _GEN_6[23:16],
                _GEN_7[15:8],
                _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h13
             ? s3_picked_data_frm_uncache
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h14
             ? {56'h0, _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h15
             ? {48'h0, _GEN_7[15:8], _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h16
             ? {32'h0,
                _GEN_5[31:24],
                _GEN_6[23:16],
                _GEN_7[15:8],
                _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h1D
             ? {48'h0, _GEN_7[15:8], _s3_ld_data_frm_uncache_T_40}
             : 64'h0)
        | (s3_ld_raw_data_frm_uncache_uop_fuOpType == 9'h1E
             ? {32'h0,
                _GEN_5[31:24],
                _GEN_6[23:16],
                _GEN_7[15:8],
                _s3_ld_data_frm_uncache_T_40}
             : 64'h0);
  assign io_vecldin_ready = _io_ldin_ready_T & s0_vec_iss_ready;
  assign io_vecldout_valid =
    s3_out_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {s3_in_uop_robIdx_flag,
              s3_in_uop_robIdx_value} == _io_vecldout_valid_flushItself_T_6
           | s3_in_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ s3_in_uop_robIdx_value > io_redirect_bits_robIdx_value)) & s3_isvec
    | io_lsq_uncache_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_lsq_uncache_bits_uop_robIdx_flag,
              io_lsq_uncache_bits_uop_robIdx_value} == _io_vecldout_valid_flushItself_T_6
           | io_lsq_uncache_bits_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_lsq_uncache_bits_uop_robIdx_value > io_redirect_bits_robIdx_value))
    & ~s3_out_valid
    & (io_lsq_uncache_bits_uop_fuType[31] | io_lsq_uncache_bits_uop_fuType[32]
       | io_lsq_uncache_bits_uop_fuType[33] | io_lsq_uncache_bits_uop_fuType[34]);
  assign io_vecldout_bits_mBIndex = s3_vec_mBIndex;
  assign io_vecldout_bits_hit =
    {s3_in_rep_info_cause_9,
     s3_in_rep_info_cause_8,
     s3_in_rep_info_cause_7,
     s3_in_rep_info_cause_6,
     s3_rep_info_cause_4,
     s3_in_rep_info_cause_3,
     s3_in_rep_info_cause_2,
     s3_in_rep_info_cause_1,
     s3_in_rep_info_cause_0} == 9'h0 | io_lsq_ldin_ready;
  assign io_vecldout_bits_exceptionVec_4 = s3_in_uop_exceptionVec_4;
  assign io_vecldout_bits_exceptionVec_5 = new_vec_1_5;
  assign io_vecldout_bits_exceptionVec_13 = s3_in_uop_exceptionVec_13;
  assign io_vecldout_bits_exceptionVec_21 = s3_in_uop_exceptionVec_21;
  assign io_vecldout_bits_vaddr = s3_in_vaddr;
  assign io_vecldout_bits_usSecondInv = s3_in_usSecondInv;
  assign io_vecldout_bits_elemIdx = s3_in_elemIdx;
  assign io_vecldout_bits_mask = s3_in_mask;
  assign io_vecldout_bits_alignedType = s3_vec_alignedType;
  assign io_vecldout_bits_reg_offset = s3_in_reg_offset;
  assign io_vecldout_bits_elemIdxInsideVd = s3_in_elemIdxInsideVd;
  assign io_vecldout_bits_vecdata =
    s3_in_is128bit
      ? {s3_merged_data_frm_cache_rdataVec_15,
         s3_merged_data_frm_cache_rdataVec_14,
         s3_merged_data_frm_cache_rdataVec_13,
         s3_merged_data_frm_cache_rdataVec_12,
         s3_merged_data_frm_cache_rdataVec_11,
         s3_merged_data_frm_cache_rdataVec_10,
         s3_merged_data_frm_cache_rdataVec_9,
         s3_merged_data_frm_cache_rdataVec_8,
         s3_merged_data_frm_cache_rdataVec_7,
         s3_merged_data_frm_cache_rdataVec_6,
         s3_merged_data_frm_cache_rdataVec_5,
         s3_merged_data_frm_cache_rdataVec_4,
         s3_merged_data_frm_cache_rdataVec_3,
         s3_merged_data_frm_cache_rdataVec_2,
         s3_merged_data_frm_cache_rdataVec_1,
         s3_merged_data_frm_cache_rdataVec_0}
      : (s3_vec_alignedType[1:0] == 2'h0 ? {120'h0, _vecdata_T_1} : 128'h0)
        | (s3_vec_alignedType[1:0] == 2'h1
             ? {112'h0, _GEN_19[15:8], _vecdata_T_1}
             : 128'h0)
        | (s3_vec_alignedType[1:0] == 2'h2
             ? {96'h0, _GEN_17[31:24], _GEN_18[23:16], _GEN_19[15:8], _vecdata_T_1}
             : 128'h0)
        | ((&(s3_vec_alignedType[1:0]))
             ? {64'h0,
                _s3_picked_data_frm_cache_T_23[63:56],
                _GEN_14[55:48],
                _GEN_15[47:40],
                _GEN_16[39:32],
                _GEN_17[31:24],
                _GEN_18[23:16],
                _GEN_19[15:8],
                _vecdata_T_1}
             : 128'h0);
  assign io_tlb_req_valid = s0_valid & ~s0_hw_prf_select;
  assign io_tlb_req_bits_vaddr = _s0_tlb_vaddr_T_9;
  assign io_tlb_req_bits_cmd = {2'h0, s0_sel_src_prf & s0_sel_src_prf_wr};
  assign io_tlb_req_bits_hyperinst =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_uop_fuOpType[4] & ~(io_replay_bits_uop_fuOpType[5])
                  & ~(|(io_replay_bits_uop_fuOpType[8:7]))
                : io_fast_rep_in_bits_uop_fuOpType[4]
                  & ~(io_fast_rep_in_bits_uop_fuOpType[5])
                  & ~(|(io_fast_rep_in_bits_uop_fuOpType[8:7])))
           : io_lsq_uncache_valid
               ? io_lsq_uncache_bits_uop_fuOpType[4]
                 & ~(io_lsq_uncache_bits_uop_fuOpType[5])
                 & ~(|(io_lsq_uncache_bits_uop_fuOpType[8:7]))
               : io_replay_bits_uop_fuOpType[4] & ~(io_replay_bits_uop_fuOpType[5])
                 & ~(|(io_replay_bits_uop_fuOpType[8:7])))
      : ~_s0_sel_src_T_6 & io_ldin_valid & io_ldin_bits_uop_fuOpType[4]
        & ~(io_ldin_bits_uop_fuOpType[5]) & ~(|(io_ldin_bits_uop_fuOpType[8:7]));
  assign io_tlb_req_bits_hlvx =
    _s0_sel_src_T_4
      ? (_io_wakeup_valid_T_2
           ? (s0_super_ld_rep_valid
                ? io_replay_bits_uop_fuOpType[4] & io_replay_bits_uop_fuOpType[3]
                  & ~(io_replay_bits_uop_fuOpType[5])
                  & ~(|(io_replay_bits_uop_fuOpType[8:7]))
                : io_fast_rep_in_bits_uop_fuOpType[4]
                  & io_fast_rep_in_bits_uop_fuOpType[3]
                  & ~(io_fast_rep_in_bits_uop_fuOpType[5])
                  & ~(|(io_fast_rep_in_bits_uop_fuOpType[8:7])))
           : io_lsq_uncache_valid
               ? io_lsq_uncache_bits_uop_fuOpType[4] & io_lsq_uncache_bits_uop_fuOpType[3]
                 & ~(io_lsq_uncache_bits_uop_fuOpType[5])
                 & ~(|(io_lsq_uncache_bits_uop_fuOpType[8:7]))
               : io_replay_bits_uop_fuOpType[4] & io_replay_bits_uop_fuOpType[3]
                 & ~(io_replay_bits_uop_fuOpType[5])
                 & ~(|(io_replay_bits_uop_fuOpType[8:7])))
      : ~_s0_sel_src_T_6 & io_ldin_valid & io_ldin_bits_uop_fuOpType[4]
        & io_ldin_bits_uop_fuOpType[3] & ~(io_ldin_bits_uop_fuOpType[5])
        & ~(|(io_ldin_bits_uop_fuOpType[8:7]));
  assign io_tlb_req_bits_no_translate = s0_hw_prf_select;
  assign io_tlb_req_bits_pmp_addr = s1_in_r_paddr;
  assign io_tlb_req_bits_debug_robIdx_flag = s0_sel_src_uop_robIdx_flag;
  assign io_tlb_req_bits_debug_robIdx_value = s0_sel_src_uop_robIdx_value;
  assign io_tlb_req_kill = io_tlb_req_kill_0;
  assign io_dcache_req_valid = s0_valid;
  assign io_dcache_req_bits_cmd =
    {3'h0, s0_sel_src_prf_rd ? 2'h2 : {2{s0_sel_src_prf_wr}}};
  assign io_dcache_req_bits_vaddr = s0_dcache_vaddr;
  assign io_dcache_req_bits_instrtype = {2'h0, {2{s0_sel_src_prf}}};
  assign io_dcache_req_bits_lqIdx_flag = s0_sel_src_uop_lqIdx_flag;
  assign io_dcache_req_bits_lqIdx_value = s0_sel_src_uop_lqIdx_value;
  assign io_dcache_s1_kill = io_tlb_req_kill_0 | s1_tlb_miss | (|_GEN);
  assign io_dcache_s2_kill = io_pmp_ld | io_pmp_mmio | s2_kill;
  assign io_dcache_is128Req = s0_sel_src_is128bit;
  assign io_dcache_pf_source =
    s0_hw_prf_select ? io_prefetch_req_bits_pf_source_value : 3'h0;
  assign io_dcache_s1_paddr_dup_lsu = s1_paddr_dup_lsu;
  assign io_dcache_s1_paddr_dup_dcache =
    s1_in_r_isHWPrefetch ? s1_in_r_paddr : io_tlb_resp_bits_paddr_1;
  assign io_sbuffer_vaddr = s1_in_r_vaddr;
  assign io_sbuffer_paddr = s1_paddr_dup_lsu;
  assign io_sbuffer_valid =
    s1_valid
    & ~(_io_lsq_forward_valid_T | s1_kill | s1_out_delayedLoadError | s1_in_r_isPrefetch);
  assign io_lsq_ldin_valid =
    s3_valid_last_REG
    & (~s3_fast_rep_last_REG | s0_super_ld_rep_valid | ~io_dcache_req_ready);
  assign io_lsq_ldin_bits_uop_exceptionVec_4 = s3_in_uop_exceptionVec_4;
  assign io_lsq_ldin_bits_uop_exceptionVec_5 = new_vec_1_5;
  assign io_lsq_ldin_bits_uop_exceptionVec_13 = s3_in_uop_exceptionVec_13;
  assign io_lsq_ldin_bits_uop_exceptionVec_21 = s3_in_uop_exceptionVec_21;
  assign io_lsq_ldin_bits_uop_preDecodeInfo_isRVC = s3_in_uop_preDecodeInfo_isRVC;
  assign io_lsq_ldin_bits_uop_ftqPtr_flag = s3_in_uop_ftqPtr_flag;
  assign io_lsq_ldin_bits_uop_ftqPtr_value = s3_in_uop_ftqPtr_value;
  assign io_lsq_ldin_bits_uop_ftqOffset = s3_in_uop_ftqOffset;
  assign io_lsq_ldin_bits_uop_fuType = s3_in_uop_fuType;
  assign io_lsq_ldin_bits_uop_fuOpType = s3_in_uop_fuOpType;
  assign io_lsq_ldin_bits_uop_rfWen = s3_in_uop_rfWen;
  assign io_lsq_ldin_bits_uop_fpWen = s3_in_uop_fpWen;
  assign io_lsq_ldin_bits_uop_uopIdx = s3_in_uop_uopIdx;
  assign io_lsq_ldin_bits_uop_pdest = s3_in_uop_pdest;
  assign io_lsq_ldin_bits_uop_robIdx_flag = s3_in_uop_robIdx_flag;
  assign io_lsq_ldin_bits_uop_robIdx_value = s3_in_uop_robIdx_value;
  assign io_lsq_ldin_bits_uop_storeSetHit = s3_in_uop_storeSetHit;
  assign io_lsq_ldin_bits_uop_waitForRobIdx_flag = s3_in_uop_waitForRobIdx_flag;
  assign io_lsq_ldin_bits_uop_waitForRobIdx_value = s3_in_uop_waitForRobIdx_value;
  assign io_lsq_ldin_bits_uop_loadWaitBit = s3_in_uop_loadWaitBit;
  assign io_lsq_ldin_bits_uop_loadWaitStrict = s3_in_uop_loadWaitStrict;
  assign io_lsq_ldin_bits_uop_lqIdx_flag = s3_in_uop_lqIdx_flag;
  assign io_lsq_ldin_bits_uop_lqIdx_value = s3_in_uop_lqIdx_value;
  assign io_lsq_ldin_bits_uop_sqIdx_flag = s3_in_uop_sqIdx_flag;
  assign io_lsq_ldin_bits_uop_sqIdx_value = s3_in_uop_sqIdx_value;
  assign io_lsq_ldin_bits_uop_replayInst = s3_out_bits_uop_replayInst;
  assign io_lsq_ldin_bits_vaddr = s3_in_vaddr;
  assign io_lsq_ldin_bits_paddr = s3_in_paddr;
  assign io_lsq_ldin_bits_gpaddr = s3_in_gpaddr;
  assign io_lsq_ldin_bits_mask = s3_in_mask;
  assign io_lsq_ldin_bits_miss = s3_in_miss & ~s3_fwd_frm_d_chan_valid;
  assign io_lsq_ldin_bits_tlbMiss = s3_in_tlbMiss;
  assign io_lsq_ldin_bits_mmio = s3_in_mmio;
  assign io_lsq_ldin_bits_isvec = s3_in_isvec;
  assign io_lsq_ldin_bits_is128bit = s3_in_is128bit;
  assign io_lsq_ldin_bits_usSecondInv = s3_in_usSecondInv;
  assign io_lsq_ldin_bits_elemIdx = s3_in_elemIdx;
  assign io_lsq_ldin_bits_alignedType = s3_in_alignedType;
  assign io_lsq_ldin_bits_mbIndex = s3_in_mbIndex;
  assign io_lsq_ldin_bits_reg_offset = s3_in_reg_offset;
  assign io_lsq_ldin_bits_elemIdxInsideVd = s3_in_elemIdxInsideVd;
  assign io_lsq_ldin_bits_vecActive = s3_in_vecActive;
  assign io_lsq_ldin_bits_isLoadReplay = s3_in_isLoadReplay;
  assign io_lsq_ldin_bits_handledByMSHR = s3_in_handledByMSHR;
  assign io_lsq_ldin_bits_dcacheRequireReplay = s3_dcache_rep;
  assign io_lsq_ldin_bits_schedIndex = s3_in_schedIndex;
  assign io_lsq_ldin_bits_rep_info_mshr_id = s3_in_rep_info_mshr_id;
  assign io_lsq_ldin_bits_rep_info_full_fwd = s3_in_rep_info_full_fwd;
  assign io_lsq_ldin_bits_rep_info_data_inv_sq_idx_flag =
    s3_in_rep_info_data_inv_sq_idx_flag;
  assign io_lsq_ldin_bits_rep_info_data_inv_sq_idx_value =
    s3_in_rep_info_data_inv_sq_idx_value;
  assign io_lsq_ldin_bits_rep_info_addr_inv_sq_idx_flag =
    s3_in_rep_info_addr_inv_sq_idx_flag;
  assign io_lsq_ldin_bits_rep_info_addr_inv_sq_idx_value =
    s3_in_rep_info_addr_inv_sq_idx_value;
  assign io_lsq_ldin_bits_rep_info_last_beat = s3_in_rep_info_last_beat;
  assign io_lsq_ldin_bits_rep_info_cause_0 = io_lsq_ldin_bits_rep_info_cause_0_0;
  assign io_lsq_ldin_bits_rep_info_cause_1 = io_lsq_ldin_bits_rep_info_cause_1_0;
  assign io_lsq_ldin_bits_rep_info_cause_2 = io_lsq_ldin_bits_rep_info_cause_2_0;
  assign io_lsq_ldin_bits_rep_info_cause_3 = io_lsq_ldin_bits_rep_info_cause_3_0;
  assign io_lsq_ldin_bits_rep_info_cause_4 = io_lsq_ldin_bits_rep_info_cause_4_0;
  assign io_lsq_ldin_bits_rep_info_cause_5 = io_lsq_ldin_bits_rep_info_cause_5_0;
  assign io_lsq_ldin_bits_rep_info_cause_6 = io_lsq_ldin_bits_rep_info_cause_6_0;
  assign io_lsq_ldin_bits_rep_info_cause_7 = io_lsq_ldin_bits_rep_info_cause_7_0;
  assign io_lsq_ldin_bits_rep_info_cause_8 = io_lsq_ldin_bits_rep_info_cause_8_0;
  assign io_lsq_ldin_bits_rep_info_cause_9 = io_lsq_ldin_bits_rep_info_cause_9_0;
  assign io_lsq_ldin_bits_rep_info_tlb_id = s3_in_rep_info_tlb_id;
  assign io_lsq_ldin_bits_rep_info_tlb_full = s3_in_rep_info_tlb_full;
  assign io_lsq_ldin_bits_data_wen_dup_1 = s3_ld_valid_dup[1];
  assign io_lsq_ldin_bits_data_wen_dup_5 = s3_ld_valid_dup[5];
  assign io_lsq_uncache_ready = s0_mmio_fire;
  assign io_lsq_forward_vaddr = s1_in_r_vaddr;
  assign io_lsq_forward_paddr = s1_paddr_dup_lsu;
  assign io_lsq_forward_mask = s1_in_r_mask;
  assign io_lsq_forward_uop_waitForRobIdx_flag = s1_in_r_uop_waitForRobIdx_flag;
  assign io_lsq_forward_uop_waitForRobIdx_value = s1_in_r_uop_waitForRobIdx_value;
  assign io_lsq_forward_uop_loadWaitBit = s1_in_r_uop_loadWaitBit;
  assign io_lsq_forward_uop_loadWaitStrict = s1_in_r_uop_loadWaitStrict;
  assign io_lsq_forward_uop_sqIdx_flag = s1_in_r_uop_sqIdx_flag;
  assign io_lsq_forward_uop_sqIdx_value = s1_in_r_uop_sqIdx_value;
  assign io_lsq_forward_valid =
    s1_valid
    & ~(_io_lsq_forward_valid_T | s1_kill | s1_out_delayedLoadError | s1_in_r_isPrefetch);
  assign io_lsq_forward_sqIdx_flag = s1_in_r_uop_sqIdx_flag;
  assign io_lsq_forward_sqIdxMask = s1_sqIdx_mask;
  assign io_lsq_stld_nuke_query_req_valid = io_lsq_ldld_nuke_query_req_valid_0;
  assign io_lsq_stld_nuke_query_req_bits_uop_preDecodeInfo_isRVC =
    s2_in_r_uop_preDecodeInfo_isRVC;
  assign io_lsq_stld_nuke_query_req_bits_uop_ftqPtr_flag = s2_in_r_uop_ftqPtr_flag;
  assign io_lsq_stld_nuke_query_req_bits_uop_ftqPtr_value = s2_in_r_uop_ftqPtr_value;
  assign io_lsq_stld_nuke_query_req_bits_uop_ftqOffset = s2_in_r_uop_ftqOffset;
  assign io_lsq_stld_nuke_query_req_bits_uop_uopIdx = s2_in_r_uop_uopIdx;
  assign io_lsq_stld_nuke_query_req_bits_uop_robIdx_flag = s2_in_r_uop_robIdx_flag;
  assign io_lsq_stld_nuke_query_req_bits_uop_robIdx_value = s2_in_r_uop_robIdx_value;
  assign io_lsq_stld_nuke_query_req_bits_uop_sqIdx_flag = s2_in_r_uop_sqIdx_flag;
  assign io_lsq_stld_nuke_query_req_bits_uop_sqIdx_value = s2_in_r_uop_sqIdx_value;
  assign io_lsq_stld_nuke_query_req_bits_mask = s2_in_r_mask;
  assign io_lsq_stld_nuke_query_req_bits_paddr = s2_in_r_paddr;
  assign io_lsq_stld_nuke_query_req_bits_data_valid =
    _io_lsq_stld_nuke_query_req_bits_data_valid_T | ~s2_dcache_miss;
  assign io_lsq_stld_nuke_query_revoke = s3_revoke;
  assign io_lsq_ldld_nuke_query_req_valid = io_lsq_ldld_nuke_query_req_valid_0;
  assign io_lsq_ldld_nuke_query_req_bits_uop_uopIdx = s2_in_r_uop_uopIdx;
  assign io_lsq_ldld_nuke_query_req_bits_uop_robIdx_flag = s2_in_r_uop_robIdx_flag;
  assign io_lsq_ldld_nuke_query_req_bits_uop_robIdx_value = s2_in_r_uop_robIdx_value;
  assign io_lsq_ldld_nuke_query_req_bits_uop_lqIdx_flag = s2_in_r_uop_lqIdx_flag;
  assign io_lsq_ldld_nuke_query_req_bits_uop_lqIdx_value = s2_in_r_uop_lqIdx_value;
  assign io_lsq_ldld_nuke_query_req_bits_paddr = s2_in_r_paddr;
  assign io_lsq_ldld_nuke_query_req_bits_data_valid =
    _io_lsq_stld_nuke_query_req_bits_data_valid_T | ~s2_dcache_miss;
  assign io_lsq_ldld_nuke_query_revoke = s3_revoke;
  assign io_lsq_trigger_hitLoadAddrTriggerHitVec_0 = hit_ld_addr_trig_hit_vec_0;
  assign io_lsq_trigger_hitLoadAddrTriggerHitVec_1 = hit_ld_addr_trig_hit_vec_1;
  assign io_lsq_trigger_hitLoadAddrTriggerHitVec_2 = hit_ld_addr_trig_hit_vec_2;
  assign io_lsq_trigger_hitLoadAddrTriggerHitVec_3 = hit_ld_addr_trig_hit_vec_3;
  assign io_forward_mshr_valid = io_forward_mshr_valid_0;
  assign io_forward_mshr_mshrid = s1_in_r_mshrid;
  assign io_forward_mshr_paddr = s1_paddr_dup_lsu;
  assign io_trigger_0_addrHit =
    s3_out_valid ? hit_ld_addr_trig_hit_vec_0 : io_lsq_trigger_lqLoadAddrTriggerHitVec_0;
  assign io_trigger_1_addrHit =
    s3_out_valid ? hit_ld_addr_trig_hit_vec_1 : io_lsq_trigger_lqLoadAddrTriggerHitVec_1;
  assign io_trigger_2_addrHit =
    s3_out_valid ? hit_ld_addr_trig_hit_vec_2 : io_lsq_trigger_lqLoadAddrTriggerHitVec_2;
  assign io_trigger_3_addrHit =
    s3_out_valid ? hit_ld_addr_trig_hit_vec_3 : io_lsq_trigger_lqLoadAddrTriggerHitVec_3;
  assign io_prefetch_train_valid = io_prefetch_train_valid_last_REG;
  assign io_prefetch_train_bits_uop_robIdx_flag =
    io_prefetch_train_bits_uop_r_robIdx_flag;
  assign io_prefetch_train_bits_uop_robIdx_value =
    io_prefetch_train_bits_uop_r_robIdx_value;
  assign io_prefetch_train_bits_vaddr = io_prefetch_train_bits_vaddr_r;
  assign io_prefetch_train_bits_paddr = io_prefetch_train_bits_paddr_r;
  assign io_prefetch_train_bits_miss = io_prefetch_train_bits_miss_r_1;
  assign io_prefetch_train_bits_isFirstIssue = io_prefetch_train_bits_isFirstIssue_r;
  assign io_prefetch_train_l1_valid = io_prefetch_train_l1_valid_last_REG;
  assign io_prefetch_train_l1_bits_uop_robIdx_flag =
    io_prefetch_train_l1_bits_uop_r_robIdx_flag;
  assign io_prefetch_train_l1_bits_uop_robIdx_value =
    io_prefetch_train_l1_bits_uop_r_robIdx_value;
  assign io_prefetch_train_l1_bits_vaddr = io_prefetch_train_l1_bits_vaddr_r;
  assign io_prefetch_train_l1_bits_miss = io_prefetch_train_l1_bits_miss_r_1;
  assign io_prefetch_train_l1_bits_isFirstIssue =
    io_prefetch_train_l1_bits_isFirstIssue_r;
  assign io_prefetch_train_l1_bits_meta_prefetch =
    io_prefetch_train_l1_bits_meta_prefetch_r;
  assign io_s1_prefetch_spec = s1_fire;
  assign io_s2_prefetch_spec = s2_prefetch_train_valid;
  assign io_canAcceptLowConfPrefetch = s0_low_conf_prf_ready & io_dcache_req_ready;
  assign io_canAcceptHighConfPrefetch = s0_high_conf_prf_ready & io_dcache_req_ready;
  assign io_wakeup_valid =
    ~s0_sel_src_isvec & s0_fire
    & (_io_wakeup_valid_T_2 | s0_ld_rep_valid | io_ldin_valid & ~io_vecldin_valid
       & ~s0_high_conf_prf_valid) | s0_mmio_fire;
  assign io_wakeup_bits_rfWen =
    _io_wakeup_valid_T_2
      ? (s0_super_ld_rep_valid ? io_replay_bits_uop_rfWen : io_fast_rep_in_bits_uop_rfWen)
      : s0_mmio_fire
          ? io_lsq_uncache_bits_uop_rfWen
          : s0_ld_rep_valid ? io_replay_bits_uop_rfWen : io_ldin_bits_uop_rfWen;
  assign io_wakeup_bits_fpWen =
    _io_wakeup_valid_T_2
      ? (s0_super_ld_rep_valid ? io_replay_bits_uop_fpWen : io_fast_rep_in_bits_uop_fpWen)
      : s0_mmio_fire
          ? io_lsq_uncache_bits_uop_fpWen
          : s0_ld_rep_valid ? io_replay_bits_uop_fpWen : io_ldin_bits_uop_fpWen;
  assign io_wakeup_bits_pdest =
    _io_wakeup_valid_T_2
      ? (s0_super_ld_rep_valid ? io_replay_bits_uop_pdest : io_fast_rep_in_bits_uop_pdest)
      : s0_mmio_fire
          ? io_lsq_uncache_bits_uop_pdest
          : s0_ld_rep_valid ? io_replay_bits_uop_pdest : io_ldin_bits_uop_pdest;
  assign io_ldCancel_ld2Cancel =
    s3_valid_last_REG
    & ((|{io_lsq_ldin_bits_rep_info_cause_9_0,
          io_lsq_ldin_bits_rep_info_cause_8_0,
          io_lsq_ldin_bits_rep_info_cause_7_0,
          io_lsq_ldin_bits_rep_info_cause_6_0,
          io_lsq_ldin_bits_rep_info_cause_5_0,
          io_lsq_ldin_bits_rep_info_cause_4_0,
          io_lsq_ldin_bits_rep_info_cause_3_0,
          io_lsq_ldin_bits_rep_info_cause_2_0,
          io_lsq_ldin_bits_rep_info_cause_1_0,
          io_lsq_ldin_bits_rep_info_cause_0_0}) | s3_in_mmio) & ~s3_isvec;
  assign io_replay_ready =
    _io_ldin_ready_T & (s0_ld_rep_ready & ~s0_rep_stall | s0_super_ld_rep_select);
  assign io_s2_ptr_chasing = io_s2_ptr_chasing_r;
  assign io_fast_rep_out_valid = s3_valid_last_REG & s3_fast_rep_last_REG;
  assign io_fast_rep_out_bits_uop_preDecodeInfo_isRVC = s3_in_uop_preDecodeInfo_isRVC;
  assign io_fast_rep_out_bits_uop_ftqPtr_flag = s3_in_uop_ftqPtr_flag;
  assign io_fast_rep_out_bits_uop_ftqPtr_value = s3_in_uop_ftqPtr_value;
  assign io_fast_rep_out_bits_uop_ftqOffset = s3_in_uop_ftqOffset;
  assign io_fast_rep_out_bits_uop_fuType = s3_in_uop_fuType;
  assign io_fast_rep_out_bits_uop_fuOpType = s3_in_uop_fuOpType;
  assign io_fast_rep_out_bits_uop_rfWen = s3_in_uop_rfWen;
  assign io_fast_rep_out_bits_uop_fpWen = s3_in_uop_fpWen;
  assign io_fast_rep_out_bits_uop_uopIdx = s3_in_uop_uopIdx;
  assign io_fast_rep_out_bits_uop_pdest = s3_in_uop_pdest;
  assign io_fast_rep_out_bits_uop_robIdx_flag = s3_in_uop_robIdx_flag;
  assign io_fast_rep_out_bits_uop_robIdx_value = s3_in_uop_robIdx_value;
  assign io_fast_rep_out_bits_uop_storeSetHit = s3_in_uop_storeSetHit;
  assign io_fast_rep_out_bits_uop_waitForRobIdx_flag = s3_in_uop_waitForRobIdx_flag;
  assign io_fast_rep_out_bits_uop_waitForRobIdx_value = s3_in_uop_waitForRobIdx_value;
  assign io_fast_rep_out_bits_uop_loadWaitBit = s3_in_uop_loadWaitBit;
  assign io_fast_rep_out_bits_uop_loadWaitStrict = s3_in_uop_loadWaitStrict;
  assign io_fast_rep_out_bits_uop_lqIdx_flag = s3_in_uop_lqIdx_flag;
  assign io_fast_rep_out_bits_uop_lqIdx_value = s3_in_uop_lqIdx_value;
  assign io_fast_rep_out_bits_uop_sqIdx_flag = s3_in_uop_sqIdx_flag;
  assign io_fast_rep_out_bits_uop_sqIdx_value = s3_in_uop_sqIdx_value;
  assign io_fast_rep_out_bits_vaddr = s3_in_vaddr;
  assign io_fast_rep_out_bits_mask = s3_in_mask;
  assign io_fast_rep_out_bits_isvec = s3_in_isvec;
  assign io_fast_rep_out_bits_is128bit = s3_in_is128bit;
  assign io_fast_rep_out_bits_usSecondInv = s3_in_usSecondInv;
  assign io_fast_rep_out_bits_elemIdx = s3_in_elemIdx;
  assign io_fast_rep_out_bits_alignedType = s3_in_alignedType;
  assign io_fast_rep_out_bits_mbIndex = s3_in_mbIndex;
  assign io_fast_rep_out_bits_reg_offset = s3_in_reg_offset;
  assign io_fast_rep_out_bits_elemIdxInsideVd = s3_in_elemIdxInsideVd;
  assign io_fast_rep_out_bits_vecActive = s3_in_vecActive;
  assign io_fast_rep_out_bits_isLoadReplay = s3_in_isLoadReplay;
  assign io_fast_rep_out_bits_delayedLoadError = s3_in_delayedLoadError;
  assign io_fast_rep_out_bits_lateKill = s3_vp_match_fail;
  assign io_fast_rep_out_bits_schedIndex = s3_in_schedIndex;
  assign io_fast_rep_out_bits_rep_info_mshr_id = s3_in_rep_info_mshr_id;
  assign io_rollback_valid =
    s3_valid_last_REG & s3_out_bits_uop_replayInst & ~s3_exception;
  assign io_rollback_bits_isRVC = s3_in_uop_preDecodeInfo_isRVC;
  assign io_rollback_bits_robIdx_flag = s3_in_uop_robIdx_flag;
  assign io_rollback_bits_robIdx_value = s3_in_uop_robIdx_value;
  assign io_rollback_bits_ftqIdx_flag = s3_in_uop_ftqPtr_flag;
  assign io_rollback_bits_ftqIdx_value = s3_in_uop_ftqPtr_value;
  assign io_rollback_bits_ftqOffset = s3_in_uop_ftqOffset;
  assign io_rollback_bits_level = s3_vp_match_fail;
  assign io_perf_0_value = {5'h0, io_perf_0_value_REG_1};
  assign io_perf_1_value = {5'h0, io_perf_1_value_REG_1};
  assign io_perf_2_value = {5'h0, io_perf_2_value_REG_1};
  assign io_perf_3_value = {5'h0, io_perf_3_value_REG_1};
  assign io_perf_4_value = {5'h0, io_perf_4_value_REG_1};
  assign io_perf_5_value = {5'h0, io_perf_5_value_REG_1};
  assign io_perf_6_value = {5'h0, io_perf_6_value_REG_1};
endmodule

