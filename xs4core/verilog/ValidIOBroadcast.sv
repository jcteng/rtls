// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ValidIOBroadcast(
  input         auto_in_valid,
  input  [5:0]  auto_in_bits_hartid,
  input  [29:0] auto_in_bits_rawData_0,
  input  [29:0] auto_in_bits_rawData_1,
  input  [29:0] auto_in_bits_rawData_2,
  input  [29:0] auto_in_bits_rawData_3,
  input  [29:0] auto_in_bits_rawData_4,
  input  [29:0] auto_in_bits_rawData_5,
  input  [29:0] auto_in_bits_rawData_6,
  input  [29:0] auto_in_bits_rawData_7,
  input  [29:0] auto_in_bits_rawData_8,
  input  [29:0] auto_in_bits_rawData_9,
  input  [29:0] auto_in_bits_rawData_10,
  input  [29:0] auto_in_bits_rawData_11,
  input  [29:0] auto_in_bits_rawData_12,
  input  [29:0] auto_in_bits_rawData_13,
  input  [29:0] auto_in_bits_rawData_14,
  input  [29:0] auto_in_bits_rawData_15,
  output        auto_out_3_valid,
  output [5:0]  auto_out_3_bits_hartid,
  output [29:0] auto_out_3_bits_rawData_0,
  output [29:0] auto_out_3_bits_rawData_1,
  output [29:0] auto_out_3_bits_rawData_2,
  output [29:0] auto_out_3_bits_rawData_3,
  output [29:0] auto_out_3_bits_rawData_4,
  output [29:0] auto_out_3_bits_rawData_5,
  output [29:0] auto_out_3_bits_rawData_6,
  output [29:0] auto_out_3_bits_rawData_7,
  output [29:0] auto_out_3_bits_rawData_8,
  output [29:0] auto_out_3_bits_rawData_9,
  output [29:0] auto_out_3_bits_rawData_10,
  output [29:0] auto_out_3_bits_rawData_11,
  output [29:0] auto_out_3_bits_rawData_12,
  output [29:0] auto_out_3_bits_rawData_13,
  output [29:0] auto_out_3_bits_rawData_14,
  output [29:0] auto_out_3_bits_rawData_15,
  output        auto_out_2_valid,
  output [5:0]  auto_out_2_bits_hartid,
  output [29:0] auto_out_2_bits_rawData_0,
  output [29:0] auto_out_2_bits_rawData_1,
  output [29:0] auto_out_2_bits_rawData_2,
  output [29:0] auto_out_2_bits_rawData_3,
  output [29:0] auto_out_2_bits_rawData_4,
  output [29:0] auto_out_2_bits_rawData_5,
  output [29:0] auto_out_2_bits_rawData_6,
  output [29:0] auto_out_2_bits_rawData_7,
  output [29:0] auto_out_2_bits_rawData_8,
  output [29:0] auto_out_2_bits_rawData_9,
  output [29:0] auto_out_2_bits_rawData_10,
  output [29:0] auto_out_2_bits_rawData_11,
  output [29:0] auto_out_2_bits_rawData_12,
  output [29:0] auto_out_2_bits_rawData_13,
  output [29:0] auto_out_2_bits_rawData_14,
  output [29:0] auto_out_2_bits_rawData_15,
  output        auto_out_1_valid,
  output [5:0]  auto_out_1_bits_hartid,
  output [29:0] auto_out_1_bits_rawData_0,
  output [29:0] auto_out_1_bits_rawData_1,
  output [29:0] auto_out_1_bits_rawData_2,
  output [29:0] auto_out_1_bits_rawData_3,
  output [29:0] auto_out_1_bits_rawData_4,
  output [29:0] auto_out_1_bits_rawData_5,
  output [29:0] auto_out_1_bits_rawData_6,
  output [29:0] auto_out_1_bits_rawData_7,
  output [29:0] auto_out_1_bits_rawData_8,
  output [29:0] auto_out_1_bits_rawData_9,
  output [29:0] auto_out_1_bits_rawData_10,
  output [29:0] auto_out_1_bits_rawData_11,
  output [29:0] auto_out_1_bits_rawData_12,
  output [29:0] auto_out_1_bits_rawData_13,
  output [29:0] auto_out_1_bits_rawData_14,
  output [29:0] auto_out_1_bits_rawData_15,
  output        auto_out_0_valid,
  output [5:0]  auto_out_0_bits_hartid,
  output [29:0] auto_out_0_bits_rawData_0,
  output [29:0] auto_out_0_bits_rawData_1,
  output [29:0] auto_out_0_bits_rawData_2,
  output [29:0] auto_out_0_bits_rawData_3,
  output [29:0] auto_out_0_bits_rawData_4,
  output [29:0] auto_out_0_bits_rawData_5,
  output [29:0] auto_out_0_bits_rawData_6,
  output [29:0] auto_out_0_bits_rawData_7,
  output [29:0] auto_out_0_bits_rawData_8,
  output [29:0] auto_out_0_bits_rawData_9,
  output [29:0] auto_out_0_bits_rawData_10,
  output [29:0] auto_out_0_bits_rawData_11,
  output [29:0] auto_out_0_bits_rawData_12,
  output [29:0] auto_out_0_bits_rawData_13,
  output [29:0] auto_out_0_bits_rawData_14,
  output [29:0] auto_out_0_bits_rawData_15
);

  assign auto_out_3_valid = auto_in_valid;
  assign auto_out_3_bits_hartid = auto_in_bits_hartid;
  assign auto_out_3_bits_rawData_0 = auto_in_bits_rawData_0;
  assign auto_out_3_bits_rawData_1 = auto_in_bits_rawData_1;
  assign auto_out_3_bits_rawData_2 = auto_in_bits_rawData_2;
  assign auto_out_3_bits_rawData_3 = auto_in_bits_rawData_3;
  assign auto_out_3_bits_rawData_4 = auto_in_bits_rawData_4;
  assign auto_out_3_bits_rawData_5 = auto_in_bits_rawData_5;
  assign auto_out_3_bits_rawData_6 = auto_in_bits_rawData_6;
  assign auto_out_3_bits_rawData_7 = auto_in_bits_rawData_7;
  assign auto_out_3_bits_rawData_8 = auto_in_bits_rawData_8;
  assign auto_out_3_bits_rawData_9 = auto_in_bits_rawData_9;
  assign auto_out_3_bits_rawData_10 = auto_in_bits_rawData_10;
  assign auto_out_3_bits_rawData_11 = auto_in_bits_rawData_11;
  assign auto_out_3_bits_rawData_12 = auto_in_bits_rawData_12;
  assign auto_out_3_bits_rawData_13 = auto_in_bits_rawData_13;
  assign auto_out_3_bits_rawData_14 = auto_in_bits_rawData_14;
  assign auto_out_3_bits_rawData_15 = auto_in_bits_rawData_15;
  assign auto_out_2_valid = auto_in_valid;
  assign auto_out_2_bits_hartid = auto_in_bits_hartid;
  assign auto_out_2_bits_rawData_0 = auto_in_bits_rawData_0;
  assign auto_out_2_bits_rawData_1 = auto_in_bits_rawData_1;
  assign auto_out_2_bits_rawData_2 = auto_in_bits_rawData_2;
  assign auto_out_2_bits_rawData_3 = auto_in_bits_rawData_3;
  assign auto_out_2_bits_rawData_4 = auto_in_bits_rawData_4;
  assign auto_out_2_bits_rawData_5 = auto_in_bits_rawData_5;
  assign auto_out_2_bits_rawData_6 = auto_in_bits_rawData_6;
  assign auto_out_2_bits_rawData_7 = auto_in_bits_rawData_7;
  assign auto_out_2_bits_rawData_8 = auto_in_bits_rawData_8;
  assign auto_out_2_bits_rawData_9 = auto_in_bits_rawData_9;
  assign auto_out_2_bits_rawData_10 = auto_in_bits_rawData_10;
  assign auto_out_2_bits_rawData_11 = auto_in_bits_rawData_11;
  assign auto_out_2_bits_rawData_12 = auto_in_bits_rawData_12;
  assign auto_out_2_bits_rawData_13 = auto_in_bits_rawData_13;
  assign auto_out_2_bits_rawData_14 = auto_in_bits_rawData_14;
  assign auto_out_2_bits_rawData_15 = auto_in_bits_rawData_15;
  assign auto_out_1_valid = auto_in_valid;
  assign auto_out_1_bits_hartid = auto_in_bits_hartid;
  assign auto_out_1_bits_rawData_0 = auto_in_bits_rawData_0;
  assign auto_out_1_bits_rawData_1 = auto_in_bits_rawData_1;
  assign auto_out_1_bits_rawData_2 = auto_in_bits_rawData_2;
  assign auto_out_1_bits_rawData_3 = auto_in_bits_rawData_3;
  assign auto_out_1_bits_rawData_4 = auto_in_bits_rawData_4;
  assign auto_out_1_bits_rawData_5 = auto_in_bits_rawData_5;
  assign auto_out_1_bits_rawData_6 = auto_in_bits_rawData_6;
  assign auto_out_1_bits_rawData_7 = auto_in_bits_rawData_7;
  assign auto_out_1_bits_rawData_8 = auto_in_bits_rawData_8;
  assign auto_out_1_bits_rawData_9 = auto_in_bits_rawData_9;
  assign auto_out_1_bits_rawData_10 = auto_in_bits_rawData_10;
  assign auto_out_1_bits_rawData_11 = auto_in_bits_rawData_11;
  assign auto_out_1_bits_rawData_12 = auto_in_bits_rawData_12;
  assign auto_out_1_bits_rawData_13 = auto_in_bits_rawData_13;
  assign auto_out_1_bits_rawData_14 = auto_in_bits_rawData_14;
  assign auto_out_1_bits_rawData_15 = auto_in_bits_rawData_15;
  assign auto_out_0_valid = auto_in_valid;
  assign auto_out_0_bits_hartid = auto_in_bits_hartid;
  assign auto_out_0_bits_rawData_0 = auto_in_bits_rawData_0;
  assign auto_out_0_bits_rawData_1 = auto_in_bits_rawData_1;
  assign auto_out_0_bits_rawData_2 = auto_in_bits_rawData_2;
  assign auto_out_0_bits_rawData_3 = auto_in_bits_rawData_3;
  assign auto_out_0_bits_rawData_4 = auto_in_bits_rawData_4;
  assign auto_out_0_bits_rawData_5 = auto_in_bits_rawData_5;
  assign auto_out_0_bits_rawData_6 = auto_in_bits_rawData_6;
  assign auto_out_0_bits_rawData_7 = auto_in_bits_rawData_7;
  assign auto_out_0_bits_rawData_8 = auto_in_bits_rawData_8;
  assign auto_out_0_bits_rawData_9 = auto_in_bits_rawData_9;
  assign auto_out_0_bits_rawData_10 = auto_in_bits_rawData_10;
  assign auto_out_0_bits_rawData_11 = auto_in_bits_rawData_11;
  assign auto_out_0_bits_rawData_12 = auto_in_bits_rawData_12;
  assign auto_out_0_bits_rawData_13 = auto_in_bits_rawData_13;
  assign auto_out_0_bits_rawData_14 = auto_in_bits_rawData_14;
  assign auto_out_0_bits_rawData_15 = auto_in_bits_rawData_15;
endmodule

