// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module StoreTrigger(
  input  [1:0]  io_fromCsrTrigger_tdataVec_0_matchType,
  input         io_fromCsrTrigger_tdataVec_0_select,
  input         io_fromCsrTrigger_tdataVec_0_timing,
  input         io_fromCsrTrigger_tdataVec_0_action,
  input         io_fromCsrTrigger_tdataVec_0_chain,
  input         io_fromCsrTrigger_tdataVec_0_store,
  input  [63:0] io_fromCsrTrigger_tdataVec_0_tdata2,
  input  [1:0]  io_fromCsrTrigger_tdataVec_1_matchType,
  input         io_fromCsrTrigger_tdataVec_1_select,
  input         io_fromCsrTrigger_tdataVec_1_timing,
  input         io_fromCsrTrigger_tdataVec_1_action,
  input         io_fromCsrTrigger_tdataVec_1_chain,
  input         io_fromCsrTrigger_tdataVec_1_store,
  input  [63:0] io_fromCsrTrigger_tdataVec_1_tdata2,
  input  [1:0]  io_fromCsrTrigger_tdataVec_2_matchType,
  input         io_fromCsrTrigger_tdataVec_2_select,
  input         io_fromCsrTrigger_tdataVec_2_timing,
  input         io_fromCsrTrigger_tdataVec_2_action,
  input         io_fromCsrTrigger_tdataVec_2_chain,
  input         io_fromCsrTrigger_tdataVec_2_store,
  input  [63:0] io_fromCsrTrigger_tdataVec_2_tdata2,
  input  [1:0]  io_fromCsrTrigger_tdataVec_3_matchType,
  input         io_fromCsrTrigger_tdataVec_3_select,
  input         io_fromCsrTrigger_tdataVec_3_timing,
  input         io_fromCsrTrigger_tdataVec_3_action,
  input         io_fromCsrTrigger_tdataVec_3_chain,
  input         io_fromCsrTrigger_tdataVec_3_store,
  input  [63:0] io_fromCsrTrigger_tdataVec_3_tdata2,
  input         io_fromCsrTrigger_tEnableVec_0,
  input         io_fromCsrTrigger_tEnableVec_1,
  input         io_fromCsrTrigger_tEnableVec_2,
  input         io_fromCsrTrigger_tEnableVec_3,
  input         io_fromCsrTrigger_triggerCanRaiseBpExp,
  input  [40:0] io_fromStore_vaddr,
  output        io_toStore_triggerHitVec_0,
  output        io_toStore_triggerHitVec_1,
  output        io_toStore_triggerHitVec_2,
  output        io_toStore_triggerHitVec_3,
  output        io_toStore_triggerCanFireVec_0,
  output        io_toStore_triggerCanFireVec_1,
  output        io_toStore_triggerCanFireVec_2,
  output        io_toStore_triggerCanFireVec_3,
  output        io_toStore_breakPointExp
);

  wire       triggerHitVec_0 =
    ~io_fromCsrTrigger_tdataVec_0_select
    & ((&io_fromCsrTrigger_tdataVec_0_matchType)
         ? io_fromStore_vaddr < io_fromCsrTrigger_tdataVec_0_tdata2[40:0]
         : io_fromCsrTrigger_tdataVec_0_matchType == 2'h2
             ? io_fromStore_vaddr >= io_fromCsrTrigger_tdataVec_0_tdata2[40:0]
             : io_fromCsrTrigger_tdataVec_0_matchType == 2'h0
               & io_fromStore_vaddr == io_fromCsrTrigger_tdataVec_0_tdata2[40:0])
    & io_fromCsrTrigger_tEnableVec_0 & io_fromCsrTrigger_tdataVec_0_store;
  wire       triggerHitVec_1 =
    ~io_fromCsrTrigger_tdataVec_1_select
    & ((&io_fromCsrTrigger_tdataVec_1_matchType)
         ? io_fromStore_vaddr < io_fromCsrTrigger_tdataVec_1_tdata2[40:0]
         : io_fromCsrTrigger_tdataVec_1_matchType == 2'h2
             ? io_fromStore_vaddr >= io_fromCsrTrigger_tdataVec_1_tdata2[40:0]
             : io_fromCsrTrigger_tdataVec_1_matchType == 2'h0
               & io_fromStore_vaddr == io_fromCsrTrigger_tdataVec_1_tdata2[40:0])
    & io_fromCsrTrigger_tEnableVec_1 & io_fromCsrTrigger_tdataVec_1_store;
  wire       triggerHitVec_2 =
    ~io_fromCsrTrigger_tdataVec_2_select
    & ((&io_fromCsrTrigger_tdataVec_2_matchType)
         ? io_fromStore_vaddr < io_fromCsrTrigger_tdataVec_2_tdata2[40:0]
         : io_fromCsrTrigger_tdataVec_2_matchType == 2'h2
             ? io_fromStore_vaddr >= io_fromCsrTrigger_tdataVec_2_tdata2[40:0]
             : io_fromCsrTrigger_tdataVec_2_matchType == 2'h0
               & io_fromStore_vaddr == io_fromCsrTrigger_tdataVec_2_tdata2[40:0])
    & io_fromCsrTrigger_tEnableVec_2 & io_fromCsrTrigger_tdataVec_2_store;
  wire       triggerHitVec_3 =
    ~io_fromCsrTrigger_tdataVec_3_select
    & ((&io_fromCsrTrigger_tdataVec_3_matchType)
         ? io_fromStore_vaddr < io_fromCsrTrigger_tdataVec_3_tdata2[40:0]
         : io_fromCsrTrigger_tdataVec_3_matchType == 2'h2
             ? io_fromStore_vaddr >= io_fromCsrTrigger_tdataVec_3_tdata2[40:0]
             : io_fromCsrTrigger_tdataVec_3_matchType == 2'h0
               & io_fromStore_vaddr == io_fromCsrTrigger_tdataVec_3_tdata2[40:0])
    & io_fromCsrTrigger_tEnableVec_3 & io_fromCsrTrigger_tdataVec_3_store;
  wire       triggerCanFireVec_0 = triggerHitVec_0 & ~io_fromCsrTrigger_tdataVec_0_chain;
  wire       triggerCanFireVec_1 =
    (io_fromCsrTrigger_tdataVec_0_chain & triggerHitVec_0
     | ~io_fromCsrTrigger_tdataVec_0_chain)
    & (io_fromCsrTrigger_tdataVec_0_chain & ~io_fromCsrTrigger_tdataVec_1_chain
       & io_fromCsrTrigger_tdataVec_0_timing == io_fromCsrTrigger_tdataVec_1_timing
       | ~io_fromCsrTrigger_tdataVec_0_chain) & triggerHitVec_1
    & ~io_fromCsrTrigger_tdataVec_1_chain;
  wire       triggerCanFireVec_2 =
    (io_fromCsrTrigger_tdataVec_1_chain & triggerHitVec_1
     | ~io_fromCsrTrigger_tdataVec_1_chain)
    & (io_fromCsrTrigger_tdataVec_1_chain & ~io_fromCsrTrigger_tdataVec_2_chain
       & io_fromCsrTrigger_tdataVec_1_timing == io_fromCsrTrigger_tdataVec_2_timing
       | ~io_fromCsrTrigger_tdataVec_1_chain) & triggerHitVec_2
    & ~io_fromCsrTrigger_tdataVec_2_chain;
  wire       triggerCanFireVec_3 =
    (io_fromCsrTrigger_tdataVec_2_chain & triggerHitVec_2
     | ~io_fromCsrTrigger_tdataVec_2_chain)
    & (io_fromCsrTrigger_tdataVec_2_chain & ~io_fromCsrTrigger_tdataVec_3_chain
       & io_fromCsrTrigger_tdataVec_2_timing == io_fromCsrTrigger_tdataVec_3_timing
       | ~io_fromCsrTrigger_tdataVec_2_chain) & triggerHitVec_3
    & ~io_fromCsrTrigger_tdataVec_3_chain;
  wire [2:0] triggerFireOH_enc =
    triggerCanFireVec_0 ? 3'h1 : triggerCanFireVec_1 ? 3'h2 : {triggerCanFireVec_2, 2'h0};
  wire       triggerFireAction =
    triggerFireOH_enc[0]
      ? io_fromCsrTrigger_tdataVec_0_action
      : triggerFireOH_enc[1]
          ? io_fromCsrTrigger_tdataVec_1_action
          : triggerFireOH_enc[2]
              ? io_fromCsrTrigger_tdataVec_2_action
              : io_fromCsrTrigger_tdataVec_3_action;
  assign io_toStore_triggerHitVec_0 = triggerHitVec_0;
  assign io_toStore_triggerHitVec_1 = triggerHitVec_1;
  assign io_toStore_triggerHitVec_2 = triggerHitVec_2;
  assign io_toStore_triggerHitVec_3 = triggerHitVec_3;
  assign io_toStore_triggerCanFireVec_0 = triggerCanFireVec_0;
  assign io_toStore_triggerCanFireVec_1 = triggerCanFireVec_1;
  assign io_toStore_triggerCanFireVec_2 = triggerCanFireVec_2;
  assign io_toStore_triggerCanFireVec_3 = triggerCanFireVec_3;
  assign io_toStore_breakPointExp =
    (~triggerFireAction & io_fromCsrTrigger_triggerCanRaiseBpExp | triggerFireAction)
    & (|{triggerCanFireVec_3,
         triggerCanFireVec_2,
         triggerCanFireVec_1,
         triggerCanFireVec_0});
endmodule

