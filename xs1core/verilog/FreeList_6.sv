// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module FreeList_6(
  input         clock,
  input         reset,
  output [4:0]  io_allocateSlot_0,
  output [4:0]  io_allocateSlot_1,
  output [4:0]  io_allocateSlot_2,
  output        io_canAllocate_0,
  output        io_canAllocate_1,
  output        io_canAllocate_2,
  input         io_doAllocate_0,
  input         io_doAllocate_1,
  input         io_doAllocate_2,
  input  [19:0] io_free
);

  reg  [4:0]       freeList_0;
  reg  [4:0]       freeList_1;
  reg  [4:0]       freeList_2;
  reg  [4:0]       freeList_3;
  reg  [4:0]       freeList_4;
  reg  [4:0]       freeList_5;
  reg  [4:0]       freeList_6;
  reg  [4:0]       freeList_7;
  reg  [4:0]       freeList_8;
  reg  [4:0]       freeList_9;
  reg  [4:0]       freeList_10;
  reg  [4:0]       freeList_11;
  reg  [4:0]       freeList_12;
  reg  [4:0]       freeList_13;
  reg  [4:0]       freeList_14;
  reg  [4:0]       freeList_15;
  reg  [4:0]       freeList_16;
  reg  [4:0]       freeList_17;
  reg  [4:0]       freeList_18;
  reg  [4:0]       freeList_19;
  reg              headPtr_flag;
  reg  [4:0]       headPtr_value;
  reg              tailPtr_flag;
  reg  [4:0]       tailPtr_value;
  reg  [19:0]      freeMask;
  reg              freeReq_next_nextVec_0_r;
  reg              freeReq_next_nextVec_1_r;
  reg              freeReq_next_nextVec_2_r;
  reg              freeReq_next_nextVec_3_r;
  reg  [19:0]      freeSlotOH_next_nextVec_0_r;
  reg  [19:0]      freeSlotOH_next_nextVec_1_r;
  reg  [19:0]      freeSlotOH_next_nextVec_2_r;
  reg  [19:0]      freeSlotOH_next_nextVec_3_r;
  wire [5:0]       deqPtr_new_value =
    6'({1'h0, headPtr_value}
       + {4'h0,
          2'({1'h0, io_doAllocate_0}
             + 2'({1'h0, io_doAllocate_1} + {1'h0, io_doAllocate_2}))});
  wire [6:0]       _GEN = {1'h0, deqPtr_new_value};
  reg              io_canAllocate_0_r;
  reg  [4:0]       io_allocateSlot_0_r;
  reg              io_canAllocate_1_r;
  reg  [4:0]       io_allocateSlot_1_r;
  reg              io_canAllocate_2_r;
  reg  [4:0]       io_allocateSlot_2_r;
  wire [19:0]      _remFreeSelMaskVec_T_24 =
    ~((freeReq_next_nextVec_0_r ? freeSlotOH_next_nextVec_0_r : 20'h0)
      | (freeReq_next_nextVec_1_r ? freeSlotOH_next_nextVec_1_r : 20'h0)
      | (freeReq_next_nextVec_2_r ? freeSlotOH_next_nextVec_2_r : 20'h0)
      | (freeReq_next_nextVec_3_r ? freeSlotOH_next_nextVec_3_r : 20'h0));
  wire             _remFreeSelMaskVec_T_2 = freeMask[0] & _remFreeSelMaskVec_T_24[0];
  wire             _remFreeSelMaskVec_T_3 = freeMask[4] & _remFreeSelMaskVec_T_24[4];
  wire             _remFreeSelMaskVec_T_4 = freeMask[8] & _remFreeSelMaskVec_T_24[8];
  wire             _remFreeSelMaskVec_T_5 = freeMask[12] & _remFreeSelMaskVec_T_24[12];
  wire             _remFreeSelMaskVec_T_6 = freeMask[16] & _remFreeSelMaskVec_T_24[16];
  wire [4:0]       remFreeSelMaskVec_0 =
    {_remFreeSelMaskVec_T_6,
     _remFreeSelMaskVec_T_5,
     _remFreeSelMaskVec_T_4,
     _remFreeSelMaskVec_T_3,
     _remFreeSelMaskVec_T_2};
  wire             _remFreeSelMaskVec_T_10 = freeMask[1] & _remFreeSelMaskVec_T_24[1];
  wire             _remFreeSelMaskVec_T_11 = freeMask[5] & _remFreeSelMaskVec_T_24[5];
  wire             _remFreeSelMaskVec_T_12 = freeMask[9] & _remFreeSelMaskVec_T_24[9];
  wire             _remFreeSelMaskVec_T_13 = freeMask[13] & _remFreeSelMaskVec_T_24[13];
  wire             _remFreeSelMaskVec_T_14 = freeMask[17] & _remFreeSelMaskVec_T_24[17];
  wire [4:0]       remFreeSelMaskVec_1 =
    {_remFreeSelMaskVec_T_14,
     _remFreeSelMaskVec_T_13,
     _remFreeSelMaskVec_T_12,
     _remFreeSelMaskVec_T_11,
     _remFreeSelMaskVec_T_10};
  wire             _remFreeSelMaskVec_T_18 = freeMask[2] & _remFreeSelMaskVec_T_24[2];
  wire             _remFreeSelMaskVec_T_19 = freeMask[6] & _remFreeSelMaskVec_T_24[6];
  wire             _remFreeSelMaskVec_T_20 = freeMask[10] & _remFreeSelMaskVec_T_24[10];
  wire             _remFreeSelMaskVec_T_21 = freeMask[14] & _remFreeSelMaskVec_T_24[14];
  wire             _remFreeSelMaskVec_T_22 = freeMask[18] & _remFreeSelMaskVec_T_24[18];
  wire [4:0]       remFreeSelMaskVec_2 =
    {_remFreeSelMaskVec_T_22,
     _remFreeSelMaskVec_T_21,
     _remFreeSelMaskVec_T_20,
     _remFreeSelMaskVec_T_19,
     _remFreeSelMaskVec_T_18};
  wire             _remFreeSelMaskVec_T_26 = freeMask[3] & _remFreeSelMaskVec_T_24[3];
  wire             _remFreeSelMaskVec_T_27 = freeMask[7] & _remFreeSelMaskVec_T_24[7];
  wire             _remFreeSelMaskVec_T_28 = freeMask[11] & _remFreeSelMaskVec_T_24[11];
  wire             _remFreeSelMaskVec_T_29 = freeMask[15] & _remFreeSelMaskVec_T_24[15];
  wire             _remFreeSelMaskVec_T_30 = freeMask[19] & _remFreeSelMaskVec_T_24[19];
  wire [4:0]       remFreeSelMaskVec_3 =
    {_remFreeSelMaskVec_T_30,
     _remFreeSelMaskVec_T_29,
     _remFreeSelMaskVec_T_28,
     _remFreeSelMaskVec_T_27,
     _remFreeSelMaskVec_T_26};
  wire [4:0]       remFreeSelIndexOHVec_highIndexOH =
    _remFreeSelMaskVec_T_2
      ? 5'h1
      : _remFreeSelMaskVec_T_3
          ? 5'h2
          : _remFreeSelMaskVec_T_4
              ? 5'h4
              : _remFreeSelMaskVec_T_5 ? 5'h8 : {_remFreeSelMaskVec_T_6, 4'h0};
  wire [19:0]      remFreeSelIndexOHVec_0 =
    {3'h0,
     remFreeSelIndexOHVec_highIndexOH[4],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH[3],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH[2],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH[1],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH[0]};
  wire [4:0]       remFreeSelIndexOHVec_highIndexOH_1 =
    _remFreeSelMaskVec_T_10
      ? 5'h1
      : _remFreeSelMaskVec_T_11
          ? 5'h2
          : _remFreeSelMaskVec_T_12
              ? 5'h4
              : _remFreeSelMaskVec_T_13 ? 5'h8 : {_remFreeSelMaskVec_T_14, 4'h0};
  wire [19:0]      remFreeSelIndexOHVec_1 =
    {2'h0,
     remFreeSelIndexOHVec_highIndexOH_1[4],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_1[3],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_1[2],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_1[1],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_1[0],
     1'h0};
  wire [4:0]       remFreeSelIndexOHVec_highIndexOH_2 =
    _remFreeSelMaskVec_T_18
      ? 5'h1
      : _remFreeSelMaskVec_T_19
          ? 5'h2
          : _remFreeSelMaskVec_T_20
              ? 5'h4
              : _remFreeSelMaskVec_T_21 ? 5'h8 : {_remFreeSelMaskVec_T_22, 4'h0};
  wire [19:0]      remFreeSelIndexOHVec_2 =
    {1'h0,
     remFreeSelIndexOHVec_highIndexOH_2[4],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_2[3],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_2[2],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_2[1],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_2[0],
     2'h0};
  wire [4:0]       remFreeSelIndexOHVec_highIndexOH_3 =
    _remFreeSelMaskVec_T_26
      ? 5'h1
      : _remFreeSelMaskVec_T_27
          ? 5'h2
          : _remFreeSelMaskVec_T_28
              ? 5'h4
              : _remFreeSelMaskVec_T_29 ? 5'h8 : {_remFreeSelMaskVec_T_30, 4'h0};
  wire [19:0]      remFreeSelIndexOHVec_3 =
    {remFreeSelIndexOHVec_highIndexOH_3[4],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_3[3],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_3[2],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_3[1],
     3'h0,
     remFreeSelIndexOHVec_highIndexOH_3[0],
     3'h0};
  wire [3:0]       _doFree_T =
    {freeReq_next_nextVec_3_r,
     freeReq_next_nextVec_2_r,
     freeReq_next_nextVec_1_r,
     freeReq_next_nextVec_0_r};
  wire [5:0]       _GEN_0 = {1'h0, tailPtr_value};
  wire [6:0]       _enqPtr_diff_T_4 = 7'({2'h0, tailPtr_value} - 7'h14);
  wire [4:0]       _enqPtr_new_ptr_value_T_1 =
    $signed(_enqPtr_diff_T_4) > -7'sh1 ? _enqPtr_diff_T_4[4:0] : tailPtr_value;
  wire [14:0]      _freeList_T_1 =
    {12'h0, freeSlotOH_next_nextVec_0_r[19:17]} | freeSlotOH_next_nextVec_0_r[15:1];
  wire [6:0]       _freeList_T_3 = _freeList_T_1[14:8] | _freeList_T_1[6:0];
  wire [2:0]       _freeList_T_5 = _freeList_T_3[6:4] | _freeList_T_3[2:0];
  wire [4:0]       _freeList_T_12 =
    {|(freeSlotOH_next_nextVec_0_r[19:16]),
     |(_freeList_T_1[14:7]),
     |(_freeList_T_3[6:3]),
     |(_freeList_T_5[2:1]),
     _freeList_T_5[2] | _freeList_T_5[0]};
  wire [5:0]       enqPtr_new_value_1 = 6'(_GEN_0 + {5'h0, freeReq_next_nextVec_0_r});
  wire [6:0]       _enqPtr_diff_T_10 = 7'({1'h0, enqPtr_new_value_1} - 7'h14);
  wire [4:0]       _enqPtr_new_ptr_value_T_3 =
    $signed(_enqPtr_diff_T_10) > -7'sh1
      ? _enqPtr_diff_T_10[4:0]
      : enqPtr_new_value_1[4:0];
  wire [14:0]      _freeList_T_14 =
    {12'h0, freeSlotOH_next_nextVec_1_r[19:17]} | freeSlotOH_next_nextVec_1_r[15:1];
  wire [6:0]       _freeList_T_16 = _freeList_T_14[14:8] | _freeList_T_14[6:0];
  wire [2:0]       _freeList_T_18 = _freeList_T_16[6:4] | _freeList_T_16[2:0];
  wire [4:0]       _freeList_T_25 =
    {|(freeSlotOH_next_nextVec_1_r[19:16]),
     |(_freeList_T_14[14:7]),
     |(_freeList_T_16[6:3]),
     |(_freeList_T_18[2:1]),
     _freeList_T_18[2] | _freeList_T_18[0]};
  wire [1:0]       _GEN_1 = {1'h0, freeReq_next_nextVec_0_r};
  wire [1:0]       _GEN_2 = {1'h0, freeReq_next_nextVec_1_r};
  wire [1:0]       offset = 2'(_GEN_1 + _GEN_2);
  wire [5:0]       enqPtr_new_value_2 = 6'(_GEN_0 + {4'h0, offset});
  wire [6:0]       _enqPtr_diff_T_16 = 7'({1'h0, enqPtr_new_value_2} - 7'h14);
  wire [4:0]       _enqPtr_new_ptr_value_T_5 =
    $signed(_enqPtr_diff_T_16) > -7'sh1
      ? _enqPtr_diff_T_16[4:0]
      : enqPtr_new_value_2[4:0];
  wire [14:0]      _freeList_T_27 =
    {12'h0, freeSlotOH_next_nextVec_2_r[19:17]} | freeSlotOH_next_nextVec_2_r[15:1];
  wire [6:0]       _freeList_T_29 = _freeList_T_27[14:8] | _freeList_T_27[6:0];
  wire [2:0]       _freeList_T_31 = _freeList_T_29[6:4] | _freeList_T_29[2:0];
  wire [4:0]       _freeList_T_38 =
    {|(freeSlotOH_next_nextVec_2_r[19:16]),
     |(_freeList_T_27[14:7]),
     |(_freeList_T_29[6:3]),
     |(_freeList_T_31[2:1]),
     _freeList_T_31[2] | _freeList_T_31[0]};
  wire [1:0]       _GEN_3 = {1'h0, freeReq_next_nextVec_2_r};
  wire [5:0]       enqPtr_new_value_3 =
    6'(_GEN_0 + {4'h0, 2'(_GEN_1 + 2'(_GEN_2 + _GEN_3))});
  wire [6:0]       _enqPtr_diff_T_22 = 7'({1'h0, enqPtr_new_value_3} - 7'h14);
  wire [4:0]       _enqPtr_new_ptr_value_T_7 =
    $signed(_enqPtr_diff_T_22) > -7'sh1
      ? _enqPtr_diff_T_22[4:0]
      : enqPtr_new_value_3[4:0];
  wire [14:0]      _freeList_T_40 =
    {12'h0, freeSlotOH_next_nextVec_3_r[19:17]} | freeSlotOH_next_nextVec_3_r[15:1];
  wire [6:0]       _freeList_T_42 = _freeList_T_40[14:8] | _freeList_T_40[6:0];
  wire [2:0]       _freeList_T_44 = _freeList_T_42[6:4] | _freeList_T_42[2:0];
  wire [4:0]       _freeList_T_51 =
    {|(freeSlotOH_next_nextVec_3_r[19:16]),
     |(_freeList_T_40[14:7]),
     |(_freeList_T_42[6:3]),
     |(_freeList_T_44[2:1]),
     _freeList_T_44[2] | _freeList_T_44[0]};
  wire [5:0]       tailPtrNext_new_value =
    6'(_GEN_0
       + {3'h0,
          3'({1'h0, offset} + {1'h0, 2'(_GEN_3 + {1'h0, freeReq_next_nextVec_3_r})})});
  wire [6:0]       _tailPtrNext_diff_T_4 = 7'({1'h0, tailPtrNext_new_value} - 7'h14);
  wire             tailPtrNext_reverse_flag = $signed(_tailPtrNext_diff_T_4) > -7'sh1;
  wire [2:0]       _doAllocate_T = {io_doAllocate_2, io_doAllocate_1, io_doAllocate_0};
  wire [6:0]       _headPtrNext_diff_T_4 = 7'(_GEN - 7'h14);
  wire             headPtrNext_reverse_flag = $signed(_headPtrNext_diff_T_4) > -7'sh1;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      freeList_0 <= 5'h0;
      freeList_1 <= 5'h1;
      freeList_2 <= 5'h2;
      freeList_3 <= 5'h3;
      freeList_4 <= 5'h4;
      freeList_5 <= 5'h5;
      freeList_6 <= 5'h6;
      freeList_7 <= 5'h7;
      freeList_8 <= 5'h8;
      freeList_9 <= 5'h9;
      freeList_10 <= 5'hA;
      freeList_11 <= 5'hB;
      freeList_12 <= 5'hC;
      freeList_13 <= 5'hD;
      freeList_14 <= 5'hE;
      freeList_15 <= 5'hF;
      freeList_16 <= 5'h10;
      freeList_17 <= 5'h11;
      freeList_18 <= 5'h12;
      freeList_19 <= 5'h13;
      headPtr_flag <= 1'h0;
      headPtr_value <= 5'h0;
      tailPtr_flag <= 1'h1;
      tailPtr_value <= 5'h0;
      freeMask <= 20'h0;
      freeReq_next_nextVec_0_r <= 1'h0;
      freeReq_next_nextVec_1_r <= 1'h0;
      freeReq_next_nextVec_2_r <= 1'h0;
      freeReq_next_nextVec_3_r <= 1'h0;
      freeSlotOH_next_nextVec_0_r <= 20'h0;
      freeSlotOH_next_nextVec_1_r <= 20'h0;
      freeSlotOH_next_nextVec_2_r <= 20'h0;
      freeSlotOH_next_nextVec_3_r <= 20'h0;
    end
    else begin
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h0)
        freeList_0 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h0)
        freeList_0 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h0)
        freeList_0 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h0)
        freeList_0 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h1)
        freeList_1 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h1)
        freeList_1 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h1)
        freeList_1 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h1)
        freeList_1 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h2)
        freeList_2 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h2)
        freeList_2 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h2)
        freeList_2 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h2)
        freeList_2 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h3)
        freeList_3 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h3)
        freeList_3 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h3)
        freeList_3 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h3)
        freeList_3 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h4)
        freeList_4 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h4)
        freeList_4 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h4)
        freeList_4 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h4)
        freeList_4 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h5)
        freeList_5 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h5)
        freeList_5 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h5)
        freeList_5 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h5)
        freeList_5 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h6)
        freeList_6 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h6)
        freeList_6 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h6)
        freeList_6 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h6)
        freeList_6 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h7)
        freeList_7 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h7)
        freeList_7 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h7)
        freeList_7 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h7)
        freeList_7 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h8)
        freeList_8 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h8)
        freeList_8 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h8)
        freeList_8 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h8)
        freeList_8 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h9)
        freeList_9 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h9)
        freeList_9 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h9)
        freeList_9 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h9)
        freeList_9 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'hA)
        freeList_10 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'hA)
        freeList_10 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'hA)
        freeList_10 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'hA)
        freeList_10 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'hB)
        freeList_11 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'hB)
        freeList_11 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'hB)
        freeList_11 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'hB)
        freeList_11 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'hC)
        freeList_12 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'hC)
        freeList_12 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'hC)
        freeList_12 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'hC)
        freeList_12 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'hD)
        freeList_13 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'hD)
        freeList_13 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'hD)
        freeList_13 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'hD)
        freeList_13 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'hE)
        freeList_14 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'hE)
        freeList_14 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'hE)
        freeList_14 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'hE)
        freeList_14 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'hF)
        freeList_15 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'hF)
        freeList_15 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'hF)
        freeList_15 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'hF)
        freeList_15 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h10)
        freeList_16 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h10)
        freeList_16 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h10)
        freeList_16 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h10)
        freeList_16 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h11)
        freeList_17 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h11)
        freeList_17 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h11)
        freeList_17 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h11)
        freeList_17 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h12)
        freeList_18 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h12)
        freeList_18 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h12)
        freeList_18 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h12)
        freeList_18 <= _freeList_T_12;
      if (freeReq_next_nextVec_3_r & _enqPtr_new_ptr_value_T_7 == 5'h13)
        freeList_19 <= _freeList_T_51;
      else if (freeReq_next_nextVec_2_r & _enqPtr_new_ptr_value_T_5 == 5'h13)
        freeList_19 <= _freeList_T_38;
      else if (freeReq_next_nextVec_1_r & _enqPtr_new_ptr_value_T_3 == 5'h13)
        freeList_19 <= _freeList_T_25;
      else if (freeReq_next_nextVec_0_r & _enqPtr_new_ptr_value_T_1 == 5'h13)
        freeList_19 <= _freeList_T_12;
      headPtr_flag <= (|_doAllocate_T) & headPtrNext_reverse_flag ^ headPtr_flag;
      if (|_doAllocate_T)
        headPtr_value <=
          headPtrNext_reverse_flag ? _headPtrNext_diff_T_4[4:0] : deqPtr_new_value[4:0];
      tailPtr_flag <= (|_doFree_T) & tailPtrNext_reverse_flag ^ tailPtr_flag;
      if (|_doFree_T)
        tailPtr_value <=
          tailPtrNext_reverse_flag
            ? _tailPtrNext_diff_T_4[4:0]
            : tailPtrNext_new_value[4:0];
      freeMask <= (io_free | freeMask) & _remFreeSelMaskVec_T_24;
      if (~((|remFreeSelMaskVec_0) == freeReq_next_nextVec_0_r))
        freeReq_next_nextVec_0_r <= |remFreeSelMaskVec_0;
      if (~((|remFreeSelMaskVec_1) == freeReq_next_nextVec_1_r))
        freeReq_next_nextVec_1_r <= |remFreeSelMaskVec_1;
      if (~((|remFreeSelMaskVec_2) == freeReq_next_nextVec_2_r))
        freeReq_next_nextVec_2_r <= |remFreeSelMaskVec_2;
      if (~((|remFreeSelMaskVec_3) == freeReq_next_nextVec_3_r))
        freeReq_next_nextVec_3_r <= |remFreeSelMaskVec_3;
      if (~(remFreeSelIndexOHVec_0 == freeSlotOH_next_nextVec_0_r))
        freeSlotOH_next_nextVec_0_r <= remFreeSelIndexOHVec_0;
      if (~(remFreeSelIndexOHVec_1 == freeSlotOH_next_nextVec_1_r))
        freeSlotOH_next_nextVec_1_r <= remFreeSelIndexOHVec_1;
      if (~(remFreeSelIndexOHVec_2 == freeSlotOH_next_nextVec_2_r))
        freeSlotOH_next_nextVec_2_r <= remFreeSelIndexOHVec_2;
      if (~(remFreeSelIndexOHVec_3 == freeSlotOH_next_nextVec_3_r))
        freeSlotOH_next_nextVec_3_r <= remFreeSelIndexOHVec_3;
    end
  end // always @(posedge, posedge)
  wire [6:0]       _deqPtr_diff_T_4 = 7'(_GEN - 7'h14);
  wire             deqPtr_reverse_flag = $signed(_deqPtr_diff_T_4) > -7'sh1;
  wire [4:0]       _deqPtr_new_ptr_value_T_1 =
    deqPtr_reverse_flag ? _deqPtr_diff_T_4[4:0] : deqPtr_new_value[4:0];
  wire [6:0]       _deqPtr_diff_T_10 = 7'({2'h0, _deqPtr_new_ptr_value_T_1} - 7'h14);
  wire             deqPtr_reverse_flag_1 = $signed(_deqPtr_diff_T_10) > -7'sh1;
  wire [4:0]       _deqPtr_new_ptr_value_T_3 =
    deqPtr_reverse_flag_1 ? _deqPtr_diff_T_10[4:0] : _deqPtr_new_ptr_value_T_1;
  wire [31:0][4:0] _GEN_4 =
    {{freeList_0},
     {freeList_0},
     {freeList_0},
     {freeList_0},
     {freeList_0},
     {freeList_0},
     {freeList_0},
     {freeList_0},
     {freeList_0},
     {freeList_0},
     {freeList_0},
     {freeList_0},
     {freeList_19},
     {freeList_18},
     {freeList_17},
     {freeList_16},
     {freeList_15},
     {freeList_14},
     {freeList_13},
     {freeList_12},
     {freeList_11},
     {freeList_10},
     {freeList_9},
     {freeList_8},
     {freeList_7},
     {freeList_6},
     {freeList_5},
     {freeList_4},
     {freeList_3},
     {freeList_2},
     {freeList_1},
     {freeList_0}};
  wire [6:0]       _deqPtr_diff_T_16 = 7'(_GEN - 7'h14);
  wire             deqPtr_reverse_flag_2 = $signed(_deqPtr_diff_T_16) > -7'sh1;
  wire [5:0]       deqPtr_new_value_3 =
    6'({1'h0, deqPtr_reverse_flag_2 ? _deqPtr_diff_T_16[4:0] : deqPtr_new_value[4:0]}
       + 6'h1);
  wire [6:0]       _deqPtr_diff_T_22 = 7'({1'h0, deqPtr_new_value_3} - 7'h14);
  wire             deqPtr_reverse_flag_3 = $signed(_deqPtr_diff_T_22) > -7'sh1;
  wire [4:0]       _deqPtr_new_ptr_value_T_7 =
    deqPtr_reverse_flag_3 ? _deqPtr_diff_T_22[4:0] : deqPtr_new_value_3[4:0];
  wire [6:0]       _deqPtr_diff_T_28 = 7'(_GEN - 7'h14);
  wire             deqPtr_reverse_flag_4 = $signed(_deqPtr_diff_T_28) > -7'sh1;
  wire [5:0]       deqPtr_new_value_5 =
    6'({1'h0, deqPtr_reverse_flag_4 ? _deqPtr_diff_T_28[4:0] : deqPtr_new_value[4:0]}
       + 6'h2);
  wire [6:0]       _deqPtr_diff_T_34 = 7'({1'h0, deqPtr_new_value_5} - 7'h14);
  wire             deqPtr_reverse_flag_5 = $signed(_deqPtr_diff_T_34) > -7'sh1;
  wire [4:0]       _deqPtr_new_ptr_value_T_11 =
    deqPtr_reverse_flag_5 ? _deqPtr_diff_T_34[4:0] : deqPtr_new_value_5[4:0];
  always @(posedge clock) begin
    io_canAllocate_0_r <=
      deqPtr_reverse_flag_1 ^ deqPtr_reverse_flag ^ headPtr_flag ^ tailPtr_flag
      ^ _deqPtr_new_ptr_value_T_3 < tailPtr_value;
    io_allocateSlot_0_r <= _GEN_4[_deqPtr_new_ptr_value_T_3];
    io_canAllocate_1_r <=
      deqPtr_reverse_flag_3 ^ deqPtr_reverse_flag_2 ^ headPtr_flag ^ tailPtr_flag
      ^ _deqPtr_new_ptr_value_T_7 < tailPtr_value;
    io_allocateSlot_1_r <= _GEN_4[_deqPtr_new_ptr_value_T_7];
    io_canAllocate_2_r <=
      deqPtr_reverse_flag_5 ^ deqPtr_reverse_flag_4 ^ headPtr_flag ^ tailPtr_flag
      ^ _deqPtr_new_ptr_value_T_11 < tailPtr_value;
    io_allocateSlot_2_r <= _GEN_4[_deqPtr_new_ptr_value_T_11];
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:7];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          _RANDOM[i[2:0]] = `RANDOM;
        end
        freeList_0 = _RANDOM[3'h0][4:0];
        freeList_1 = _RANDOM[3'h0][9:5];
        freeList_2 = _RANDOM[3'h0][14:10];
        freeList_3 = _RANDOM[3'h0][19:15];
        freeList_4 = _RANDOM[3'h0][24:20];
        freeList_5 = _RANDOM[3'h0][29:25];
        freeList_6 = {_RANDOM[3'h0][31:30], _RANDOM[3'h1][2:0]};
        freeList_7 = _RANDOM[3'h1][7:3];
        freeList_8 = _RANDOM[3'h1][12:8];
        freeList_9 = _RANDOM[3'h1][17:13];
        freeList_10 = _RANDOM[3'h1][22:18];
        freeList_11 = _RANDOM[3'h1][27:23];
        freeList_12 = {_RANDOM[3'h1][31:28], _RANDOM[3'h2][0]};
        freeList_13 = _RANDOM[3'h2][5:1];
        freeList_14 = _RANDOM[3'h2][10:6];
        freeList_15 = _RANDOM[3'h2][15:11];
        freeList_16 = _RANDOM[3'h2][20:16];
        freeList_17 = _RANDOM[3'h2][25:21];
        freeList_18 = _RANDOM[3'h2][30:26];
        freeList_19 = {_RANDOM[3'h2][31], _RANDOM[3'h3][3:0]};
        headPtr_flag = _RANDOM[3'h3][4];
        headPtr_value = _RANDOM[3'h3][9:5];
        tailPtr_flag = _RANDOM[3'h3][10];
        tailPtr_value = _RANDOM[3'h3][15:11];
        freeMask = {_RANDOM[3'h3][31:16], _RANDOM[3'h4][3:0]};
        freeReq_next_nextVec_0_r = _RANDOM[3'h4][4];
        freeReq_next_nextVec_1_r = _RANDOM[3'h4][5];
        freeReq_next_nextVec_2_r = _RANDOM[3'h4][6];
        freeReq_next_nextVec_3_r = _RANDOM[3'h4][7];
        freeSlotOH_next_nextVec_0_r = _RANDOM[3'h4][27:8];
        freeSlotOH_next_nextVec_1_r = {_RANDOM[3'h4][31:28], _RANDOM[3'h5][15:0]};
        freeSlotOH_next_nextVec_2_r = {_RANDOM[3'h5][31:16], _RANDOM[3'h6][3:0]};
        freeSlotOH_next_nextVec_3_r = _RANDOM[3'h6][23:4];
        io_canAllocate_0_r = _RANDOM[3'h6][29];
        io_allocateSlot_0_r = {_RANDOM[3'h6][31:30], _RANDOM[3'h7][2:0]};
        io_canAllocate_1_r = _RANDOM[3'h7][3];
        io_allocateSlot_1_r = _RANDOM[3'h7][8:4];
        io_canAllocate_2_r = _RANDOM[3'h7][9];
        io_allocateSlot_2_r = _RANDOM[3'h7][14:10];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        freeList_0 = 5'h0;
        freeList_1 = 5'h1;
        freeList_2 = 5'h2;
        freeList_3 = 5'h3;
        freeList_4 = 5'h4;
        freeList_5 = 5'h5;
        freeList_6 = 5'h6;
        freeList_7 = 5'h7;
        freeList_8 = 5'h8;
        freeList_9 = 5'h9;
        freeList_10 = 5'hA;
        freeList_11 = 5'hB;
        freeList_12 = 5'hC;
        freeList_13 = 5'hD;
        freeList_14 = 5'hE;
        freeList_15 = 5'hF;
        freeList_16 = 5'h10;
        freeList_17 = 5'h11;
        freeList_18 = 5'h12;
        freeList_19 = 5'h13;
        headPtr_flag = 1'h0;
        headPtr_value = 5'h0;
        tailPtr_flag = 1'h1;
        tailPtr_value = 5'h0;
        freeMask = 20'h0;
        freeReq_next_nextVec_0_r = 1'h0;
        freeReq_next_nextVec_1_r = 1'h0;
        freeReq_next_nextVec_2_r = 1'h0;
        freeReq_next_nextVec_3_r = 1'h0;
        freeSlotOH_next_nextVec_0_r = 20'h0;
        freeSlotOH_next_nextVec_1_r = 20'h0;
        freeSlotOH_next_nextVec_2_r = 20'h0;
        freeSlotOH_next_nextVec_3_r = 20'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_allocateSlot_0 = io_allocateSlot_0_r;
  assign io_allocateSlot_1 = io_allocateSlot_1_r;
  assign io_allocateSlot_2 = io_allocateSlot_2_r;
  assign io_canAllocate_0 = io_canAllocate_0_r;
  assign io_canAllocate_1 = io_canAllocate_1_r;
  assign io_canAllocate_2 = io_canAllocate_2_r;
endmodule

