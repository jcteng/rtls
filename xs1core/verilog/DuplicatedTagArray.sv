// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module DuplicatedTagArray(
  input         clock,
  input         reset,
  input         io_read_0_valid,
  input  [6:0]  io_read_0_bits_idx,
  input         io_read_1_valid,
  input  [6:0]  io_read_1_bits_idx,
  input         io_read_2_valid,
  input  [6:0]  io_read_2_bits_idx,
  output        io_read_3_ready,
  input         io_read_3_valid,
  input  [6:0]  io_read_3_bits_idx,
  output [29:0] io_resp_0_0,
  output [29:0] io_resp_0_1,
  output [29:0] io_resp_0_2,
  output [29:0] io_resp_0_3,
  output [29:0] io_resp_0_4,
  output [29:0] io_resp_0_5,
  output [29:0] io_resp_0_6,
  output [29:0] io_resp_0_7,
  output [29:0] io_resp_1_0,
  output [29:0] io_resp_1_1,
  output [29:0] io_resp_1_2,
  output [29:0] io_resp_1_3,
  output [29:0] io_resp_1_4,
  output [29:0] io_resp_1_5,
  output [29:0] io_resp_1_6,
  output [29:0] io_resp_1_7,
  output [29:0] io_resp_2_0,
  output [29:0] io_resp_2_1,
  output [29:0] io_resp_2_2,
  output [29:0] io_resp_2_3,
  output [29:0] io_resp_2_4,
  output [29:0] io_resp_2_5,
  output [29:0] io_resp_2_6,
  output [29:0] io_resp_2_7,
  output [29:0] io_resp_3_0,
  output [29:0] io_resp_3_1,
  output [29:0] io_resp_3_2,
  output [29:0] io_resp_3_3,
  output [29:0] io_resp_3_4,
  output [29:0] io_resp_3_5,
  output [29:0] io_resp_3_6,
  output [29:0] io_resp_3_7,
  input         io_write_valid,
  input  [6:0]  io_write_bits_idx,
  input  [7:0]  io_write_bits_way_en,
  input  [23:0] io_write_bits_tag,
  input  [63:0] io_cacheOp_req_bits_wayNum,
  input  [63:0] io_cacheOp_req_bits_index,
  input  [63:0] io_cacheOp_req_bits_write_tag_low,
  input         io_cacheOp_req_dup_0_valid,
  input         io_cacheOp_req_dup_1_valid,
  input         io_cacheOp_req_dup_2_valid,
  input         io_cacheOp_req_dup_6_valid,
  input         io_cacheOp_req_dup_7_valid,
  input         io_cacheOp_req_dup_8_valid,
  input  [63:0] io_cacheOp_req_bits_opCode_dup_0,
  input  [63:0] io_cacheOp_req_bits_opCode_dup_1,
  input  [63:0] io_cacheOp_req_bits_opCode_dup_2,
  input  [63:0] io_cacheOp_req_bits_opCode_dup_6,
  input  [63:0] io_cacheOp_req_bits_opCode_dup_7,
  input  [63:0] io_cacheOp_req_bits_opCode_dup_8
);

  wire [23:0] _array_3_io_resp_0;
  wire [23:0] _array_3_io_resp_1;
  wire [23:0] _array_3_io_resp_2;
  wire [23:0] _array_3_io_resp_3;
  wire [23:0] _array_3_io_resp_4;
  wire [23:0] _array_3_io_resp_5;
  wire [23:0] _array_3_io_resp_6;
  wire [23:0] _array_3_io_resp_7;
  wire [23:0] _array_2_io_resp_0;
  wire [23:0] _array_2_io_resp_1;
  wire [23:0] _array_2_io_resp_2;
  wire [23:0] _array_2_io_resp_3;
  wire [23:0] _array_2_io_resp_4;
  wire [23:0] _array_2_io_resp_5;
  wire [23:0] _array_2_io_resp_6;
  wire [23:0] _array_2_io_resp_7;
  wire [23:0] _array_1_io_resp_0;
  wire [23:0] _array_1_io_resp_1;
  wire [23:0] _array_1_io_resp_2;
  wire [23:0] _array_1_io_resp_3;
  wire [23:0] _array_1_io_resp_4;
  wire [23:0] _array_1_io_resp_5;
  wire [23:0] _array_1_io_resp_6;
  wire [23:0] _array_1_io_resp_7;
  wire [23:0] _array_0_io_resp_0;
  wire [23:0] _array_0_io_resp_1;
  wire [23:0] _array_0_io_resp_2;
  wire [23:0] _array_0_io_resp_3;
  wire [23:0] _array_0_io_resp_4;
  wire [23:0] _array_0_io_resp_5;
  wire [23:0] _array_0_io_resp_6;
  wire [23:0] _array_0_io_resp_7;
  wire        _GEN =
    io_cacheOp_req_dup_0_valid & io_cacheOp_req_bits_opCode_dup_0 == 64'h2;
  wire        _GEN_0 =
    io_cacheOp_req_dup_1_valid & io_cacheOp_req_bits_opCode_dup_1 == 64'h2;
  wire        _GEN_1 =
    io_cacheOp_req_dup_2_valid & io_cacheOp_req_bits_opCode_dup_2 == 64'h2;
  wire        _GEN_2 =
    io_cacheOp_req_dup_6_valid & io_cacheOp_req_bits_opCode_dup_6 == 64'h6;
  wire [31:0] _array_0_io_write_bits_way_en_T_1 =
    32'h1 << io_cacheOp_req_bits_wayNum[4:0];
  wire        _GEN_3 =
    io_cacheOp_req_dup_7_valid & io_cacheOp_req_bits_opCode_dup_7 == 64'h6;
  wire [31:0] _array_1_io_write_bits_way_en_T_1 =
    32'h1 << io_cacheOp_req_bits_wayNum[4:0];
  wire        _GEN_4 =
    io_cacheOp_req_dup_8_valid & io_cacheOp_req_bits_opCode_dup_8 == 64'h6;
  wire [31:0] _array_2_io_write_bits_way_en_T_1 =
    32'h1 << io_cacheOp_req_bits_wayNum[4:0];
  TagArray array_0 (
    .clock                (clock),
    .reset                (reset),
    .io_read_ready        (/* unused */),
    .io_read_valid        (_GEN | io_read_0_valid),
    .io_read_bits_idx     (_GEN ? io_cacheOp_req_bits_index[6:0] : io_read_0_bits_idx),
    .io_resp_0            (_array_0_io_resp_0),
    .io_resp_1            (_array_0_io_resp_1),
    .io_resp_2            (_array_0_io_resp_2),
    .io_resp_3            (_array_0_io_resp_3),
    .io_resp_4            (_array_0_io_resp_4),
    .io_resp_5            (_array_0_io_resp_5),
    .io_resp_6            (_array_0_io_resp_6),
    .io_resp_7            (_array_0_io_resp_7),
    .io_write_valid       (_GEN_2 | io_write_valid),
    .io_write_bits_idx    (_GEN_2 ? io_cacheOp_req_bits_index[6:0] : io_write_bits_idx),
    .io_write_bits_way_en
      (_GEN_2 ? _array_0_io_write_bits_way_en_T_1[7:0] : io_write_bits_way_en),
    .io_write_bits_tag
      (_GEN_2 ? io_cacheOp_req_bits_write_tag_low[23:0] : io_write_bits_tag)
  );
  TagArray array_1 (
    .clock                (clock),
    .reset                (reset),
    .io_read_ready        (/* unused */),
    .io_read_valid        (_GEN_0 | io_read_1_valid),
    .io_read_bits_idx     (_GEN_0 ? io_cacheOp_req_bits_index[6:0] : io_read_1_bits_idx),
    .io_resp_0            (_array_1_io_resp_0),
    .io_resp_1            (_array_1_io_resp_1),
    .io_resp_2            (_array_1_io_resp_2),
    .io_resp_3            (_array_1_io_resp_3),
    .io_resp_4            (_array_1_io_resp_4),
    .io_resp_5            (_array_1_io_resp_5),
    .io_resp_6            (_array_1_io_resp_6),
    .io_resp_7            (_array_1_io_resp_7),
    .io_write_valid       (_GEN_3 | io_write_valid),
    .io_write_bits_idx    (_GEN_3 ? io_cacheOp_req_bits_index[6:0] : io_write_bits_idx),
    .io_write_bits_way_en
      (_GEN_3 ? _array_1_io_write_bits_way_en_T_1[7:0] : io_write_bits_way_en),
    .io_write_bits_tag
      (_GEN_3 ? io_cacheOp_req_bits_write_tag_low[23:0] : io_write_bits_tag)
  );
  TagArray array_2 (
    .clock                (clock),
    .reset                (reset),
    .io_read_ready        (/* unused */),
    .io_read_valid        (_GEN_1 | io_read_2_valid),
    .io_read_bits_idx     (_GEN_1 ? io_cacheOp_req_bits_index[6:0] : io_read_2_bits_idx),
    .io_resp_0            (_array_2_io_resp_0),
    .io_resp_1            (_array_2_io_resp_1),
    .io_resp_2            (_array_2_io_resp_2),
    .io_resp_3            (_array_2_io_resp_3),
    .io_resp_4            (_array_2_io_resp_4),
    .io_resp_5            (_array_2_io_resp_5),
    .io_resp_6            (_array_2_io_resp_6),
    .io_resp_7            (_array_2_io_resp_7),
    .io_write_valid       (_GEN_4 | io_write_valid),
    .io_write_bits_idx    (_GEN_4 ? io_cacheOp_req_bits_index[6:0] : io_write_bits_idx),
    .io_write_bits_way_en
      (_GEN_4 ? _array_2_io_write_bits_way_en_T_1[7:0] : io_write_bits_way_en),
    .io_write_bits_tag
      (_GEN_4 ? io_cacheOp_req_bits_write_tag_low[23:0] : io_write_bits_tag)
  );
  TagArray array_3 (
    .clock                (clock),
    .reset                (reset),
    .io_read_ready        (io_read_3_ready),
    .io_read_valid        (io_read_3_valid),
    .io_read_bits_idx     (io_read_3_bits_idx),
    .io_resp_0            (_array_3_io_resp_0),
    .io_resp_1            (_array_3_io_resp_1),
    .io_resp_2            (_array_3_io_resp_2),
    .io_resp_3            (_array_3_io_resp_3),
    .io_resp_4            (_array_3_io_resp_4),
    .io_resp_5            (_array_3_io_resp_5),
    .io_resp_6            (_array_3_io_resp_6),
    .io_resp_7            (_array_3_io_resp_7),
    .io_write_valid       (io_write_valid),
    .io_write_bits_idx    (io_write_bits_idx),
    .io_write_bits_way_en (io_write_bits_way_en),
    .io_write_bits_tag    (io_write_bits_tag)
  );
  assign io_resp_0_0 = {6'h0, _array_0_io_resp_0};
  assign io_resp_0_1 = {6'h0, _array_0_io_resp_1};
  assign io_resp_0_2 = {6'h0, _array_0_io_resp_2};
  assign io_resp_0_3 = {6'h0, _array_0_io_resp_3};
  assign io_resp_0_4 = {6'h0, _array_0_io_resp_4};
  assign io_resp_0_5 = {6'h0, _array_0_io_resp_5};
  assign io_resp_0_6 = {6'h0, _array_0_io_resp_6};
  assign io_resp_0_7 = {6'h0, _array_0_io_resp_7};
  assign io_resp_1_0 = {6'h0, _array_1_io_resp_0};
  assign io_resp_1_1 = {6'h0, _array_1_io_resp_1};
  assign io_resp_1_2 = {6'h0, _array_1_io_resp_2};
  assign io_resp_1_3 = {6'h0, _array_1_io_resp_3};
  assign io_resp_1_4 = {6'h0, _array_1_io_resp_4};
  assign io_resp_1_5 = {6'h0, _array_1_io_resp_5};
  assign io_resp_1_6 = {6'h0, _array_1_io_resp_6};
  assign io_resp_1_7 = {6'h0, _array_1_io_resp_7};
  assign io_resp_2_0 = {6'h0, _array_2_io_resp_0};
  assign io_resp_2_1 = {6'h0, _array_2_io_resp_1};
  assign io_resp_2_2 = {6'h0, _array_2_io_resp_2};
  assign io_resp_2_3 = {6'h0, _array_2_io_resp_3};
  assign io_resp_2_4 = {6'h0, _array_2_io_resp_4};
  assign io_resp_2_5 = {6'h0, _array_2_io_resp_5};
  assign io_resp_2_6 = {6'h0, _array_2_io_resp_6};
  assign io_resp_2_7 = {6'h0, _array_2_io_resp_7};
  assign io_resp_3_0 = {6'h0, _array_3_io_resp_0};
  assign io_resp_3_1 = {6'h0, _array_3_io_resp_1};
  assign io_resp_3_2 = {6'h0, _array_3_io_resp_2};
  assign io_resp_3_3 = {6'h0, _array_3_io_resp_3};
  assign io_resp_3_4 = {6'h0, _array_3_io_resp_4};
  assign io_resp_3_5 = {6'h0, _array_3_io_resp_5};
  assign io_resp_3_6 = {6'h0, _array_3_io_resp_6};
  assign io_resp_3_7 = {6'h0, _array_3_io_resp_7};
endmodule

