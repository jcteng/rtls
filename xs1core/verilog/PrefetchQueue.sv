// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module PrefetchQueue(
  input         clock,
  input         reset,
  input         io_enq_valid,
  input  [20:0] io_enq_bits_tag,
  input  [8:0]  io_enq_bits_set,
  input  [32:0] io_enq_bits_vaddr,
  input         io_enq_bits_needT,
  input  [6:0]  io_enq_bits_source,
  input  [3:0]  io_enq_bits_pfSource,
  input         io_deq_ready,
  output        io_deq_valid,
  output [20:0] io_deq_bits_tag,
  output [8:0]  io_deq_bits_set,
  output [32:0] io_deq_bits_vaddr,
  output        io_deq_bits_needT,
  output [6:0]  io_deq_bits_source,
  output [3:0]  io_deq_bits_pfSource
);

  reg  [20:0]       queue_0_tag;
  reg  [8:0]        queue_0_set;
  reg  [32:0]       queue_0_vaddr;
  reg               queue_0_needT;
  reg  [6:0]        queue_0_source;
  reg  [3:0]        queue_0_pfSource;
  reg  [20:0]       queue_1_tag;
  reg  [8:0]        queue_1_set;
  reg  [32:0]       queue_1_vaddr;
  reg               queue_1_needT;
  reg  [6:0]        queue_1_source;
  reg  [3:0]        queue_1_pfSource;
  reg  [20:0]       queue_2_tag;
  reg  [8:0]        queue_2_set;
  reg  [32:0]       queue_2_vaddr;
  reg               queue_2_needT;
  reg  [6:0]        queue_2_source;
  reg  [3:0]        queue_2_pfSource;
  reg  [20:0]       queue_3_tag;
  reg  [8:0]        queue_3_set;
  reg  [32:0]       queue_3_vaddr;
  reg               queue_3_needT;
  reg  [6:0]        queue_3_source;
  reg  [3:0]        queue_3_pfSource;
  reg  [20:0]       queue_4_tag;
  reg  [8:0]        queue_4_set;
  reg  [32:0]       queue_4_vaddr;
  reg               queue_4_needT;
  reg  [6:0]        queue_4_source;
  reg  [3:0]        queue_4_pfSource;
  reg  [20:0]       queue_5_tag;
  reg  [8:0]        queue_5_set;
  reg  [32:0]       queue_5_vaddr;
  reg               queue_5_needT;
  reg  [6:0]        queue_5_source;
  reg  [3:0]        queue_5_pfSource;
  reg  [20:0]       queue_6_tag;
  reg  [8:0]        queue_6_set;
  reg  [32:0]       queue_6_vaddr;
  reg               queue_6_needT;
  reg  [6:0]        queue_6_source;
  reg  [3:0]        queue_6_pfSource;
  reg  [20:0]       queue_7_tag;
  reg  [8:0]        queue_7_set;
  reg  [32:0]       queue_7_vaddr;
  reg               queue_7_needT;
  reg  [6:0]        queue_7_source;
  reg  [3:0]        queue_7_pfSource;
  reg  [20:0]       queue_8_tag;
  reg  [8:0]        queue_8_set;
  reg  [32:0]       queue_8_vaddr;
  reg               queue_8_needT;
  reg  [6:0]        queue_8_source;
  reg  [3:0]        queue_8_pfSource;
  reg  [20:0]       queue_9_tag;
  reg  [8:0]        queue_9_set;
  reg  [32:0]       queue_9_vaddr;
  reg               queue_9_needT;
  reg  [6:0]        queue_9_source;
  reg  [3:0]        queue_9_pfSource;
  reg  [20:0]       queue_10_tag;
  reg  [8:0]        queue_10_set;
  reg  [32:0]       queue_10_vaddr;
  reg               queue_10_needT;
  reg  [6:0]        queue_10_source;
  reg  [3:0]        queue_10_pfSource;
  reg  [20:0]       queue_11_tag;
  reg  [8:0]        queue_11_set;
  reg  [32:0]       queue_11_vaddr;
  reg               queue_11_needT;
  reg  [6:0]        queue_11_source;
  reg  [3:0]        queue_11_pfSource;
  reg  [20:0]       queue_12_tag;
  reg  [8:0]        queue_12_set;
  reg  [32:0]       queue_12_vaddr;
  reg               queue_12_needT;
  reg  [6:0]        queue_12_source;
  reg  [3:0]        queue_12_pfSource;
  reg  [20:0]       queue_13_tag;
  reg  [8:0]        queue_13_set;
  reg  [32:0]       queue_13_vaddr;
  reg               queue_13_needT;
  reg  [6:0]        queue_13_source;
  reg  [3:0]        queue_13_pfSource;
  reg  [20:0]       queue_14_tag;
  reg  [8:0]        queue_14_set;
  reg  [32:0]       queue_14_vaddr;
  reg               queue_14_needT;
  reg  [6:0]        queue_14_source;
  reg  [3:0]        queue_14_pfSource;
  reg  [20:0]       queue_15_tag;
  reg  [8:0]        queue_15_set;
  reg  [32:0]       queue_15_vaddr;
  reg               queue_15_needT;
  reg  [6:0]        queue_15_source;
  reg  [3:0]        queue_15_pfSource;
  reg  [20:0]       queue_16_tag;
  reg  [8:0]        queue_16_set;
  reg  [32:0]       queue_16_vaddr;
  reg               queue_16_needT;
  reg  [6:0]        queue_16_source;
  reg  [3:0]        queue_16_pfSource;
  reg  [20:0]       queue_17_tag;
  reg  [8:0]        queue_17_set;
  reg  [32:0]       queue_17_vaddr;
  reg               queue_17_needT;
  reg  [6:0]        queue_17_source;
  reg  [3:0]        queue_17_pfSource;
  reg  [20:0]       queue_18_tag;
  reg  [8:0]        queue_18_set;
  reg  [32:0]       queue_18_vaddr;
  reg               queue_18_needT;
  reg  [6:0]        queue_18_source;
  reg  [3:0]        queue_18_pfSource;
  reg  [20:0]       queue_19_tag;
  reg  [8:0]        queue_19_set;
  reg  [32:0]       queue_19_vaddr;
  reg               queue_19_needT;
  reg  [6:0]        queue_19_source;
  reg  [3:0]        queue_19_pfSource;
  reg  [20:0]       queue_20_tag;
  reg  [8:0]        queue_20_set;
  reg  [32:0]       queue_20_vaddr;
  reg               queue_20_needT;
  reg  [6:0]        queue_20_source;
  reg  [3:0]        queue_20_pfSource;
  reg  [20:0]       queue_21_tag;
  reg  [8:0]        queue_21_set;
  reg  [32:0]       queue_21_vaddr;
  reg               queue_21_needT;
  reg  [6:0]        queue_21_source;
  reg  [3:0]        queue_21_pfSource;
  reg  [20:0]       queue_22_tag;
  reg  [8:0]        queue_22_set;
  reg  [32:0]       queue_22_vaddr;
  reg               queue_22_needT;
  reg  [6:0]        queue_22_source;
  reg  [3:0]        queue_22_pfSource;
  reg  [20:0]       queue_23_tag;
  reg  [8:0]        queue_23_set;
  reg  [32:0]       queue_23_vaddr;
  reg               queue_23_needT;
  reg  [6:0]        queue_23_source;
  reg  [3:0]        queue_23_pfSource;
  reg  [20:0]       queue_24_tag;
  reg  [8:0]        queue_24_set;
  reg  [32:0]       queue_24_vaddr;
  reg               queue_24_needT;
  reg  [6:0]        queue_24_source;
  reg  [3:0]        queue_24_pfSource;
  reg  [20:0]       queue_25_tag;
  reg  [8:0]        queue_25_set;
  reg  [32:0]       queue_25_vaddr;
  reg               queue_25_needT;
  reg  [6:0]        queue_25_source;
  reg  [3:0]        queue_25_pfSource;
  reg  [20:0]       queue_26_tag;
  reg  [8:0]        queue_26_set;
  reg  [32:0]       queue_26_vaddr;
  reg               queue_26_needT;
  reg  [6:0]        queue_26_source;
  reg  [3:0]        queue_26_pfSource;
  reg  [20:0]       queue_27_tag;
  reg  [8:0]        queue_27_set;
  reg  [32:0]       queue_27_vaddr;
  reg               queue_27_needT;
  reg  [6:0]        queue_27_source;
  reg  [3:0]        queue_27_pfSource;
  reg  [20:0]       queue_28_tag;
  reg  [8:0]        queue_28_set;
  reg  [32:0]       queue_28_vaddr;
  reg               queue_28_needT;
  reg  [6:0]        queue_28_source;
  reg  [3:0]        queue_28_pfSource;
  reg  [20:0]       queue_29_tag;
  reg  [8:0]        queue_29_set;
  reg  [32:0]       queue_29_vaddr;
  reg               queue_29_needT;
  reg  [6:0]        queue_29_source;
  reg  [3:0]        queue_29_pfSource;
  reg  [20:0]       queue_30_tag;
  reg  [8:0]        queue_30_set;
  reg  [32:0]       queue_30_vaddr;
  reg               queue_30_needT;
  reg  [6:0]        queue_30_source;
  reg  [3:0]        queue_30_pfSource;
  reg  [20:0]       queue_31_tag;
  reg  [8:0]        queue_31_set;
  reg  [32:0]       queue_31_vaddr;
  reg               queue_31_needT;
  reg  [6:0]        queue_31_source;
  reg  [3:0]        queue_31_pfSource;
  reg               valids_31;
  reg  [4:0]        head;
  reg  [4:0]        tail;
  wire              _full_T = head == tail;
  wire              empty = _full_T & ~valids_31;
  wire [31:0][20:0] _GEN =
    {{queue_31_tag},
     {queue_30_tag},
     {queue_29_tag},
     {queue_28_tag},
     {queue_27_tag},
     {queue_26_tag},
     {queue_25_tag},
     {queue_24_tag},
     {queue_23_tag},
     {queue_22_tag},
     {queue_21_tag},
     {queue_20_tag},
     {queue_19_tag},
     {queue_18_tag},
     {queue_17_tag},
     {queue_16_tag},
     {queue_15_tag},
     {queue_14_tag},
     {queue_13_tag},
     {queue_12_tag},
     {queue_11_tag},
     {queue_10_tag},
     {queue_9_tag},
     {queue_8_tag},
     {queue_7_tag},
     {queue_6_tag},
     {queue_5_tag},
     {queue_4_tag},
     {queue_3_tag},
     {queue_2_tag},
     {queue_1_tag},
     {queue_0_tag}};
  wire [31:0][8:0]  _GEN_0 =
    {{queue_31_set},
     {queue_30_set},
     {queue_29_set},
     {queue_28_set},
     {queue_27_set},
     {queue_26_set},
     {queue_25_set},
     {queue_24_set},
     {queue_23_set},
     {queue_22_set},
     {queue_21_set},
     {queue_20_set},
     {queue_19_set},
     {queue_18_set},
     {queue_17_set},
     {queue_16_set},
     {queue_15_set},
     {queue_14_set},
     {queue_13_set},
     {queue_12_set},
     {queue_11_set},
     {queue_10_set},
     {queue_9_set},
     {queue_8_set},
     {queue_7_set},
     {queue_6_set},
     {queue_5_set},
     {queue_4_set},
     {queue_3_set},
     {queue_2_set},
     {queue_1_set},
     {queue_0_set}};
  wire [31:0][32:0] _GEN_1 =
    {{queue_31_vaddr},
     {queue_30_vaddr},
     {queue_29_vaddr},
     {queue_28_vaddr},
     {queue_27_vaddr},
     {queue_26_vaddr},
     {queue_25_vaddr},
     {queue_24_vaddr},
     {queue_23_vaddr},
     {queue_22_vaddr},
     {queue_21_vaddr},
     {queue_20_vaddr},
     {queue_19_vaddr},
     {queue_18_vaddr},
     {queue_17_vaddr},
     {queue_16_vaddr},
     {queue_15_vaddr},
     {queue_14_vaddr},
     {queue_13_vaddr},
     {queue_12_vaddr},
     {queue_11_vaddr},
     {queue_10_vaddr},
     {queue_9_vaddr},
     {queue_8_vaddr},
     {queue_7_vaddr},
     {queue_6_vaddr},
     {queue_5_vaddr},
     {queue_4_vaddr},
     {queue_3_vaddr},
     {queue_2_vaddr},
     {queue_1_vaddr},
     {queue_0_vaddr}};
  wire [31:0]       _GEN_2 =
    {{queue_31_needT},
     {queue_30_needT},
     {queue_29_needT},
     {queue_28_needT},
     {queue_27_needT},
     {queue_26_needT},
     {queue_25_needT},
     {queue_24_needT},
     {queue_23_needT},
     {queue_22_needT},
     {queue_21_needT},
     {queue_20_needT},
     {queue_19_needT},
     {queue_18_needT},
     {queue_17_needT},
     {queue_16_needT},
     {queue_15_needT},
     {queue_14_needT},
     {queue_13_needT},
     {queue_12_needT},
     {queue_11_needT},
     {queue_10_needT},
     {queue_9_needT},
     {queue_8_needT},
     {queue_7_needT},
     {queue_6_needT},
     {queue_5_needT},
     {queue_4_needT},
     {queue_3_needT},
     {queue_2_needT},
     {queue_1_needT},
     {queue_0_needT}};
  wire [31:0][6:0]  _GEN_3 =
    {{queue_31_source},
     {queue_30_source},
     {queue_29_source},
     {queue_28_source},
     {queue_27_source},
     {queue_26_source},
     {queue_25_source},
     {queue_24_source},
     {queue_23_source},
     {queue_22_source},
     {queue_21_source},
     {queue_20_source},
     {queue_19_source},
     {queue_18_source},
     {queue_17_source},
     {queue_16_source},
     {queue_15_source},
     {queue_14_source},
     {queue_13_source},
     {queue_12_source},
     {queue_11_source},
     {queue_10_source},
     {queue_9_source},
     {queue_8_source},
     {queue_7_source},
     {queue_6_source},
     {queue_5_source},
     {queue_4_source},
     {queue_3_source},
     {queue_2_source},
     {queue_1_source},
     {queue_0_source}};
  wire [31:0][3:0]  _GEN_4 =
    {{queue_31_pfSource},
     {queue_30_pfSource},
     {queue_29_pfSource},
     {queue_28_pfSource},
     {queue_27_pfSource},
     {queue_26_pfSource},
     {queue_25_pfSource},
     {queue_24_pfSource},
     {queue_23_pfSource},
     {queue_22_pfSource},
     {queue_21_pfSource},
     {queue_20_pfSource},
     {queue_19_pfSource},
     {queue_18_pfSource},
     {queue_17_pfSource},
     {queue_16_pfSource},
     {queue_15_pfSource},
     {queue_14_pfSource},
     {queue_13_pfSource},
     {queue_12_pfSource},
     {queue_11_pfSource},
     {queue_10_pfSource},
     {queue_9_pfSource},
     {queue_8_pfSource},
     {queue_7_pfSource},
     {queue_6_pfSource},
     {queue_5_pfSource},
     {queue_4_pfSource},
     {queue_3_pfSource},
     {queue_2_pfSource},
     {queue_1_pfSource},
     {queue_0_pfSource}};
  wire              _GEN_5 = ~empty & io_deq_ready;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      queue_0_tag <= 21'h0;
      queue_0_set <= 9'h0;
      queue_0_vaddr <= 33'h0;
      queue_0_needT <= 1'h0;
      queue_0_source <= 7'h0;
      queue_0_pfSource <= 4'h0;
      queue_1_tag <= 21'h0;
      queue_1_set <= 9'h0;
      queue_1_vaddr <= 33'h0;
      queue_1_needT <= 1'h0;
      queue_1_source <= 7'h0;
      queue_1_pfSource <= 4'h0;
      queue_2_tag <= 21'h0;
      queue_2_set <= 9'h0;
      queue_2_vaddr <= 33'h0;
      queue_2_needT <= 1'h0;
      queue_2_source <= 7'h0;
      queue_2_pfSource <= 4'h0;
      queue_3_tag <= 21'h0;
      queue_3_set <= 9'h0;
      queue_3_vaddr <= 33'h0;
      queue_3_needT <= 1'h0;
      queue_3_source <= 7'h0;
      queue_3_pfSource <= 4'h0;
      queue_4_tag <= 21'h0;
      queue_4_set <= 9'h0;
      queue_4_vaddr <= 33'h0;
      queue_4_needT <= 1'h0;
      queue_4_source <= 7'h0;
      queue_4_pfSource <= 4'h0;
      queue_5_tag <= 21'h0;
      queue_5_set <= 9'h0;
      queue_5_vaddr <= 33'h0;
      queue_5_needT <= 1'h0;
      queue_5_source <= 7'h0;
      queue_5_pfSource <= 4'h0;
      queue_6_tag <= 21'h0;
      queue_6_set <= 9'h0;
      queue_6_vaddr <= 33'h0;
      queue_6_needT <= 1'h0;
      queue_6_source <= 7'h0;
      queue_6_pfSource <= 4'h0;
      queue_7_tag <= 21'h0;
      queue_7_set <= 9'h0;
      queue_7_vaddr <= 33'h0;
      queue_7_needT <= 1'h0;
      queue_7_source <= 7'h0;
      queue_7_pfSource <= 4'h0;
      queue_8_tag <= 21'h0;
      queue_8_set <= 9'h0;
      queue_8_vaddr <= 33'h0;
      queue_8_needT <= 1'h0;
      queue_8_source <= 7'h0;
      queue_8_pfSource <= 4'h0;
      queue_9_tag <= 21'h0;
      queue_9_set <= 9'h0;
      queue_9_vaddr <= 33'h0;
      queue_9_needT <= 1'h0;
      queue_9_source <= 7'h0;
      queue_9_pfSource <= 4'h0;
      queue_10_tag <= 21'h0;
      queue_10_set <= 9'h0;
      queue_10_vaddr <= 33'h0;
      queue_10_needT <= 1'h0;
      queue_10_source <= 7'h0;
      queue_10_pfSource <= 4'h0;
      queue_11_tag <= 21'h0;
      queue_11_set <= 9'h0;
      queue_11_vaddr <= 33'h0;
      queue_11_needT <= 1'h0;
      queue_11_source <= 7'h0;
      queue_11_pfSource <= 4'h0;
      queue_12_tag <= 21'h0;
      queue_12_set <= 9'h0;
      queue_12_vaddr <= 33'h0;
      queue_12_needT <= 1'h0;
      queue_12_source <= 7'h0;
      queue_12_pfSource <= 4'h0;
      queue_13_tag <= 21'h0;
      queue_13_set <= 9'h0;
      queue_13_vaddr <= 33'h0;
      queue_13_needT <= 1'h0;
      queue_13_source <= 7'h0;
      queue_13_pfSource <= 4'h0;
      queue_14_tag <= 21'h0;
      queue_14_set <= 9'h0;
      queue_14_vaddr <= 33'h0;
      queue_14_needT <= 1'h0;
      queue_14_source <= 7'h0;
      queue_14_pfSource <= 4'h0;
      queue_15_tag <= 21'h0;
      queue_15_set <= 9'h0;
      queue_15_vaddr <= 33'h0;
      queue_15_needT <= 1'h0;
      queue_15_source <= 7'h0;
      queue_15_pfSource <= 4'h0;
      queue_16_tag <= 21'h0;
      queue_16_set <= 9'h0;
      queue_16_vaddr <= 33'h0;
      queue_16_needT <= 1'h0;
      queue_16_source <= 7'h0;
      queue_16_pfSource <= 4'h0;
      queue_17_tag <= 21'h0;
      queue_17_set <= 9'h0;
      queue_17_vaddr <= 33'h0;
      queue_17_needT <= 1'h0;
      queue_17_source <= 7'h0;
      queue_17_pfSource <= 4'h0;
      queue_18_tag <= 21'h0;
      queue_18_set <= 9'h0;
      queue_18_vaddr <= 33'h0;
      queue_18_needT <= 1'h0;
      queue_18_source <= 7'h0;
      queue_18_pfSource <= 4'h0;
      queue_19_tag <= 21'h0;
      queue_19_set <= 9'h0;
      queue_19_vaddr <= 33'h0;
      queue_19_needT <= 1'h0;
      queue_19_source <= 7'h0;
      queue_19_pfSource <= 4'h0;
      queue_20_tag <= 21'h0;
      queue_20_set <= 9'h0;
      queue_20_vaddr <= 33'h0;
      queue_20_needT <= 1'h0;
      queue_20_source <= 7'h0;
      queue_20_pfSource <= 4'h0;
      queue_21_tag <= 21'h0;
      queue_21_set <= 9'h0;
      queue_21_vaddr <= 33'h0;
      queue_21_needT <= 1'h0;
      queue_21_source <= 7'h0;
      queue_21_pfSource <= 4'h0;
      queue_22_tag <= 21'h0;
      queue_22_set <= 9'h0;
      queue_22_vaddr <= 33'h0;
      queue_22_needT <= 1'h0;
      queue_22_source <= 7'h0;
      queue_22_pfSource <= 4'h0;
      queue_23_tag <= 21'h0;
      queue_23_set <= 9'h0;
      queue_23_vaddr <= 33'h0;
      queue_23_needT <= 1'h0;
      queue_23_source <= 7'h0;
      queue_23_pfSource <= 4'h0;
      queue_24_tag <= 21'h0;
      queue_24_set <= 9'h0;
      queue_24_vaddr <= 33'h0;
      queue_24_needT <= 1'h0;
      queue_24_source <= 7'h0;
      queue_24_pfSource <= 4'h0;
      queue_25_tag <= 21'h0;
      queue_25_set <= 9'h0;
      queue_25_vaddr <= 33'h0;
      queue_25_needT <= 1'h0;
      queue_25_source <= 7'h0;
      queue_25_pfSource <= 4'h0;
      queue_26_tag <= 21'h0;
      queue_26_set <= 9'h0;
      queue_26_vaddr <= 33'h0;
      queue_26_needT <= 1'h0;
      queue_26_source <= 7'h0;
      queue_26_pfSource <= 4'h0;
      queue_27_tag <= 21'h0;
      queue_27_set <= 9'h0;
      queue_27_vaddr <= 33'h0;
      queue_27_needT <= 1'h0;
      queue_27_source <= 7'h0;
      queue_27_pfSource <= 4'h0;
      queue_28_tag <= 21'h0;
      queue_28_set <= 9'h0;
      queue_28_vaddr <= 33'h0;
      queue_28_needT <= 1'h0;
      queue_28_source <= 7'h0;
      queue_28_pfSource <= 4'h0;
      queue_29_tag <= 21'h0;
      queue_29_set <= 9'h0;
      queue_29_vaddr <= 33'h0;
      queue_29_needT <= 1'h0;
      queue_29_source <= 7'h0;
      queue_29_pfSource <= 4'h0;
      queue_30_tag <= 21'h0;
      queue_30_set <= 9'h0;
      queue_30_vaddr <= 33'h0;
      queue_30_needT <= 1'h0;
      queue_30_source <= 7'h0;
      queue_30_pfSource <= 4'h0;
      queue_31_tag <= 21'h0;
      queue_31_set <= 9'h0;
      queue_31_vaddr <= 33'h0;
      queue_31_needT <= 1'h0;
      queue_31_source <= 7'h0;
      queue_31_pfSource <= 4'h0;
      valids_31 <= 1'h0;
      head <= 5'h0;
      tail <= 5'h0;
    end
    else begin
      if (io_enq_valid & tail == 5'h0) begin
        queue_0_tag <= io_enq_bits_tag;
        queue_0_set <= io_enq_bits_set;
        queue_0_vaddr <= io_enq_bits_vaddr;
        queue_0_needT <= io_enq_bits_needT;
        queue_0_source <= io_enq_bits_source;
        queue_0_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h1) begin
        queue_1_tag <= io_enq_bits_tag;
        queue_1_set <= io_enq_bits_set;
        queue_1_vaddr <= io_enq_bits_vaddr;
        queue_1_needT <= io_enq_bits_needT;
        queue_1_source <= io_enq_bits_source;
        queue_1_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h2) begin
        queue_2_tag <= io_enq_bits_tag;
        queue_2_set <= io_enq_bits_set;
        queue_2_vaddr <= io_enq_bits_vaddr;
        queue_2_needT <= io_enq_bits_needT;
        queue_2_source <= io_enq_bits_source;
        queue_2_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h3) begin
        queue_3_tag <= io_enq_bits_tag;
        queue_3_set <= io_enq_bits_set;
        queue_3_vaddr <= io_enq_bits_vaddr;
        queue_3_needT <= io_enq_bits_needT;
        queue_3_source <= io_enq_bits_source;
        queue_3_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h4) begin
        queue_4_tag <= io_enq_bits_tag;
        queue_4_set <= io_enq_bits_set;
        queue_4_vaddr <= io_enq_bits_vaddr;
        queue_4_needT <= io_enq_bits_needT;
        queue_4_source <= io_enq_bits_source;
        queue_4_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h5) begin
        queue_5_tag <= io_enq_bits_tag;
        queue_5_set <= io_enq_bits_set;
        queue_5_vaddr <= io_enq_bits_vaddr;
        queue_5_needT <= io_enq_bits_needT;
        queue_5_source <= io_enq_bits_source;
        queue_5_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h6) begin
        queue_6_tag <= io_enq_bits_tag;
        queue_6_set <= io_enq_bits_set;
        queue_6_vaddr <= io_enq_bits_vaddr;
        queue_6_needT <= io_enq_bits_needT;
        queue_6_source <= io_enq_bits_source;
        queue_6_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h7) begin
        queue_7_tag <= io_enq_bits_tag;
        queue_7_set <= io_enq_bits_set;
        queue_7_vaddr <= io_enq_bits_vaddr;
        queue_7_needT <= io_enq_bits_needT;
        queue_7_source <= io_enq_bits_source;
        queue_7_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h8) begin
        queue_8_tag <= io_enq_bits_tag;
        queue_8_set <= io_enq_bits_set;
        queue_8_vaddr <= io_enq_bits_vaddr;
        queue_8_needT <= io_enq_bits_needT;
        queue_8_source <= io_enq_bits_source;
        queue_8_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h9) begin
        queue_9_tag <= io_enq_bits_tag;
        queue_9_set <= io_enq_bits_set;
        queue_9_vaddr <= io_enq_bits_vaddr;
        queue_9_needT <= io_enq_bits_needT;
        queue_9_source <= io_enq_bits_source;
        queue_9_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'hA) begin
        queue_10_tag <= io_enq_bits_tag;
        queue_10_set <= io_enq_bits_set;
        queue_10_vaddr <= io_enq_bits_vaddr;
        queue_10_needT <= io_enq_bits_needT;
        queue_10_source <= io_enq_bits_source;
        queue_10_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'hB) begin
        queue_11_tag <= io_enq_bits_tag;
        queue_11_set <= io_enq_bits_set;
        queue_11_vaddr <= io_enq_bits_vaddr;
        queue_11_needT <= io_enq_bits_needT;
        queue_11_source <= io_enq_bits_source;
        queue_11_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'hC) begin
        queue_12_tag <= io_enq_bits_tag;
        queue_12_set <= io_enq_bits_set;
        queue_12_vaddr <= io_enq_bits_vaddr;
        queue_12_needT <= io_enq_bits_needT;
        queue_12_source <= io_enq_bits_source;
        queue_12_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'hD) begin
        queue_13_tag <= io_enq_bits_tag;
        queue_13_set <= io_enq_bits_set;
        queue_13_vaddr <= io_enq_bits_vaddr;
        queue_13_needT <= io_enq_bits_needT;
        queue_13_source <= io_enq_bits_source;
        queue_13_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'hE) begin
        queue_14_tag <= io_enq_bits_tag;
        queue_14_set <= io_enq_bits_set;
        queue_14_vaddr <= io_enq_bits_vaddr;
        queue_14_needT <= io_enq_bits_needT;
        queue_14_source <= io_enq_bits_source;
        queue_14_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'hF) begin
        queue_15_tag <= io_enq_bits_tag;
        queue_15_set <= io_enq_bits_set;
        queue_15_vaddr <= io_enq_bits_vaddr;
        queue_15_needT <= io_enq_bits_needT;
        queue_15_source <= io_enq_bits_source;
        queue_15_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h10) begin
        queue_16_tag <= io_enq_bits_tag;
        queue_16_set <= io_enq_bits_set;
        queue_16_vaddr <= io_enq_bits_vaddr;
        queue_16_needT <= io_enq_bits_needT;
        queue_16_source <= io_enq_bits_source;
        queue_16_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h11) begin
        queue_17_tag <= io_enq_bits_tag;
        queue_17_set <= io_enq_bits_set;
        queue_17_vaddr <= io_enq_bits_vaddr;
        queue_17_needT <= io_enq_bits_needT;
        queue_17_source <= io_enq_bits_source;
        queue_17_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h12) begin
        queue_18_tag <= io_enq_bits_tag;
        queue_18_set <= io_enq_bits_set;
        queue_18_vaddr <= io_enq_bits_vaddr;
        queue_18_needT <= io_enq_bits_needT;
        queue_18_source <= io_enq_bits_source;
        queue_18_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h13) begin
        queue_19_tag <= io_enq_bits_tag;
        queue_19_set <= io_enq_bits_set;
        queue_19_vaddr <= io_enq_bits_vaddr;
        queue_19_needT <= io_enq_bits_needT;
        queue_19_source <= io_enq_bits_source;
        queue_19_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h14) begin
        queue_20_tag <= io_enq_bits_tag;
        queue_20_set <= io_enq_bits_set;
        queue_20_vaddr <= io_enq_bits_vaddr;
        queue_20_needT <= io_enq_bits_needT;
        queue_20_source <= io_enq_bits_source;
        queue_20_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h15) begin
        queue_21_tag <= io_enq_bits_tag;
        queue_21_set <= io_enq_bits_set;
        queue_21_vaddr <= io_enq_bits_vaddr;
        queue_21_needT <= io_enq_bits_needT;
        queue_21_source <= io_enq_bits_source;
        queue_21_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h16) begin
        queue_22_tag <= io_enq_bits_tag;
        queue_22_set <= io_enq_bits_set;
        queue_22_vaddr <= io_enq_bits_vaddr;
        queue_22_needT <= io_enq_bits_needT;
        queue_22_source <= io_enq_bits_source;
        queue_22_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h17) begin
        queue_23_tag <= io_enq_bits_tag;
        queue_23_set <= io_enq_bits_set;
        queue_23_vaddr <= io_enq_bits_vaddr;
        queue_23_needT <= io_enq_bits_needT;
        queue_23_source <= io_enq_bits_source;
        queue_23_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h18) begin
        queue_24_tag <= io_enq_bits_tag;
        queue_24_set <= io_enq_bits_set;
        queue_24_vaddr <= io_enq_bits_vaddr;
        queue_24_needT <= io_enq_bits_needT;
        queue_24_source <= io_enq_bits_source;
        queue_24_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h19) begin
        queue_25_tag <= io_enq_bits_tag;
        queue_25_set <= io_enq_bits_set;
        queue_25_vaddr <= io_enq_bits_vaddr;
        queue_25_needT <= io_enq_bits_needT;
        queue_25_source <= io_enq_bits_source;
        queue_25_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h1A) begin
        queue_26_tag <= io_enq_bits_tag;
        queue_26_set <= io_enq_bits_set;
        queue_26_vaddr <= io_enq_bits_vaddr;
        queue_26_needT <= io_enq_bits_needT;
        queue_26_source <= io_enq_bits_source;
        queue_26_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h1B) begin
        queue_27_tag <= io_enq_bits_tag;
        queue_27_set <= io_enq_bits_set;
        queue_27_vaddr <= io_enq_bits_vaddr;
        queue_27_needT <= io_enq_bits_needT;
        queue_27_source <= io_enq_bits_source;
        queue_27_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h1C) begin
        queue_28_tag <= io_enq_bits_tag;
        queue_28_set <= io_enq_bits_set;
        queue_28_vaddr <= io_enq_bits_vaddr;
        queue_28_needT <= io_enq_bits_needT;
        queue_28_source <= io_enq_bits_source;
        queue_28_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h1D) begin
        queue_29_tag <= io_enq_bits_tag;
        queue_29_set <= io_enq_bits_set;
        queue_29_vaddr <= io_enq_bits_vaddr;
        queue_29_needT <= io_enq_bits_needT;
        queue_29_source <= io_enq_bits_source;
        queue_29_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & tail == 5'h1E) begin
        queue_30_tag <= io_enq_bits_tag;
        queue_30_set <= io_enq_bits_set;
        queue_30_vaddr <= io_enq_bits_vaddr;
        queue_30_needT <= io_enq_bits_needT;
        queue_30_source <= io_enq_bits_source;
        queue_30_pfSource <= io_enq_bits_pfSource;
      end
      if (io_enq_valid & (&tail)) begin
        queue_31_tag <= io_enq_bits_tag;
        queue_31_set <= io_enq_bits_set;
        queue_31_vaddr <= io_enq_bits_vaddr;
        queue_31_needT <= io_enq_bits_needT;
        queue_31_source <= io_enq_bits_source;
        queue_31_pfSource <= io_enq_bits_pfSource;
        valids_31 <= ~empty | ~io_deq_ready;
      end
      else
        valids_31 <= ~(_GEN_5 & (&head)) & valids_31;
      if (io_enq_valid & _full_T & valids_31 & ~io_deq_ready)
        head <= 5'(head + 5'h1);
      else if (_GEN_5)
        head <= 5'(head + 5'h1);
      if (io_enq_valid)
        tail <= 5'(tail + {4'h0, ~empty | ~io_deq_ready});
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:76];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [6:0] i = 7'h0; i < 7'h4D; i += 7'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        queue_0_tag = _RANDOM[7'h0][20:0];
        queue_0_set = _RANDOM[7'h0][29:21];
        queue_0_vaddr = {_RANDOM[7'h0][31:30], _RANDOM[7'h1][30:0]};
        queue_0_needT = _RANDOM[7'h1][31];
        queue_0_source = _RANDOM[7'h2][6:0];
        queue_0_pfSource = _RANDOM[7'h2][10:7];
        queue_1_tag = _RANDOM[7'h2][31:11];
        queue_1_set = _RANDOM[7'h3][8:0];
        queue_1_vaddr = {_RANDOM[7'h3][31:9], _RANDOM[7'h4][9:0]};
        queue_1_needT = _RANDOM[7'h4][10];
        queue_1_source = _RANDOM[7'h4][17:11];
        queue_1_pfSource = _RANDOM[7'h4][21:18];
        queue_2_tag = {_RANDOM[7'h4][31:22], _RANDOM[7'h5][10:0]};
        queue_2_set = _RANDOM[7'h5][19:11];
        queue_2_vaddr = {_RANDOM[7'h5][31:20], _RANDOM[7'h6][20:0]};
        queue_2_needT = _RANDOM[7'h6][21];
        queue_2_source = _RANDOM[7'h6][28:22];
        queue_2_pfSource = {_RANDOM[7'h6][31:29], _RANDOM[7'h7][0]};
        queue_3_tag = _RANDOM[7'h7][21:1];
        queue_3_set = _RANDOM[7'h7][30:22];
        queue_3_vaddr = {_RANDOM[7'h7][31], _RANDOM[7'h8]};
        queue_3_needT = _RANDOM[7'h9][0];
        queue_3_source = _RANDOM[7'h9][7:1];
        queue_3_pfSource = _RANDOM[7'h9][11:8];
        queue_4_tag = {_RANDOM[7'h9][31:12], _RANDOM[7'hA][0]};
        queue_4_set = _RANDOM[7'hA][9:1];
        queue_4_vaddr = {_RANDOM[7'hA][31:10], _RANDOM[7'hB][10:0]};
        queue_4_needT = _RANDOM[7'hB][11];
        queue_4_source = _RANDOM[7'hB][18:12];
        queue_4_pfSource = _RANDOM[7'hB][22:19];
        queue_5_tag = {_RANDOM[7'hB][31:23], _RANDOM[7'hC][11:0]};
        queue_5_set = _RANDOM[7'hC][20:12];
        queue_5_vaddr = {_RANDOM[7'hC][31:21], _RANDOM[7'hD][21:0]};
        queue_5_needT = _RANDOM[7'hD][22];
        queue_5_source = _RANDOM[7'hD][29:23];
        queue_5_pfSource = {_RANDOM[7'hD][31:30], _RANDOM[7'hE][1:0]};
        queue_6_tag = _RANDOM[7'hE][22:2];
        queue_6_set = _RANDOM[7'hE][31:23];
        queue_6_vaddr = {_RANDOM[7'hF], _RANDOM[7'h10][0]};
        queue_6_needT = _RANDOM[7'h10][1];
        queue_6_source = _RANDOM[7'h10][8:2];
        queue_6_pfSource = _RANDOM[7'h10][12:9];
        queue_7_tag = {_RANDOM[7'h10][31:13], _RANDOM[7'h11][1:0]};
        queue_7_set = _RANDOM[7'h11][10:2];
        queue_7_vaddr = {_RANDOM[7'h11][31:11], _RANDOM[7'h12][11:0]};
        queue_7_needT = _RANDOM[7'h12][12];
        queue_7_source = _RANDOM[7'h12][19:13];
        queue_7_pfSource = _RANDOM[7'h12][23:20];
        queue_8_tag = {_RANDOM[7'h12][31:24], _RANDOM[7'h13][12:0]};
        queue_8_set = _RANDOM[7'h13][21:13];
        queue_8_vaddr = {_RANDOM[7'h13][31:22], _RANDOM[7'h14][22:0]};
        queue_8_needT = _RANDOM[7'h14][23];
        queue_8_source = _RANDOM[7'h14][30:24];
        queue_8_pfSource = {_RANDOM[7'h14][31], _RANDOM[7'h15][2:0]};
        queue_9_tag = _RANDOM[7'h15][23:3];
        queue_9_set = {_RANDOM[7'h15][31:24], _RANDOM[7'h16][0]};
        queue_9_vaddr = {_RANDOM[7'h16][31:1], _RANDOM[7'h17][1:0]};
        queue_9_needT = _RANDOM[7'h17][2];
        queue_9_source = _RANDOM[7'h17][9:3];
        queue_9_pfSource = _RANDOM[7'h17][13:10];
        queue_10_tag = {_RANDOM[7'h17][31:14], _RANDOM[7'h18][2:0]};
        queue_10_set = _RANDOM[7'h18][11:3];
        queue_10_vaddr = {_RANDOM[7'h18][31:12], _RANDOM[7'h19][12:0]};
        queue_10_needT = _RANDOM[7'h19][13];
        queue_10_source = _RANDOM[7'h19][20:14];
        queue_10_pfSource = _RANDOM[7'h19][24:21];
        queue_11_tag = {_RANDOM[7'h19][31:25], _RANDOM[7'h1A][13:0]};
        queue_11_set = _RANDOM[7'h1A][22:14];
        queue_11_vaddr = {_RANDOM[7'h1A][31:23], _RANDOM[7'h1B][23:0]};
        queue_11_needT = _RANDOM[7'h1B][24];
        queue_11_source = _RANDOM[7'h1B][31:25];
        queue_11_pfSource = _RANDOM[7'h1C][3:0];
        queue_12_tag = _RANDOM[7'h1C][24:4];
        queue_12_set = {_RANDOM[7'h1C][31:25], _RANDOM[7'h1D][1:0]};
        queue_12_vaddr = {_RANDOM[7'h1D][31:2], _RANDOM[7'h1E][2:0]};
        queue_12_needT = _RANDOM[7'h1E][3];
        queue_12_source = _RANDOM[7'h1E][10:4];
        queue_12_pfSource = _RANDOM[7'h1E][14:11];
        queue_13_tag = {_RANDOM[7'h1E][31:15], _RANDOM[7'h1F][3:0]};
        queue_13_set = _RANDOM[7'h1F][12:4];
        queue_13_vaddr = {_RANDOM[7'h1F][31:13], _RANDOM[7'h20][13:0]};
        queue_13_needT = _RANDOM[7'h20][14];
        queue_13_source = _RANDOM[7'h20][21:15];
        queue_13_pfSource = _RANDOM[7'h20][25:22];
        queue_14_tag = {_RANDOM[7'h20][31:26], _RANDOM[7'h21][14:0]};
        queue_14_set = _RANDOM[7'h21][23:15];
        queue_14_vaddr = {_RANDOM[7'h21][31:24], _RANDOM[7'h22][24:0]};
        queue_14_needT = _RANDOM[7'h22][25];
        queue_14_source = {_RANDOM[7'h22][31:26], _RANDOM[7'h23][0]};
        queue_14_pfSource = _RANDOM[7'h23][4:1];
        queue_15_tag = _RANDOM[7'h23][25:5];
        queue_15_set = {_RANDOM[7'h23][31:26], _RANDOM[7'h24][2:0]};
        queue_15_vaddr = {_RANDOM[7'h24][31:3], _RANDOM[7'h25][3:0]};
        queue_15_needT = _RANDOM[7'h25][4];
        queue_15_source = _RANDOM[7'h25][11:5];
        queue_15_pfSource = _RANDOM[7'h25][15:12];
        queue_16_tag = {_RANDOM[7'h25][31:16], _RANDOM[7'h26][4:0]};
        queue_16_set = _RANDOM[7'h26][13:5];
        queue_16_vaddr = {_RANDOM[7'h26][31:14], _RANDOM[7'h27][14:0]};
        queue_16_needT = _RANDOM[7'h27][15];
        queue_16_source = _RANDOM[7'h27][22:16];
        queue_16_pfSource = _RANDOM[7'h27][26:23];
        queue_17_tag = {_RANDOM[7'h27][31:27], _RANDOM[7'h28][15:0]};
        queue_17_set = _RANDOM[7'h28][24:16];
        queue_17_vaddr = {_RANDOM[7'h28][31:25], _RANDOM[7'h29][25:0]};
        queue_17_needT = _RANDOM[7'h29][26];
        queue_17_source = {_RANDOM[7'h29][31:27], _RANDOM[7'h2A][1:0]};
        queue_17_pfSource = _RANDOM[7'h2A][5:2];
        queue_18_tag = _RANDOM[7'h2A][26:6];
        queue_18_set = {_RANDOM[7'h2A][31:27], _RANDOM[7'h2B][3:0]};
        queue_18_vaddr = {_RANDOM[7'h2B][31:4], _RANDOM[7'h2C][4:0]};
        queue_18_needT = _RANDOM[7'h2C][5];
        queue_18_source = _RANDOM[7'h2C][12:6];
        queue_18_pfSource = _RANDOM[7'h2C][16:13];
        queue_19_tag = {_RANDOM[7'h2C][31:17], _RANDOM[7'h2D][5:0]};
        queue_19_set = _RANDOM[7'h2D][14:6];
        queue_19_vaddr = {_RANDOM[7'h2D][31:15], _RANDOM[7'h2E][15:0]};
        queue_19_needT = _RANDOM[7'h2E][16];
        queue_19_source = _RANDOM[7'h2E][23:17];
        queue_19_pfSource = _RANDOM[7'h2E][27:24];
        queue_20_tag = {_RANDOM[7'h2E][31:28], _RANDOM[7'h2F][16:0]};
        queue_20_set = _RANDOM[7'h2F][25:17];
        queue_20_vaddr = {_RANDOM[7'h2F][31:26], _RANDOM[7'h30][26:0]};
        queue_20_needT = _RANDOM[7'h30][27];
        queue_20_source = {_RANDOM[7'h30][31:28], _RANDOM[7'h31][2:0]};
        queue_20_pfSource = _RANDOM[7'h31][6:3];
        queue_21_tag = _RANDOM[7'h31][27:7];
        queue_21_set = {_RANDOM[7'h31][31:28], _RANDOM[7'h32][4:0]};
        queue_21_vaddr = {_RANDOM[7'h32][31:5], _RANDOM[7'h33][5:0]};
        queue_21_needT = _RANDOM[7'h33][6];
        queue_21_source = _RANDOM[7'h33][13:7];
        queue_21_pfSource = _RANDOM[7'h33][17:14];
        queue_22_tag = {_RANDOM[7'h33][31:18], _RANDOM[7'h34][6:0]};
        queue_22_set = _RANDOM[7'h34][15:7];
        queue_22_vaddr = {_RANDOM[7'h34][31:16], _RANDOM[7'h35][16:0]};
        queue_22_needT = _RANDOM[7'h35][17];
        queue_22_source = _RANDOM[7'h35][24:18];
        queue_22_pfSource = _RANDOM[7'h35][28:25];
        queue_23_tag = {_RANDOM[7'h35][31:29], _RANDOM[7'h36][17:0]};
        queue_23_set = _RANDOM[7'h36][26:18];
        queue_23_vaddr = {_RANDOM[7'h36][31:27], _RANDOM[7'h37][27:0]};
        queue_23_needT = _RANDOM[7'h37][28];
        queue_23_source = {_RANDOM[7'h37][31:29], _RANDOM[7'h38][3:0]};
        queue_23_pfSource = _RANDOM[7'h38][7:4];
        queue_24_tag = _RANDOM[7'h38][28:8];
        queue_24_set = {_RANDOM[7'h38][31:29], _RANDOM[7'h39][5:0]};
        queue_24_vaddr = {_RANDOM[7'h39][31:6], _RANDOM[7'h3A][6:0]};
        queue_24_needT = _RANDOM[7'h3A][7];
        queue_24_source = _RANDOM[7'h3A][14:8];
        queue_24_pfSource = _RANDOM[7'h3A][18:15];
        queue_25_tag = {_RANDOM[7'h3A][31:19], _RANDOM[7'h3B][7:0]};
        queue_25_set = _RANDOM[7'h3B][16:8];
        queue_25_vaddr = {_RANDOM[7'h3B][31:17], _RANDOM[7'h3C][17:0]};
        queue_25_needT = _RANDOM[7'h3C][18];
        queue_25_source = _RANDOM[7'h3C][25:19];
        queue_25_pfSource = _RANDOM[7'h3C][29:26];
        queue_26_tag = {_RANDOM[7'h3C][31:30], _RANDOM[7'h3D][18:0]};
        queue_26_set = _RANDOM[7'h3D][27:19];
        queue_26_vaddr = {_RANDOM[7'h3D][31:28], _RANDOM[7'h3E][28:0]};
        queue_26_needT = _RANDOM[7'h3E][29];
        queue_26_source = {_RANDOM[7'h3E][31:30], _RANDOM[7'h3F][4:0]};
        queue_26_pfSource = _RANDOM[7'h3F][8:5];
        queue_27_tag = _RANDOM[7'h3F][29:9];
        queue_27_set = {_RANDOM[7'h3F][31:30], _RANDOM[7'h40][6:0]};
        queue_27_vaddr = {_RANDOM[7'h40][31:7], _RANDOM[7'h41][7:0]};
        queue_27_needT = _RANDOM[7'h41][8];
        queue_27_source = _RANDOM[7'h41][15:9];
        queue_27_pfSource = _RANDOM[7'h41][19:16];
        queue_28_tag = {_RANDOM[7'h41][31:20], _RANDOM[7'h42][8:0]};
        queue_28_set = _RANDOM[7'h42][17:9];
        queue_28_vaddr = {_RANDOM[7'h42][31:18], _RANDOM[7'h43][18:0]};
        queue_28_needT = _RANDOM[7'h43][19];
        queue_28_source = _RANDOM[7'h43][26:20];
        queue_28_pfSource = _RANDOM[7'h43][30:27];
        queue_29_tag = {_RANDOM[7'h43][31], _RANDOM[7'h44][19:0]};
        queue_29_set = _RANDOM[7'h44][28:20];
        queue_29_vaddr = {_RANDOM[7'h44][31:29], _RANDOM[7'h45][29:0]};
        queue_29_needT = _RANDOM[7'h45][30];
        queue_29_source = {_RANDOM[7'h45][31], _RANDOM[7'h46][5:0]};
        queue_29_pfSource = _RANDOM[7'h46][9:6];
        queue_30_tag = _RANDOM[7'h46][30:10];
        queue_30_set = {_RANDOM[7'h46][31], _RANDOM[7'h47][7:0]};
        queue_30_vaddr = {_RANDOM[7'h47][31:8], _RANDOM[7'h48][8:0]};
        queue_30_needT = _RANDOM[7'h48][9];
        queue_30_source = _RANDOM[7'h48][16:10];
        queue_30_pfSource = _RANDOM[7'h48][20:17];
        queue_31_tag = {_RANDOM[7'h48][31:21], _RANDOM[7'h49][9:0]};
        queue_31_set = _RANDOM[7'h49][18:10];
        queue_31_vaddr = {_RANDOM[7'h49][31:19], _RANDOM[7'h4A][19:0]};
        queue_31_needT = _RANDOM[7'h4A][20];
        queue_31_source = _RANDOM[7'h4A][27:21];
        queue_31_pfSource = _RANDOM[7'h4A][31:28];
        valids_31 = _RANDOM[7'h4B][31];
        head = _RANDOM[7'h4C][4:0];
        tail = _RANDOM[7'h4C][9:5];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        queue_0_tag = 21'h0;
        queue_0_set = 9'h0;
        queue_0_vaddr = 33'h0;
        queue_0_needT = 1'h0;
        queue_0_source = 7'h0;
        queue_0_pfSource = 4'h0;
        queue_1_tag = 21'h0;
        queue_1_set = 9'h0;
        queue_1_vaddr = 33'h0;
        queue_1_needT = 1'h0;
        queue_1_source = 7'h0;
        queue_1_pfSource = 4'h0;
        queue_2_tag = 21'h0;
        queue_2_set = 9'h0;
        queue_2_vaddr = 33'h0;
        queue_2_needT = 1'h0;
        queue_2_source = 7'h0;
        queue_2_pfSource = 4'h0;
        queue_3_tag = 21'h0;
        queue_3_set = 9'h0;
        queue_3_vaddr = 33'h0;
        queue_3_needT = 1'h0;
        queue_3_source = 7'h0;
        queue_3_pfSource = 4'h0;
        queue_4_tag = 21'h0;
        queue_4_set = 9'h0;
        queue_4_vaddr = 33'h0;
        queue_4_needT = 1'h0;
        queue_4_source = 7'h0;
        queue_4_pfSource = 4'h0;
        queue_5_tag = 21'h0;
        queue_5_set = 9'h0;
        queue_5_vaddr = 33'h0;
        queue_5_needT = 1'h0;
        queue_5_source = 7'h0;
        queue_5_pfSource = 4'h0;
        queue_6_tag = 21'h0;
        queue_6_set = 9'h0;
        queue_6_vaddr = 33'h0;
        queue_6_needT = 1'h0;
        queue_6_source = 7'h0;
        queue_6_pfSource = 4'h0;
        queue_7_tag = 21'h0;
        queue_7_set = 9'h0;
        queue_7_vaddr = 33'h0;
        queue_7_needT = 1'h0;
        queue_7_source = 7'h0;
        queue_7_pfSource = 4'h0;
        queue_8_tag = 21'h0;
        queue_8_set = 9'h0;
        queue_8_vaddr = 33'h0;
        queue_8_needT = 1'h0;
        queue_8_source = 7'h0;
        queue_8_pfSource = 4'h0;
        queue_9_tag = 21'h0;
        queue_9_set = 9'h0;
        queue_9_vaddr = 33'h0;
        queue_9_needT = 1'h0;
        queue_9_source = 7'h0;
        queue_9_pfSource = 4'h0;
        queue_10_tag = 21'h0;
        queue_10_set = 9'h0;
        queue_10_vaddr = 33'h0;
        queue_10_needT = 1'h0;
        queue_10_source = 7'h0;
        queue_10_pfSource = 4'h0;
        queue_11_tag = 21'h0;
        queue_11_set = 9'h0;
        queue_11_vaddr = 33'h0;
        queue_11_needT = 1'h0;
        queue_11_source = 7'h0;
        queue_11_pfSource = 4'h0;
        queue_12_tag = 21'h0;
        queue_12_set = 9'h0;
        queue_12_vaddr = 33'h0;
        queue_12_needT = 1'h0;
        queue_12_source = 7'h0;
        queue_12_pfSource = 4'h0;
        queue_13_tag = 21'h0;
        queue_13_set = 9'h0;
        queue_13_vaddr = 33'h0;
        queue_13_needT = 1'h0;
        queue_13_source = 7'h0;
        queue_13_pfSource = 4'h0;
        queue_14_tag = 21'h0;
        queue_14_set = 9'h0;
        queue_14_vaddr = 33'h0;
        queue_14_needT = 1'h0;
        queue_14_source = 7'h0;
        queue_14_pfSource = 4'h0;
        queue_15_tag = 21'h0;
        queue_15_set = 9'h0;
        queue_15_vaddr = 33'h0;
        queue_15_needT = 1'h0;
        queue_15_source = 7'h0;
        queue_15_pfSource = 4'h0;
        queue_16_tag = 21'h0;
        queue_16_set = 9'h0;
        queue_16_vaddr = 33'h0;
        queue_16_needT = 1'h0;
        queue_16_source = 7'h0;
        queue_16_pfSource = 4'h0;
        queue_17_tag = 21'h0;
        queue_17_set = 9'h0;
        queue_17_vaddr = 33'h0;
        queue_17_needT = 1'h0;
        queue_17_source = 7'h0;
        queue_17_pfSource = 4'h0;
        queue_18_tag = 21'h0;
        queue_18_set = 9'h0;
        queue_18_vaddr = 33'h0;
        queue_18_needT = 1'h0;
        queue_18_source = 7'h0;
        queue_18_pfSource = 4'h0;
        queue_19_tag = 21'h0;
        queue_19_set = 9'h0;
        queue_19_vaddr = 33'h0;
        queue_19_needT = 1'h0;
        queue_19_source = 7'h0;
        queue_19_pfSource = 4'h0;
        queue_20_tag = 21'h0;
        queue_20_set = 9'h0;
        queue_20_vaddr = 33'h0;
        queue_20_needT = 1'h0;
        queue_20_source = 7'h0;
        queue_20_pfSource = 4'h0;
        queue_21_tag = 21'h0;
        queue_21_set = 9'h0;
        queue_21_vaddr = 33'h0;
        queue_21_needT = 1'h0;
        queue_21_source = 7'h0;
        queue_21_pfSource = 4'h0;
        queue_22_tag = 21'h0;
        queue_22_set = 9'h0;
        queue_22_vaddr = 33'h0;
        queue_22_needT = 1'h0;
        queue_22_source = 7'h0;
        queue_22_pfSource = 4'h0;
        queue_23_tag = 21'h0;
        queue_23_set = 9'h0;
        queue_23_vaddr = 33'h0;
        queue_23_needT = 1'h0;
        queue_23_source = 7'h0;
        queue_23_pfSource = 4'h0;
        queue_24_tag = 21'h0;
        queue_24_set = 9'h0;
        queue_24_vaddr = 33'h0;
        queue_24_needT = 1'h0;
        queue_24_source = 7'h0;
        queue_24_pfSource = 4'h0;
        queue_25_tag = 21'h0;
        queue_25_set = 9'h0;
        queue_25_vaddr = 33'h0;
        queue_25_needT = 1'h0;
        queue_25_source = 7'h0;
        queue_25_pfSource = 4'h0;
        queue_26_tag = 21'h0;
        queue_26_set = 9'h0;
        queue_26_vaddr = 33'h0;
        queue_26_needT = 1'h0;
        queue_26_source = 7'h0;
        queue_26_pfSource = 4'h0;
        queue_27_tag = 21'h0;
        queue_27_set = 9'h0;
        queue_27_vaddr = 33'h0;
        queue_27_needT = 1'h0;
        queue_27_source = 7'h0;
        queue_27_pfSource = 4'h0;
        queue_28_tag = 21'h0;
        queue_28_set = 9'h0;
        queue_28_vaddr = 33'h0;
        queue_28_needT = 1'h0;
        queue_28_source = 7'h0;
        queue_28_pfSource = 4'h0;
        queue_29_tag = 21'h0;
        queue_29_set = 9'h0;
        queue_29_vaddr = 33'h0;
        queue_29_needT = 1'h0;
        queue_29_source = 7'h0;
        queue_29_pfSource = 4'h0;
        queue_30_tag = 21'h0;
        queue_30_set = 9'h0;
        queue_30_vaddr = 33'h0;
        queue_30_needT = 1'h0;
        queue_30_source = 7'h0;
        queue_30_pfSource = 4'h0;
        queue_31_tag = 21'h0;
        queue_31_set = 9'h0;
        queue_31_vaddr = 33'h0;
        queue_31_needT = 1'h0;
        queue_31_source = 7'h0;
        queue_31_pfSource = 4'h0;
        valids_31 = 1'h0;
        head = 5'h0;
        tail = 5'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_deq_valid = ~empty | io_enq_valid;
  assign io_deq_bits_tag = empty ? io_enq_bits_tag : _GEN[head];
  assign io_deq_bits_set = empty ? io_enq_bits_set : _GEN_0[head];
  assign io_deq_bits_vaddr = empty ? io_enq_bits_vaddr : _GEN_1[head];
  assign io_deq_bits_needT = empty ? io_enq_bits_needT : _GEN_2[head];
  assign io_deq_bits_source = empty ? io_enq_bits_source : _GEN_3[head];
  assign io_deq_bits_pfSource = empty ? io_enq_bits_pfSource : _GEN_4[head];
endmodule

