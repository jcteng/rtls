// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ITTage(
  input          clock,
  input          reset,
  input  [35:0]  io_reset_vector,
  input  [40:0]  io_in_bits_s0_pc_0,
  input  [40:0]  io_in_bits_s0_pc_1,
  input  [40:0]  io_in_bits_s0_pc_2,
  input  [40:0]  io_in_bits_s0_pc_3,
  input  [7:0]   io_in_bits_s1_folded_hist_3_hist_14_folded_hist,
  input  [8:0]   io_in_bits_s1_folded_hist_3_hist_13_folded_hist,
  input  [3:0]   io_in_bits_s1_folded_hist_3_hist_12_folded_hist,
  input  [8:0]   io_in_bits_s1_folded_hist_3_hist_10_folded_hist,
  input  [8:0]   io_in_bits_s1_folded_hist_3_hist_6_folded_hist,
  input  [7:0]   io_in_bits_s1_folded_hist_3_hist_4_folded_hist,
  input  [7:0]   io_in_bits_s1_folded_hist_3_hist_3_folded_hist,
  input  [7:0]   io_in_bits_s1_folded_hist_3_hist_2_folded_hist,
  input          io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_0_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_0_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_0_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_0_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_0_offsets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_0_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_0_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_0_hit,
  input          io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_1_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_1_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_1_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_1_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_1_offsets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_1_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_1_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_1_hit,
  input          io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_2_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_2_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_2_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_2_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_2_offsets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_2_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_jalr,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_call,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_ret,
  input          io_in_bits_resp_in_0_s2_full_pred_2_last_may_be_rvi_call,
  input          io_in_bits_resp_in_0_s2_full_pred_2_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_2_hit,
  input          io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_0,
  input          io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_3_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_3_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_3_jalr_target,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_3_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s2_full_pred_3_offsets_1,
  input  [40:0]  io_in_bits_resp_in_0_s2_full_pred_3_fallThroughAddr,
  input          io_in_bits_resp_in_0_s2_full_pred_3_fallThroughErr,
  input          io_in_bits_resp_in_0_s2_full_pred_3_is_br_sharing,
  input          io_in_bits_resp_in_0_s2_full_pred_3_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_0_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_0_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_0_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_0_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_0_multiHit,
  input          io_in_bits_resp_in_0_s3_full_pred_0_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_0_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_1_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_1_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_1_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_1_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_1_multiHit,
  input          io_in_bits_resp_in_0_s3_full_pred_1_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_1_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_2_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_2_targets_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_2_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_2_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_2_multiHit,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_jalr,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_call,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_ret,
  input          io_in_bits_resp_in_0_s3_full_pred_2_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_2_hit,
  input          io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_0,
  input          io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_1,
  input          io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_0,
  input          io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_3_targets_0,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_3_targets_1,
  input  [3:0]   io_in_bits_resp_in_0_s3_full_pred_3_offsets_0,
  input  [3:0]   io_in_bits_resp_in_0_s3_full_pred_3_offsets_1,
  input  [40:0]  io_in_bits_resp_in_0_s3_full_pred_3_fallThroughAddr,
  input          io_in_bits_resp_in_0_s3_full_pred_3_fallThroughErr,
  input          io_in_bits_resp_in_0_s3_full_pred_3_multiHit,
  input          io_in_bits_resp_in_0_s3_full_pred_3_is_br_sharing,
  input          io_in_bits_resp_in_0_s3_full_pred_3_hit,
  input          io_in_bits_resp_in_0_s1_uftbHit,
  input          io_in_bits_resp_in_0_s1_uftbHasIndirect,
  input          io_in_bits_resp_in_0_s1_ftbCloseReq,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_isCall,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_isRet,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_isJalr,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_valid,
  input  [3:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_offset,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_sharing,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_valid,
  input  [11:0]  io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_lower,
  input  [1:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_tarStat,
  input  [3:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_offset,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_sharing,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_valid,
  input  [19:0]  io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_lower,
  input  [1:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_tarStat,
  input  [3:0]   io_in_bits_resp_in_0_last_stage_ftb_entry_pftAddr,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_carry,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_last_may_be_rvi_call,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_0,
  input          io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_1,
  output         io_out_s2_full_pred_0_br_taken_mask_0,
  output         io_out_s2_full_pred_0_br_taken_mask_1,
  output         io_out_s2_full_pred_0_slot_valids_0,
  output         io_out_s2_full_pred_0_slot_valids_1,
  output [40:0]  io_out_s2_full_pred_0_targets_0,
  output [40:0]  io_out_s2_full_pred_0_targets_1,
  output [40:0]  io_out_s2_full_pred_0_jalr_target,
  output [3:0]   io_out_s2_full_pred_0_offsets_0,
  output [3:0]   io_out_s2_full_pred_0_offsets_1,
  output [40:0]  io_out_s2_full_pred_0_fallThroughAddr,
  output         io_out_s2_full_pred_0_is_br_sharing,
  output         io_out_s2_full_pred_0_hit,
  output         io_out_s2_full_pred_1_br_taken_mask_0,
  output         io_out_s2_full_pred_1_br_taken_mask_1,
  output         io_out_s2_full_pred_1_slot_valids_0,
  output         io_out_s2_full_pred_1_slot_valids_1,
  output [40:0]  io_out_s2_full_pred_1_targets_0,
  output [40:0]  io_out_s2_full_pred_1_targets_1,
  output [40:0]  io_out_s2_full_pred_1_jalr_target,
  output [3:0]   io_out_s2_full_pred_1_offsets_0,
  output [3:0]   io_out_s2_full_pred_1_offsets_1,
  output [40:0]  io_out_s2_full_pred_1_fallThroughAddr,
  output         io_out_s2_full_pred_1_is_br_sharing,
  output         io_out_s2_full_pred_1_hit,
  output         io_out_s2_full_pred_2_br_taken_mask_0,
  output         io_out_s2_full_pred_2_br_taken_mask_1,
  output         io_out_s2_full_pred_2_slot_valids_0,
  output         io_out_s2_full_pred_2_slot_valids_1,
  output [40:0]  io_out_s2_full_pred_2_targets_0,
  output [40:0]  io_out_s2_full_pred_2_targets_1,
  output [40:0]  io_out_s2_full_pred_2_jalr_target,
  output [3:0]   io_out_s2_full_pred_2_offsets_0,
  output [3:0]   io_out_s2_full_pred_2_offsets_1,
  output [40:0]  io_out_s2_full_pred_2_fallThroughAddr,
  output         io_out_s2_full_pred_2_is_jalr,
  output         io_out_s2_full_pred_2_is_call,
  output         io_out_s2_full_pred_2_is_ret,
  output         io_out_s2_full_pred_2_last_may_be_rvi_call,
  output         io_out_s2_full_pred_2_is_br_sharing,
  output         io_out_s2_full_pred_2_hit,
  output         io_out_s2_full_pred_3_br_taken_mask_0,
  output         io_out_s2_full_pred_3_br_taken_mask_1,
  output         io_out_s2_full_pred_3_slot_valids_0,
  output         io_out_s2_full_pred_3_slot_valids_1,
  output [40:0]  io_out_s2_full_pred_3_targets_0,
  output [40:0]  io_out_s2_full_pred_3_targets_1,
  output [40:0]  io_out_s2_full_pred_3_jalr_target,
  output [3:0]   io_out_s2_full_pred_3_offsets_0,
  output [3:0]   io_out_s2_full_pred_3_offsets_1,
  output [40:0]  io_out_s2_full_pred_3_fallThroughAddr,
  output         io_out_s2_full_pred_3_fallThroughErr,
  output         io_out_s2_full_pred_3_is_br_sharing,
  output         io_out_s2_full_pred_3_hit,
  output         io_out_s3_full_pred_0_br_taken_mask_0,
  output         io_out_s3_full_pred_0_br_taken_mask_1,
  output         io_out_s3_full_pred_0_slot_valids_0,
  output         io_out_s3_full_pred_0_slot_valids_1,
  output [40:0]  io_out_s3_full_pred_0_targets_0,
  output [40:0]  io_out_s3_full_pred_0_targets_1,
  output [40:0]  io_out_s3_full_pred_0_jalr_target,
  output [40:0]  io_out_s3_full_pred_0_fallThroughAddr,
  output         io_out_s3_full_pred_0_fallThroughErr,
  output         io_out_s3_full_pred_0_multiHit,
  output         io_out_s3_full_pred_0_is_br_sharing,
  output         io_out_s3_full_pred_0_hit,
  output         io_out_s3_full_pred_1_br_taken_mask_0,
  output         io_out_s3_full_pred_1_br_taken_mask_1,
  output         io_out_s3_full_pred_1_slot_valids_0,
  output         io_out_s3_full_pred_1_slot_valids_1,
  output [40:0]  io_out_s3_full_pred_1_targets_0,
  output [40:0]  io_out_s3_full_pred_1_targets_1,
  output [40:0]  io_out_s3_full_pred_1_jalr_target,
  output [40:0]  io_out_s3_full_pred_1_fallThroughAddr,
  output         io_out_s3_full_pred_1_fallThroughErr,
  output         io_out_s3_full_pred_1_multiHit,
  output         io_out_s3_full_pred_1_is_br_sharing,
  output         io_out_s3_full_pred_1_hit,
  output         io_out_s3_full_pred_2_br_taken_mask_0,
  output         io_out_s3_full_pred_2_br_taken_mask_1,
  output         io_out_s3_full_pred_2_slot_valids_0,
  output         io_out_s3_full_pred_2_slot_valids_1,
  output [40:0]  io_out_s3_full_pred_2_targets_0,
  output [40:0]  io_out_s3_full_pred_2_targets_1,
  output [40:0]  io_out_s3_full_pred_2_jalr_target,
  output [40:0]  io_out_s3_full_pred_2_fallThroughAddr,
  output         io_out_s3_full_pred_2_fallThroughErr,
  output         io_out_s3_full_pred_2_multiHit,
  output         io_out_s3_full_pred_2_is_jalr,
  output         io_out_s3_full_pred_2_is_call,
  output         io_out_s3_full_pred_2_is_ret,
  output         io_out_s3_full_pred_2_is_br_sharing,
  output         io_out_s3_full_pred_2_hit,
  output         io_out_s3_full_pred_3_br_taken_mask_0,
  output         io_out_s3_full_pred_3_br_taken_mask_1,
  output         io_out_s3_full_pred_3_slot_valids_0,
  output         io_out_s3_full_pred_3_slot_valids_1,
  output [40:0]  io_out_s3_full_pred_3_targets_0,
  output [40:0]  io_out_s3_full_pred_3_targets_1,
  output [40:0]  io_out_s3_full_pred_3_jalr_target,
  output [3:0]   io_out_s3_full_pred_3_offsets_0,
  output [3:0]   io_out_s3_full_pred_3_offsets_1,
  output [40:0]  io_out_s3_full_pred_3_fallThroughAddr,
  output         io_out_s3_full_pred_3_fallThroughErr,
  output         io_out_s3_full_pred_3_multiHit,
  output         io_out_s3_full_pred_3_is_br_sharing,
  output         io_out_s3_full_pred_3_hit,
  output [259:0] io_out_last_stage_meta,
  output         io_out_last_stage_ftb_entry_isCall,
  output         io_out_last_stage_ftb_entry_isRet,
  output         io_out_last_stage_ftb_entry_isJalr,
  output         io_out_last_stage_ftb_entry_valid,
  output [3:0]   io_out_last_stage_ftb_entry_brSlots_0_offset,
  output         io_out_last_stage_ftb_entry_brSlots_0_sharing,
  output         io_out_last_stage_ftb_entry_brSlots_0_valid,
  output [11:0]  io_out_last_stage_ftb_entry_brSlots_0_lower,
  output [1:0]   io_out_last_stage_ftb_entry_brSlots_0_tarStat,
  output [3:0]   io_out_last_stage_ftb_entry_tailSlot_offset,
  output         io_out_last_stage_ftb_entry_tailSlot_sharing,
  output         io_out_last_stage_ftb_entry_tailSlot_valid,
  output [19:0]  io_out_last_stage_ftb_entry_tailSlot_lower,
  output [1:0]   io_out_last_stage_ftb_entry_tailSlot_tarStat,
  output [3:0]   io_out_last_stage_ftb_entry_pftAddr,
  output         io_out_last_stage_ftb_entry_carry,
  output         io_out_last_stage_ftb_entry_last_may_be_rvi_call,
  output         io_out_last_stage_ftb_entry_always_taken_0,
  output         io_out_last_stage_ftb_entry_always_taken_1,
  input          io_s0_fire_0,
  input          io_s0_fire_1,
  input          io_s0_fire_2,
  input          io_s0_fire_3,
  input          io_s1_fire_0,
  input          io_s1_fire_1,
  input          io_s1_fire_2,
  input          io_s1_fire_3,
  input          io_s2_fire_0,
  input          io_s2_fire_1,
  input          io_s2_fire_2,
  input          io_s2_fire_3,
  input          io_update_valid,
  input  [40:0]  io_update_bits_pc,
  input          io_update_bits_ftb_entry_isRet,
  input          io_update_bits_ftb_entry_isJalr,
  input  [3:0]   io_update_bits_ftb_entry_tailSlot_offset,
  input          io_update_bits_ftb_entry_tailSlot_sharing,
  input          io_update_bits_ftb_entry_tailSlot_valid,
  input          io_update_bits_cfi_idx_valid,
  input  [3:0]   io_update_bits_cfi_idx_bits,
  input          io_update_bits_jmp_taken,
  input          io_update_bits_mispred_mask_2,
  input  [259:0] io_update_bits_meta,
  input  [40:0]  io_update_bits_full_target,
  input  [255:0] io_update_bits_ghist
);

  reg  [2:0]   resp_meta_allocate_bits_r;
  reg          resp_meta_allocate_valid_r;
  wire         _s2_allocLFSR_prng_io_out_0;
  wire         _s2_allocLFSR_prng_io_out_1;
  wire         _s2_allocLFSR_prng_io_out_2;
  wire         _s2_allocLFSR_prng_io_out_3;
  wire         _s2_allocLFSR_prng_io_out_4;
  wire         _tables_4_io_resp_valid;
  wire [1:0]   _tables_4_io_resp_bits_ctr;
  wire [1:0]   _tables_4_io_resp_bits_u;
  wire [40:0]  _tables_4_io_resp_bits_target;
  wire         _tables_3_io_resp_valid;
  wire [1:0]   _tables_3_io_resp_bits_ctr;
  wire [1:0]   _tables_3_io_resp_bits_u;
  wire [40:0]  _tables_3_io_resp_bits_target;
  wire         _tables_2_io_resp_valid;
  wire [1:0]   _tables_2_io_resp_bits_ctr;
  wire [1:0]   _tables_2_io_resp_bits_u;
  wire [40:0]  _tables_2_io_resp_bits_target;
  wire         _tables_1_io_resp_valid;
  wire [1:0]   _tables_1_io_resp_bits_ctr;
  wire [1:0]   _tables_1_io_resp_bits_u;
  wire [40:0]  _tables_1_io_resp_bits_target;
  wire         _tables_0_io_resp_valid;
  wire [1:0]   _tables_0_io_resp_bits_ctr;
  wire [1:0]   _tables_0_io_resp_bits_u;
  wire [40:0]  _tables_0_io_resp_bits_target;
  wire [35:0]  _reset_vector_pipMod_io_out_bits;
  wire         debug_modified_debug_s2_pc_modified_2 = 1'h1;
  wire         debug_modified_debug_s2_pc_modified_1_2 = 1'h1;
  wire         debug_modified_debug_s2_pc_modified_2_2 = 1'h1;
  wire         debug_modified_debug_s2_pc_modified_3_2 = 1'h1;
  wire         debug_modified_debug_s3_pc_modified_2 = 1'h1;
  wire         debug_modified_debug_s3_pc_modified_1_2 = 1'h1;
  wire         debug_modified_debug_s3_pc_modified_2_2 = 1'h1;
  wire         debug_modified_debug_s3_pc_modified_3_2 = 1'h1;
  reg  [40:0]  s1_pc_dup_0;
  reg  [40:0]  s1_pc_dup_1;
  reg  [40:0]  s1_pc_dup_2;
  reg  [40:0]  s1_pc_dup_3;
  reg  [16:0]  s2_pc_seg_0_value;
  reg  [11:0]  s2_pc_seg_1_value;
  reg  [11:0]  s2_pc_seg_2_value;
  wire         debug_modified_debug_s2_pc_modified_0 =
    s2_pc_seg_0_value != s1_pc_dup_0[40:24];
  wire         debug_modified_debug_s2_pc_modified_1 =
    s2_pc_seg_1_value != s1_pc_dup_0[23:12];
  wire [40:0]  debug_s2_pc_addr =
    {s2_pc_seg_0_value, s2_pc_seg_1_value, s2_pc_seg_2_value};
  reg  [16:0]  s2_pc_seg_0_value_1;
  reg  [11:0]  s2_pc_seg_1_value_1;
  reg  [11:0]  s2_pc_seg_2_value_1;
  wire         debug_modified_debug_s2_pc_modified_1_0 =
    s2_pc_seg_0_value_1 != s1_pc_dup_1[40:24];
  wire         debug_modified_debug_s2_pc_modified_1_1 =
    s2_pc_seg_1_value_1 != s1_pc_dup_1[23:12];
  wire [40:0]  debug_s2_pc_addr_1 =
    {s2_pc_seg_0_value_1, s2_pc_seg_1_value_1, s2_pc_seg_2_value_1};
  reg  [16:0]  s2_pc_seg_0_value_2;
  reg  [11:0]  s2_pc_seg_1_value_2;
  reg  [11:0]  s2_pc_seg_2_value_2;
  wire         debug_modified_debug_s2_pc_modified_2_0 =
    s2_pc_seg_0_value_2 != s1_pc_dup_2[40:24];
  wire         debug_modified_debug_s2_pc_modified_2_1 =
    s2_pc_seg_1_value_2 != s1_pc_dup_2[23:12];
  wire [40:0]  debug_s2_pc_addr_2 =
    {s2_pc_seg_0_value_2, s2_pc_seg_1_value_2, s2_pc_seg_2_value_2};
  reg  [16:0]  s2_pc_seg_0_value_3;
  reg  [11:0]  s2_pc_seg_1_value_3;
  reg  [11:0]  s2_pc_seg_2_value_3;
  wire         debug_modified_debug_s2_pc_modified_3_0 =
    s2_pc_seg_0_value_3 != s1_pc_dup_3[40:24];
  wire         debug_modified_debug_s2_pc_modified_3_1 =
    s2_pc_seg_1_value_3 != s1_pc_dup_3[23:12];
  wire [40:0]  debug_s2_pc_addr_3 =
    {s2_pc_seg_0_value_3, s2_pc_seg_1_value_3, s2_pc_seg_2_value_3};
  reg  [16:0]  s3_pc_seg_0_value;
  reg  [11:0]  s3_pc_seg_1_value;
  reg  [11:0]  s3_pc_seg_2_value;
  wire         debug_modified_debug_s3_pc_modified_0 =
    s3_pc_seg_0_value != s2_pc_seg_0_value;
  wire         debug_modified_debug_s3_pc_modified_1 =
    s3_pc_seg_1_value != s2_pc_seg_1_value;
  wire [40:0]  debug_s3_pc_addr =
    {s3_pc_seg_0_value, s3_pc_seg_1_value, s3_pc_seg_2_value};
  reg  [16:0]  s3_pc_seg_0_value_1;
  reg  [11:0]  s3_pc_seg_1_value_1;
  reg  [11:0]  s3_pc_seg_2_value_1;
  wire         debug_modified_debug_s3_pc_modified_1_0 =
    s3_pc_seg_0_value_1 != s2_pc_seg_0_value_1;
  wire         debug_modified_debug_s3_pc_modified_1_1 =
    s3_pc_seg_1_value_1 != s2_pc_seg_1_value_1;
  wire [40:0]  debug_s3_pc_addr_1 =
    {s3_pc_seg_0_value_1, s3_pc_seg_1_value_1, s3_pc_seg_2_value_1};
  reg  [16:0]  s3_pc_seg_0_value_2;
  reg  [11:0]  s3_pc_seg_1_value_2;
  reg  [11:0]  s3_pc_seg_2_value_2;
  wire         debug_modified_debug_s3_pc_modified_2_0 =
    s3_pc_seg_0_value_2 != s2_pc_seg_0_value_2;
  wire         debug_modified_debug_s3_pc_modified_2_1 =
    s3_pc_seg_1_value_2 != s2_pc_seg_1_value_2;
  wire [40:0]  debug_s3_pc_addr_2 =
    {s3_pc_seg_0_value_2, s3_pc_seg_1_value_2, s3_pc_seg_2_value_2};
  reg  [16:0]  s3_pc_seg_0_value_3;
  reg  [11:0]  s3_pc_seg_1_value_3;
  reg  [11:0]  s3_pc_seg_2_value_3;
  wire         debug_modified_debug_s3_pc_modified_3_0 =
    s3_pc_seg_0_value_3 != s2_pc_seg_0_value_3;
  wire         debug_modified_debug_s3_pc_modified_3_1 =
    s3_pc_seg_1_value_3 != s2_pc_seg_1_value_3;
  wire [40:0]  debug_s3_pc_addr_3 =
    {s3_pc_seg_0_value_3, s3_pc_seg_1_value_3, s3_pc_seg_2_value_3};
  reg          REG;
  reg          REG_1;
  reg  [7:0]   tickCtr;
  reg  [40:0]  s3_tageTarget_dup_0;
  reg  [40:0]  s3_tageTarget_dup_1;
  reg  [40:0]  s3_tageTarget_dup_2;
  reg  [40:0]  s3_tageTarget_dup_3;
  reg  [40:0]  s3_providerTarget;
  reg  [40:0]  s3_altProviderTarget;
  reg          s3_provided;
  reg  [2:0]   s3_provider;
  reg          s3_altProvided;
  reg  [2:0]   s3_altProvider;
  reg          s3_providerU;
  reg  [1:0]   s3_providerCtr;
  reg  [1:0]   s3_altProviderCtr;
  wire         updateValid =
    io_update_bits_ftb_entry_tailSlot_valid & io_update_bits_ftb_entry_isJalr
    & ~(io_update_bits_ftb_entry_tailSlot_valid & io_update_bits_ftb_entry_isRet)
    & io_update_valid & ~io_update_bits_ftb_entry_tailSlot_sharing
    & io_update_bits_jmp_taken & io_update_bits_cfi_idx_valid
    & io_update_bits_cfi_idx_bits == io_update_bits_ftb_entry_tailSlot_offset;
  wire         _tables_4_io_req_valid_T =
    io_s1_fire_3
    & (~io_in_bits_resp_in_0_s1_uftbHit & ~io_in_bits_resp_in_0_s1_ftbCloseReq
       | io_in_bits_resp_in_0_s1_uftbHasIndirect);
  wire         _GEN =
    io_update_bits_meta[94] & io_update_bits_meta[89:88] == 2'h0
    & io_update_bits_mispred_mask_2;
  wire         _GEN_0 = io_update_bits_meta[97:95] == 3'h0;
  wire         _GEN_1 = updateValid & io_update_bits_meta[98];
  wire         _GEN_2 = io_update_bits_meta[97:95] == 3'h1;
  wire         _GEN_3 = io_update_bits_meta[97:95] == 3'h2;
  wire         _GEN_4 = io_update_bits_meta[97:95] == 3'h3;
  wire         _GEN_5 = io_update_bits_meta[97:95] == 3'h4;
  wire         _GEN_6 =
    updateValid & io_update_bits_mispred_mask_2
    & ~(io_update_bits_meta[98] & io_update_bits_meta[81:41] == io_update_bits_full_target
        & io_update_bits_meta[89:88] == 2'h0);
  wire         _GEN_7 = io_update_bits_meta[84:82] == 3'h0;
  wire         _GEN_8 = _GEN_6 & io_update_bits_meta[85] & _GEN_7;
  wire         updateMask_0 =
    _GEN_8 | _GEN_1 & (_GEN_0 | _GEN & io_update_bits_meta[93:91] == 3'h0);
  wire         _GEN_9 = io_update_bits_meta[84:82] == 3'h1;
  wire         _GEN_10 = _GEN_6 & io_update_bits_meta[85] & _GEN_9;
  wire         updateMask_1 =
    _GEN_10 | _GEN_1 & (_GEN_2 | _GEN & io_update_bits_meta[93:91] == 3'h1);
  wire         _GEN_11 = io_update_bits_meta[84:82] == 3'h2;
  wire         _GEN_12 = _GEN_6 & io_update_bits_meta[85] & _GEN_11;
  wire         updateMask_2 =
    _GEN_12 | _GEN_1 & (_GEN_3 | _GEN & io_update_bits_meta[93:91] == 3'h2);
  wire         _GEN_13 = io_update_bits_meta[84:82] == 3'h3;
  wire         _GEN_14 = _GEN_6 & io_update_bits_meta[85] & _GEN_13;
  wire         updateMask_3 =
    _GEN_14 | _GEN_1 & (_GEN_4 | _GEN & io_update_bits_meta[93:91] == 3'h3);
  wire         _GEN_15 = io_update_bits_meta[84:82] == 3'h4;
  wire         _GEN_16 = _GEN_6 & io_update_bits_meta[85] & _GEN_15;
  wire         updateMask_4 =
    _GEN_16 | _GEN_1 & (_GEN_5 | _GEN & io_update_bits_meta[93:91] == 3'h4);
  reg          tables_0_io_update_valid_REG;
  reg          tables_0_io_update_reset_u_REG;
  reg          tables_0_io_update_correct_r;
  reg  [40:0]  tables_0_io_update_target_r;
  reg  [40:0]  tables_0_io_update_old_target_r;
  reg          tables_0_io_update_alloc_r;
  reg  [1:0]   tables_0_io_update_oldCtr_r;
  reg          tables_0_io_update_uValid_r;
  reg          tables_0_io_update_u_r;
  reg  [40:0]  tables_0_io_update_pc_r;
  reg  [255:0] tables_0_io_update_ghist_r;
  reg          tables_1_io_update_valid_REG;
  reg          tables_1_io_update_reset_u_REG;
  reg          tables_1_io_update_correct_r;
  reg  [40:0]  tables_1_io_update_target_r;
  reg  [40:0]  tables_1_io_update_old_target_r;
  reg          tables_1_io_update_alloc_r;
  reg  [1:0]   tables_1_io_update_oldCtr_r;
  reg          tables_1_io_update_uValid_r;
  reg          tables_1_io_update_u_r;
  reg  [40:0]  tables_1_io_update_pc_r;
  reg  [255:0] tables_1_io_update_ghist_r;
  reg          tables_2_io_update_valid_REG;
  reg          tables_2_io_update_reset_u_REG;
  reg          tables_2_io_update_correct_r;
  reg  [40:0]  tables_2_io_update_target_r;
  reg  [40:0]  tables_2_io_update_old_target_r;
  reg          tables_2_io_update_alloc_r;
  reg  [1:0]   tables_2_io_update_oldCtr_r;
  reg          tables_2_io_update_uValid_r;
  reg          tables_2_io_update_u_r;
  reg  [40:0]  tables_2_io_update_pc_r;
  reg  [255:0] tables_2_io_update_ghist_r;
  reg          tables_3_io_update_valid_REG;
  reg          tables_3_io_update_reset_u_REG;
  reg          tables_3_io_update_correct_r;
  reg  [40:0]  tables_3_io_update_target_r;
  reg  [40:0]  tables_3_io_update_old_target_r;
  reg          tables_3_io_update_alloc_r;
  reg  [1:0]   tables_3_io_update_oldCtr_r;
  reg          tables_3_io_update_uValid_r;
  reg          tables_3_io_update_u_r;
  reg  [40:0]  tables_3_io_update_pc_r;
  reg  [255:0] tables_3_io_update_ghist_r;
  reg          tables_4_io_update_valid_REG;
  reg          tables_4_io_update_reset_u_REG;
  reg          tables_4_io_update_correct_r;
  reg  [40:0]  tables_4_io_update_target_r;
  reg  [40:0]  tables_4_io_update_old_target_r;
  reg          tables_4_io_update_alloc_r;
  reg  [1:0]   tables_4_io_update_oldCtr_r;
  reg          tables_4_io_update_uValid_r;
  reg          tables_4_io_update_u_r;
  reg  [40:0]  tables_4_io_update_pc_r;
  reg  [255:0] tables_4_io_update_ghist_r;
  wire [40:0]  _GEN_17 = {5'h0, _reset_vector_pipMod_io_out_bits};
  wire [2:0]   selectedInfo_res_1_first_tableIdx = {2'h0, _tables_1_io_resp_valid};
  wire [2:0]   selectedInfo_res_2_first_tableIdx =
    _tables_2_io_resp_valid ? 3'h2 : selectedInfo_res_1_first_tableIdx;
  wire         selectedInfo_res_hasOne =
    _tables_4_io_resp_valid | _tables_3_io_resp_valid;
  wire         selectedInfo_res_hasTwo =
    _tables_4_io_resp_valid & _tables_3_io_resp_valid;
  wire         selectedInfo_res_1_hasOne =
    _tables_1_io_resp_valid | _tables_0_io_resp_valid;
  wire [1:0]   selectedInfo_res_1_first_ctr =
    _tables_1_io_resp_valid ? _tables_1_io_resp_bits_ctr : _tables_0_io_resp_bits_ctr;
  wire [40:0]  selectedInfo_res_1_first_target =
    _tables_1_io_resp_valid
      ? _tables_1_io_resp_bits_target
      : _tables_0_io_resp_bits_target;
  wire         selectedInfo_res_2_hasOne =
    _tables_2_io_resp_valid | selectedInfo_res_1_hasOne;
  wire [1:0]   selectedInfo_res_2_first_ctr =
    _tables_2_io_resp_valid ? _tables_2_io_resp_bits_ctr : selectedInfo_res_1_first_ctr;
  wire [40:0]  selectedInfo_res_2_first_target =
    _tables_2_io_resp_valid
      ? _tables_2_io_resp_bits_target
      : selectedInfo_res_1_first_target;
  wire         selectedInfo_hasOne = selectedInfo_res_hasOne | selectedInfo_res_2_hasOne;
  wire         selectedInfo_hasTwo =
    selectedInfo_res_hasTwo | _tables_1_io_resp_valid & _tables_0_io_resp_valid
    | _tables_2_io_resp_valid & selectedInfo_res_1_hasOne | selectedInfo_res_hasOne
    & selectedInfo_res_2_hasOne;
  wire [1:0]   selectedInfo_first_ctr =
    selectedInfo_res_hasOne
      ? (_tables_4_io_resp_valid
           ? _tables_4_io_resp_bits_ctr
           : _tables_3_io_resp_bits_ctr)
      : selectedInfo_res_2_first_ctr;
  wire [40:0]  selectedInfo_first_target =
    selectedInfo_res_hasOne
      ? (_tables_4_io_resp_valid
           ? _tables_4_io_resp_bits_target
           : _tables_3_io_resp_bits_target)
      : selectedInfo_res_2_first_target;
  wire         _selectedInfo_T_91 = selectedInfo_res_hasOne & ~selectedInfo_res_hasTwo;
  wire [40:0]  selectedInfo_second_target =
    (selectedInfo_res_hasOne
       ? 41'h0
       : (_tables_2_io_resp_valid
            ? 41'h0
            : (_tables_1_io_resp_valid ? 41'h0 : _tables_0_io_resp_bits_target)
              | (_tables_1_io_resp_valid ? _tables_0_io_resp_bits_target : 41'h0))
         | (_tables_2_io_resp_valid ? selectedInfo_res_1_first_target : 41'h0))
    | (_selectedInfo_T_91 ? selectedInfo_res_2_first_target : 41'h0)
    | (selectedInfo_res_hasTwo
         ? (_tables_4_io_resp_valid ? 41'h0 : _tables_3_io_resp_bits_target)
           | (_tables_4_io_resp_valid ? _tables_3_io_resp_bits_target : 41'h0)
         : 41'h0);
  wire         providerNull = selectedInfo_first_ctr == 2'h0;
  wire [40:0]  _s2_tageTarget_T_12 =
    (selectedInfo_hasOne & ~(providerNull & selectedInfo_hasTwo)
       ? selectedInfo_first_target
       : 41'h0)
    | (selectedInfo_hasTwo & providerNull ? selectedInfo_second_target : 41'h0)
    | (~selectedInfo_hasOne | providerNull & ~selectedInfo_hasTwo
         ? io_in_bits_resp_in_0_s2_full_pred_3_jalr_target
         : 41'h0);
  wire         _updateU_T_5 =
    ~(io_update_bits_meta[94]) | io_update_bits_meta[87]
      ? io_update_bits_meta[90]
      : ~io_update_bits_mispred_mask_2;
  wire         _updateCorrect_T =
    io_update_bits_meta[81:41] == io_update_bits_full_target;
  wire         _GEN_18 = _GEN_6 & io_update_bits_meta[85];
  wire [2:0]   selectedInfo_first_tableIdx =
    selectedInfo_res_hasOne
      ? (_tables_4_io_resp_valid ? 3'h4 : 3'h3)
      : selectedInfo_res_2_first_tableIdx;
  wire [7:0]   _s2_allocatableSlots_T_17 = 8'h1 << selectedInfo_first_tableIdx;
  wire [4:0]   _GEN_19 = _s2_allocatableSlots_T_17[4:0] | _s2_allocatableSlots_T_17[5:1];
  wire [4:0]   _GEN_20 =
    ~({_GEN_19[4] | selectedInfo_first_tableIdx == 3'h6 | (&selectedInfo_first_tableIdx),
       _GEN_19[3:0] | _s2_allocatableSlots_T_17[5:2] | _s2_allocatableSlots_T_17[6:3]
         | _s2_allocatableSlots_T_17[7:4]} & {5{selectedInfo_hasOne}})
    & {~_tables_4_io_resp_valid & _tables_4_io_resp_bits_u == 2'h0,
       ~_tables_3_io_resp_valid & _tables_3_io_resp_bits_u == 2'h0,
       ~_tables_2_io_resp_valid & _tables_2_io_resp_bits_u == 2'h0,
       ~_tables_1_io_resp_valid & _tables_1_io_resp_bits_u == 2'h0,
       ~_tables_0_io_resp_valid & _tables_0_io_resp_bits_u == 2'h0};
  wire [4:0]   _GEN_21 =
    _GEN_20
    & {_s2_allocLFSR_prng_io_out_4,
       _s2_allocLFSR_prng_io_out_3,
       _s2_allocLFSR_prng_io_out_2,
       _s2_allocLFSR_prng_io_out_1,
       _s2_allocLFSR_prng_io_out_0};
  wire [2:0]   s2_maskedEntry =
    _GEN_21[0]
      ? 3'h0
      : _GEN_21[1]
          ? 3'h1
          : _GEN_21[2] ? 3'h2 : _GEN_21[3] ? 3'h3 : _GEN_21[4] ? 3'h4 : 3'h7;
  wire [7:0]   _s2_allocEntry_T = {3'h0, _GEN_20} >> s2_maskedEntry;
  always @(posedge clock) begin
    if (REG_1) begin
      s1_pc_dup_0 <= _GEN_17;
      s1_pc_dup_1 <= _GEN_17;
      s1_pc_dup_2 <= _GEN_17;
      s1_pc_dup_3 <= _GEN_17;
    end
    else begin
      if (io_s0_fire_0)
        s1_pc_dup_0 <= io_in_bits_s0_pc_0;
      if (io_s0_fire_1)
        s1_pc_dup_1 <= io_in_bits_s0_pc_1;
      if (io_s0_fire_2)
        s1_pc_dup_2 <= io_in_bits_s0_pc_2;
      if (io_s0_fire_3)
        s1_pc_dup_3 <= io_in_bits_s0_pc_3;
    end
    REG <= reset;
    REG_1 <= REG & ~reset;
    if (io_s2_fire_0)
      s3_tageTarget_dup_0 <= _s2_tageTarget_T_12;
    if (io_s2_fire_1)
      s3_tageTarget_dup_1 <= _s2_tageTarget_T_12;
    if (io_s2_fire_2)
      s3_tageTarget_dup_2 <= _s2_tageTarget_T_12;
    if (io_s2_fire_3) begin
      s3_tageTarget_dup_3 <= _s2_tageTarget_T_12;
      s3_providerTarget <= selectedInfo_first_target;
      s3_altProviderTarget <= selectedInfo_second_target;
      s3_provided <= selectedInfo_hasOne;
      s3_provider <= selectedInfo_first_tableIdx;
      s3_altProvided <= selectedInfo_hasTwo;
      s3_altProvider <=
        (selectedInfo_res_hasOne | ~_tables_2_io_resp_valid
           ? 3'h0
           : selectedInfo_res_1_first_tableIdx)
        | (_selectedInfo_T_91 ? selectedInfo_res_2_first_tableIdx : 3'h0)
        | (selectedInfo_res_hasTwo
             ? (_tables_4_io_resp_valid ? 3'h0 : 3'h3)
               | (_tables_4_io_resp_valid ? 3'h3 : 3'h0)
             : 3'h0);
      s3_providerU <=
        selectedInfo_res_hasOne
          ? (_tables_4_io_resp_valid
               ? _tables_4_io_resp_bits_u[0]
               : _tables_3_io_resp_bits_u[0])
          : _tables_2_io_resp_valid
              ? _tables_2_io_resp_bits_u[0]
              : _tables_1_io_resp_valid
                  ? _tables_1_io_resp_bits_u[0]
                  : _tables_0_io_resp_bits_u[0];
      s3_providerCtr <= selectedInfo_first_ctr;
      s3_altProviderCtr <=
        (selectedInfo_res_hasOne
           ? 2'h0
           : (_tables_2_io_resp_valid
                ? 2'h0
                : (_tables_1_io_resp_valid ? 2'h0 : _tables_0_io_resp_bits_ctr)
                  | (_tables_1_io_resp_valid ? _tables_0_io_resp_bits_ctr : 2'h0))
             | (_tables_2_io_resp_valid ? selectedInfo_res_1_first_ctr : 2'h0))
        | (_selectedInfo_T_91 ? selectedInfo_res_2_first_ctr : 2'h0)
        | (selectedInfo_res_hasTwo
             ? (_tables_4_io_resp_valid ? 2'h0 : _tables_3_io_resp_bits_ctr)
               | (_tables_4_io_resp_valid ? _tables_3_io_resp_bits_ctr : 2'h0)
             : 2'h0);
      resp_meta_allocate_valid_r <= |_GEN_20;
      resp_meta_allocate_bits_r <=
        _s2_allocEntry_T[0]
          ? s2_maskedEntry
          : _GEN_20[0]
              ? 3'h0
              : _GEN_20[1]
                  ? 3'h1
                  : _GEN_20[2] ? 3'h2 : _GEN_20[3] ? 3'h3 : _GEN_20[4] ? 3'h4 : 3'h7;
    end
    if (updateMask_0) begin
      tables_0_io_update_correct_r <= _GEN_8 | _GEN_0 & _updateCorrect_T;
      tables_0_io_update_target_r <= io_update_bits_full_target;
      tables_0_io_update_old_target_r <=
        _GEN_0 ? io_update_bits_meta[81:41] : io_update_bits_meta[40:0];
      tables_0_io_update_alloc_r <= _GEN_18 & _GEN_7;
      tables_0_io_update_oldCtr_r <=
        _GEN_0 ? io_update_bits_meta[89:88] : io_update_bits_meta[87:86];
      tables_0_io_update_u_r <= ~_GEN_8 & _updateU_T_5;
      tables_0_io_update_pc_r <= io_update_bits_pc;
      tables_0_io_update_ghist_r <= io_update_bits_ghist;
    end
    if (updateMask_1) begin
      tables_1_io_update_correct_r <= _GEN_10 | _GEN_2 & _updateCorrect_T;
      tables_1_io_update_target_r <= io_update_bits_full_target;
      tables_1_io_update_old_target_r <=
        _GEN_2 ? io_update_bits_meta[81:41] : io_update_bits_meta[40:0];
      tables_1_io_update_alloc_r <= _GEN_18 & _GEN_9;
      tables_1_io_update_oldCtr_r <=
        _GEN_2 ? io_update_bits_meta[89:88] : io_update_bits_meta[87:86];
      tables_1_io_update_u_r <= ~_GEN_10 & _updateU_T_5;
      tables_1_io_update_pc_r <= io_update_bits_pc;
      tables_1_io_update_ghist_r <= io_update_bits_ghist;
    end
    if (updateMask_2) begin
      tables_2_io_update_correct_r <= _GEN_12 | _GEN_3 & _updateCorrect_T;
      tables_2_io_update_target_r <= io_update_bits_full_target;
      tables_2_io_update_old_target_r <=
        _GEN_3 ? io_update_bits_meta[81:41] : io_update_bits_meta[40:0];
      tables_2_io_update_alloc_r <= _GEN_18 & _GEN_11;
      tables_2_io_update_oldCtr_r <=
        _GEN_3 ? io_update_bits_meta[89:88] : io_update_bits_meta[87:86];
      tables_2_io_update_u_r <= ~_GEN_12 & _updateU_T_5;
      tables_2_io_update_pc_r <= io_update_bits_pc;
      tables_2_io_update_ghist_r <= io_update_bits_ghist;
    end
    if (updateMask_3) begin
      tables_3_io_update_correct_r <= _GEN_14 | _GEN_4 & _updateCorrect_T;
      tables_3_io_update_target_r <= io_update_bits_full_target;
      tables_3_io_update_old_target_r <=
        _GEN_4 ? io_update_bits_meta[81:41] : io_update_bits_meta[40:0];
      tables_3_io_update_alloc_r <= _GEN_18 & _GEN_13;
      tables_3_io_update_oldCtr_r <=
        _GEN_4 ? io_update_bits_meta[89:88] : io_update_bits_meta[87:86];
      tables_3_io_update_u_r <= ~_GEN_14 & _updateU_T_5;
      tables_3_io_update_pc_r <= io_update_bits_pc;
      tables_3_io_update_ghist_r <= io_update_bits_ghist;
    end
    if (updateMask_4) begin
      tables_4_io_update_correct_r <= _GEN_16 | _GEN_5 & _updateCorrect_T;
      tables_4_io_update_target_r <= io_update_bits_full_target;
      tables_4_io_update_old_target_r <=
        _GEN_5 ? io_update_bits_meta[81:41] : io_update_bits_meta[40:0];
      tables_4_io_update_alloc_r <= _GEN_18 & _GEN_15;
      tables_4_io_update_oldCtr_r <=
        _GEN_5 ? io_update_bits_meta[89:88] : io_update_bits_meta[87:86];
      tables_4_io_update_u_r <= ~_GEN_16 & _updateU_T_5;
      tables_4_io_update_pc_r <= io_update_bits_pc;
      tables_4_io_update_ghist_r <= io_update_bits_ghist;
    end
  end // always @(posedge)
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      s2_pc_seg_0_value <= 17'h0;
      s2_pc_seg_1_value <= 12'h0;
      s2_pc_seg_2_value <= 12'h0;
      s2_pc_seg_0_value_1 <= 17'h0;
      s2_pc_seg_1_value_1 <= 12'h0;
      s2_pc_seg_2_value_1 <= 12'h0;
      s2_pc_seg_0_value_2 <= 17'h0;
      s2_pc_seg_1_value_2 <= 12'h0;
      s2_pc_seg_2_value_2 <= 12'h0;
      s2_pc_seg_0_value_3 <= 17'h0;
      s2_pc_seg_1_value_3 <= 12'h0;
      s2_pc_seg_2_value_3 <= 12'h0;
      s3_pc_seg_0_value <= 17'h0;
      s3_pc_seg_1_value <= 12'h0;
      s3_pc_seg_2_value <= 12'h0;
      s3_pc_seg_0_value_1 <= 17'h0;
      s3_pc_seg_1_value_1 <= 12'h0;
      s3_pc_seg_2_value_1 <= 12'h0;
      s3_pc_seg_0_value_2 <= 17'h0;
      s3_pc_seg_1_value_2 <= 12'h0;
      s3_pc_seg_2_value_2 <= 12'h0;
      s3_pc_seg_0_value_3 <= 17'h0;
      s3_pc_seg_1_value_3 <= 12'h0;
      s3_pc_seg_2_value_3 <= 12'h0;
      tickCtr <= 8'h0;
      tables_0_io_update_valid_REG <= 1'h0;
      tables_0_io_update_reset_u_REG <= 1'h0;
      tables_0_io_update_uValid_r <= 1'h0;
      tables_1_io_update_valid_REG <= 1'h0;
      tables_1_io_update_reset_u_REG <= 1'h0;
      tables_1_io_update_uValid_r <= 1'h0;
      tables_2_io_update_valid_REG <= 1'h0;
      tables_2_io_update_reset_u_REG <= 1'h0;
      tables_2_io_update_uValid_r <= 1'h0;
      tables_3_io_update_valid_REG <= 1'h0;
      tables_3_io_update_reset_u_REG <= 1'h0;
      tables_3_io_update_uValid_r <= 1'h0;
      tables_4_io_update_valid_REG <= 1'h0;
      tables_4_io_update_reset_u_REG <= 1'h0;
      tables_4_io_update_uValid_r <= 1'h0;
    end
    else begin
      if (debug_modified_debug_s2_pc_modified_0 & io_s1_fire_0)
        s2_pc_seg_0_value <= s1_pc_dup_0[40:24];
      if (debug_modified_debug_s2_pc_modified_1 & io_s1_fire_0)
        s2_pc_seg_1_value <= s1_pc_dup_0[23:12];
      if (debug_modified_debug_s2_pc_modified_2 & io_s1_fire_0)
        s2_pc_seg_2_value <= s1_pc_dup_0[11:0];
      if (debug_modified_debug_s2_pc_modified_1_0 & io_s1_fire_1)
        s2_pc_seg_0_value_1 <= s1_pc_dup_1[40:24];
      if (debug_modified_debug_s2_pc_modified_1_1 & io_s1_fire_1)
        s2_pc_seg_1_value_1 <= s1_pc_dup_1[23:12];
      if (debug_modified_debug_s2_pc_modified_1_2 & io_s1_fire_1)
        s2_pc_seg_2_value_1 <= s1_pc_dup_1[11:0];
      if (debug_modified_debug_s2_pc_modified_2_0 & io_s1_fire_2)
        s2_pc_seg_0_value_2 <= s1_pc_dup_2[40:24];
      if (debug_modified_debug_s2_pc_modified_2_1 & io_s1_fire_2)
        s2_pc_seg_1_value_2 <= s1_pc_dup_2[23:12];
      if (debug_modified_debug_s2_pc_modified_2_2 & io_s1_fire_2)
        s2_pc_seg_2_value_2 <= s1_pc_dup_2[11:0];
      if (debug_modified_debug_s2_pc_modified_3_0 & io_s1_fire_3)
        s2_pc_seg_0_value_3 <= s1_pc_dup_3[40:24];
      if (debug_modified_debug_s2_pc_modified_3_1 & io_s1_fire_3)
        s2_pc_seg_1_value_3 <= s1_pc_dup_3[23:12];
      if (debug_modified_debug_s2_pc_modified_3_2 & io_s1_fire_3)
        s2_pc_seg_2_value_3 <= s1_pc_dup_3[11:0];
      if (debug_modified_debug_s3_pc_modified_0 & io_s2_fire_0)
        s3_pc_seg_0_value <= s2_pc_seg_0_value;
      if (debug_modified_debug_s3_pc_modified_1 & io_s2_fire_0)
        s3_pc_seg_1_value <= s2_pc_seg_1_value;
      if (debug_modified_debug_s3_pc_modified_2 & io_s2_fire_0)
        s3_pc_seg_2_value <= s2_pc_seg_2_value;
      if (debug_modified_debug_s3_pc_modified_1_0 & io_s2_fire_1)
        s3_pc_seg_0_value_1 <= s2_pc_seg_0_value_1;
      if (debug_modified_debug_s3_pc_modified_1_1 & io_s2_fire_1)
        s3_pc_seg_1_value_1 <= s2_pc_seg_1_value_1;
      if (debug_modified_debug_s3_pc_modified_1_2 & io_s2_fire_1)
        s3_pc_seg_2_value_1 <= s2_pc_seg_2_value_1;
      if (debug_modified_debug_s3_pc_modified_2_0 & io_s2_fire_2)
        s3_pc_seg_0_value_2 <= s2_pc_seg_0_value_2;
      if (debug_modified_debug_s3_pc_modified_2_1 & io_s2_fire_2)
        s3_pc_seg_1_value_2 <= s2_pc_seg_1_value_2;
      if (debug_modified_debug_s3_pc_modified_2_2 & io_s2_fire_2)
        s3_pc_seg_2_value_2 <= s2_pc_seg_2_value_2;
      if (debug_modified_debug_s3_pc_modified_3_0 & io_s2_fire_3)
        s3_pc_seg_0_value_3 <= s2_pc_seg_0_value_3;
      if (debug_modified_debug_s3_pc_modified_3_1 & io_s2_fire_3)
        s3_pc_seg_1_value_3 <= s2_pc_seg_1_value_3;
      if (debug_modified_debug_s3_pc_modified_3_2 & io_s2_fire_3)
        s3_pc_seg_2_value_3 <= s2_pc_seg_2_value_3;
      if (&tickCtr)
        tickCtr <= 8'h0;
      else if (_GEN_6) begin
        if ((&tickCtr) & ~(io_update_bits_meta[85]))
          tickCtr <= 8'hFF;
        else if (tickCtr == 8'h0 & io_update_bits_meta[85])
          tickCtr <= 8'h0;
        else if (io_update_bits_meta[85])
          tickCtr <= 8'(tickCtr - 8'h1);
        else
          tickCtr <= 8'(tickCtr + 8'h1);
      end
      tables_0_io_update_valid_REG <= updateMask_0;
      tables_0_io_update_reset_u_REG <= &tickCtr;
      if (updateMask_0)
        tables_0_io_update_uValid_r <= _GEN_8 | _GEN_1 & _GEN_0;
      tables_1_io_update_valid_REG <= updateMask_1;
      tables_1_io_update_reset_u_REG <= &tickCtr;
      if (updateMask_1)
        tables_1_io_update_uValid_r <= _GEN_10 | _GEN_1 & _GEN_2;
      tables_2_io_update_valid_REG <= updateMask_2;
      tables_2_io_update_reset_u_REG <= &tickCtr;
      if (updateMask_2)
        tables_2_io_update_uValid_r <= _GEN_12 | _GEN_1 & _GEN_3;
      tables_3_io_update_valid_REG <= updateMask_3;
      tables_3_io_update_reset_u_REG <= &tickCtr;
      if (updateMask_3)
        tables_3_io_update_uValid_r <= _GEN_14 | _GEN_1 & _GEN_4;
      tables_4_io_update_valid_REG <= updateMask_4;
      tables_4_io_update_reset_u_REG <= &tickCtr;
      if (updateMask_4)
        tables_4_io_update_uValid_r <= _GEN_16 | _GEN_1 & _GEN_5;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:88];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [6:0] i = 7'h0; i < 7'h59; i += 7'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        s1_pc_dup_0 = {_RANDOM[7'h0], _RANDOM[7'h1][8:0]};
        s1_pc_dup_1 = {_RANDOM[7'h1][31:9], _RANDOM[7'h2][17:0]};
        s1_pc_dup_2 = {_RANDOM[7'h2][31:18], _RANDOM[7'h3][26:0]};
        s1_pc_dup_3 = {_RANDOM[7'h3][31:27], _RANDOM[7'h4], _RANDOM[7'h5][3:0]};
        s2_pc_seg_0_value = _RANDOM[7'h5][20:4];
        s2_pc_seg_1_value = {_RANDOM[7'h5][31:21], _RANDOM[7'h6][0]};
        s2_pc_seg_2_value = _RANDOM[7'h6][12:1];
        s2_pc_seg_0_value_1 = _RANDOM[7'h6][29:13];
        s2_pc_seg_1_value_1 = {_RANDOM[7'h6][31:30], _RANDOM[7'h7][9:0]};
        s2_pc_seg_2_value_1 = _RANDOM[7'h7][21:10];
        s2_pc_seg_0_value_2 = {_RANDOM[7'h7][31:22], _RANDOM[7'h8][6:0]};
        s2_pc_seg_1_value_2 = _RANDOM[7'h8][18:7];
        s2_pc_seg_2_value_2 = _RANDOM[7'h8][30:19];
        s2_pc_seg_0_value_3 = {_RANDOM[7'h8][31], _RANDOM[7'h9][15:0]};
        s2_pc_seg_1_value_3 = _RANDOM[7'h9][27:16];
        s2_pc_seg_2_value_3 = {_RANDOM[7'h9][31:28], _RANDOM[7'hA][7:0]};
        s3_pc_seg_0_value = _RANDOM[7'hA][24:8];
        s3_pc_seg_1_value = {_RANDOM[7'hA][31:25], _RANDOM[7'hB][4:0]};
        s3_pc_seg_2_value = _RANDOM[7'hB][16:5];
        s3_pc_seg_0_value_1 = {_RANDOM[7'hB][31:17], _RANDOM[7'hC][1:0]};
        s3_pc_seg_1_value_1 = _RANDOM[7'hC][13:2];
        s3_pc_seg_2_value_1 = _RANDOM[7'hC][25:14];
        s3_pc_seg_0_value_2 = {_RANDOM[7'hC][31:26], _RANDOM[7'hD][10:0]};
        s3_pc_seg_1_value_2 = _RANDOM[7'hD][22:11];
        s3_pc_seg_2_value_2 = {_RANDOM[7'hD][31:23], _RANDOM[7'hE][2:0]};
        s3_pc_seg_0_value_3 = _RANDOM[7'hE][19:3];
        s3_pc_seg_1_value_3 = _RANDOM[7'hE][31:20];
        s3_pc_seg_2_value_3 = _RANDOM[7'hF][11:0];
        REG = _RANDOM[7'hF][12];
        REG_1 = _RANDOM[7'hF][13];
        tickCtr = _RANDOM[7'hF][25:18];
        s3_tageTarget_dup_0 = {_RANDOM[7'h13][31:21], _RANDOM[7'h14][29:0]};
        s3_tageTarget_dup_1 =
          {_RANDOM[7'h14][31:30], _RANDOM[7'h15], _RANDOM[7'h16][6:0]};
        s3_tageTarget_dup_2 = {_RANDOM[7'h16][31:7], _RANDOM[7'h17][15:0]};
        s3_tageTarget_dup_3 = {_RANDOM[7'h17][31:16], _RANDOM[7'h18][24:0]};
        s3_providerTarget = {_RANDOM[7'h18][31:25], _RANDOM[7'h19], _RANDOM[7'h1A][1:0]};
        s3_altProviderTarget = {_RANDOM[7'h1A][31:2], _RANDOM[7'h1B][10:0]};
        s3_provided = _RANDOM[7'h1B][11];
        s3_provider = _RANDOM[7'h1B][14:12];
        s3_altProvided = _RANDOM[7'h1B][15];
        s3_altProvider = _RANDOM[7'h1B][18:16];
        s3_providerU = _RANDOM[7'h1B][19];
        s3_providerCtr = _RANDOM[7'h1B][21:20];
        s3_altProviderCtr = _RANDOM[7'h1B][23:22];
        resp_meta_allocate_valid_r = _RANDOM[7'h1B][24];
        resp_meta_allocate_bits_r = _RANDOM[7'h1B][27:25];
        tables_0_io_update_valid_REG = _RANDOM[7'h1B][28];
        tables_0_io_update_reset_u_REG = _RANDOM[7'h1B][29];
        tables_0_io_update_correct_r = _RANDOM[7'h1B][30];
        tables_0_io_update_target_r =
          {_RANDOM[7'h1B][31], _RANDOM[7'h1C], _RANDOM[7'h1D][7:0]};
        tables_0_io_update_old_target_r = {_RANDOM[7'h1D][31:8], _RANDOM[7'h1E][16:0]};
        tables_0_io_update_alloc_r = _RANDOM[7'h1E][17];
        tables_0_io_update_oldCtr_r = _RANDOM[7'h1E][19:18];
        tables_0_io_update_uValid_r = _RANDOM[7'h1E][20];
        tables_0_io_update_u_r = _RANDOM[7'h1E][21];
        tables_0_io_update_pc_r = {_RANDOM[7'h1E][31:22], _RANDOM[7'h1F][30:0]};
        tables_0_io_update_ghist_r =
          {_RANDOM[7'h1F][31],
           _RANDOM[7'h20],
           _RANDOM[7'h21],
           _RANDOM[7'h22],
           _RANDOM[7'h23],
           _RANDOM[7'h24],
           _RANDOM[7'h25],
           _RANDOM[7'h26],
           _RANDOM[7'h27][30:0]};
        tables_1_io_update_valid_REG = _RANDOM[7'h27][31];
        tables_1_io_update_reset_u_REG = _RANDOM[7'h28][0];
        tables_1_io_update_correct_r = _RANDOM[7'h28][1];
        tables_1_io_update_target_r = {_RANDOM[7'h28][31:2], _RANDOM[7'h29][10:0]};
        tables_1_io_update_old_target_r = {_RANDOM[7'h29][31:11], _RANDOM[7'h2A][19:0]};
        tables_1_io_update_alloc_r = _RANDOM[7'h2A][20];
        tables_1_io_update_oldCtr_r = _RANDOM[7'h2A][22:21];
        tables_1_io_update_uValid_r = _RANDOM[7'h2A][23];
        tables_1_io_update_u_r = _RANDOM[7'h2A][24];
        tables_1_io_update_pc_r =
          {_RANDOM[7'h2A][31:25], _RANDOM[7'h2B], _RANDOM[7'h2C][1:0]};
        tables_1_io_update_ghist_r =
          {_RANDOM[7'h2C][31:2],
           _RANDOM[7'h2D],
           _RANDOM[7'h2E],
           _RANDOM[7'h2F],
           _RANDOM[7'h30],
           _RANDOM[7'h31],
           _RANDOM[7'h32],
           _RANDOM[7'h33],
           _RANDOM[7'h34][1:0]};
        tables_2_io_update_valid_REG = _RANDOM[7'h34][2];
        tables_2_io_update_reset_u_REG = _RANDOM[7'h34][3];
        tables_2_io_update_correct_r = _RANDOM[7'h34][4];
        tables_2_io_update_target_r = {_RANDOM[7'h34][31:5], _RANDOM[7'h35][13:0]};
        tables_2_io_update_old_target_r = {_RANDOM[7'h35][31:14], _RANDOM[7'h36][22:0]};
        tables_2_io_update_alloc_r = _RANDOM[7'h36][23];
        tables_2_io_update_oldCtr_r = _RANDOM[7'h36][25:24];
        tables_2_io_update_uValid_r = _RANDOM[7'h36][26];
        tables_2_io_update_u_r = _RANDOM[7'h36][27];
        tables_2_io_update_pc_r =
          {_RANDOM[7'h36][31:28], _RANDOM[7'h37], _RANDOM[7'h38][4:0]};
        tables_2_io_update_ghist_r =
          {_RANDOM[7'h38][31:5],
           _RANDOM[7'h39],
           _RANDOM[7'h3A],
           _RANDOM[7'h3B],
           _RANDOM[7'h3C],
           _RANDOM[7'h3D],
           _RANDOM[7'h3E],
           _RANDOM[7'h3F],
           _RANDOM[7'h40][4:0]};
        tables_3_io_update_valid_REG = _RANDOM[7'h40][5];
        tables_3_io_update_reset_u_REG = _RANDOM[7'h40][6];
        tables_3_io_update_correct_r = _RANDOM[7'h40][7];
        tables_3_io_update_target_r = {_RANDOM[7'h40][31:8], _RANDOM[7'h41][16:0]};
        tables_3_io_update_old_target_r = {_RANDOM[7'h41][31:17], _RANDOM[7'h42][25:0]};
        tables_3_io_update_alloc_r = _RANDOM[7'h42][26];
        tables_3_io_update_oldCtr_r = _RANDOM[7'h42][28:27];
        tables_3_io_update_uValid_r = _RANDOM[7'h42][29];
        tables_3_io_update_u_r = _RANDOM[7'h42][30];
        tables_3_io_update_pc_r =
          {_RANDOM[7'h42][31], _RANDOM[7'h43], _RANDOM[7'h44][7:0]};
        tables_3_io_update_ghist_r =
          {_RANDOM[7'h44][31:8],
           _RANDOM[7'h45],
           _RANDOM[7'h46],
           _RANDOM[7'h47],
           _RANDOM[7'h48],
           _RANDOM[7'h49],
           _RANDOM[7'h4A],
           _RANDOM[7'h4B],
           _RANDOM[7'h4C][7:0]};
        tables_4_io_update_valid_REG = _RANDOM[7'h4C][8];
        tables_4_io_update_reset_u_REG = _RANDOM[7'h4C][9];
        tables_4_io_update_correct_r = _RANDOM[7'h4C][10];
        tables_4_io_update_target_r = {_RANDOM[7'h4C][31:11], _RANDOM[7'h4D][19:0]};
        tables_4_io_update_old_target_r = {_RANDOM[7'h4D][31:20], _RANDOM[7'h4E][28:0]};
        tables_4_io_update_alloc_r = _RANDOM[7'h4E][29];
        tables_4_io_update_oldCtr_r = _RANDOM[7'h4E][31:30];
        tables_4_io_update_uValid_r = _RANDOM[7'h4F][0];
        tables_4_io_update_u_r = _RANDOM[7'h4F][1];
        tables_4_io_update_pc_r = {_RANDOM[7'h4F][31:2], _RANDOM[7'h50][10:0]};
        tables_4_io_update_ghist_r =
          {_RANDOM[7'h50][31:11],
           _RANDOM[7'h51],
           _RANDOM[7'h52],
           _RANDOM[7'h53],
           _RANDOM[7'h54],
           _RANDOM[7'h55],
           _RANDOM[7'h56],
           _RANDOM[7'h57],
           _RANDOM[7'h58][10:0]};
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        s2_pc_seg_0_value = 17'h0;
        s2_pc_seg_1_value = 12'h0;
        s2_pc_seg_2_value = 12'h0;
        s2_pc_seg_0_value_1 = 17'h0;
        s2_pc_seg_1_value_1 = 12'h0;
        s2_pc_seg_2_value_1 = 12'h0;
        s2_pc_seg_0_value_2 = 17'h0;
        s2_pc_seg_1_value_2 = 12'h0;
        s2_pc_seg_2_value_2 = 12'h0;
        s2_pc_seg_0_value_3 = 17'h0;
        s2_pc_seg_1_value_3 = 12'h0;
        s2_pc_seg_2_value_3 = 12'h0;
        s3_pc_seg_0_value = 17'h0;
        s3_pc_seg_1_value = 12'h0;
        s3_pc_seg_2_value = 12'h0;
        s3_pc_seg_0_value_1 = 17'h0;
        s3_pc_seg_1_value_1 = 12'h0;
        s3_pc_seg_2_value_1 = 12'h0;
        s3_pc_seg_0_value_2 = 17'h0;
        s3_pc_seg_1_value_2 = 12'h0;
        s3_pc_seg_2_value_2 = 12'h0;
        s3_pc_seg_0_value_3 = 17'h0;
        s3_pc_seg_1_value_3 = 12'h0;
        s3_pc_seg_2_value_3 = 12'h0;
        tickCtr = 8'h0;
        tables_0_io_update_valid_REG = 1'h0;
        tables_0_io_update_reset_u_REG = 1'h0;
        tables_0_io_update_uValid_r = 1'h0;
        tables_1_io_update_valid_REG = 1'h0;
        tables_1_io_update_reset_u_REG = 1'h0;
        tables_1_io_update_uValid_r = 1'h0;
        tables_2_io_update_valid_REG = 1'h0;
        tables_2_io_update_reset_u_REG = 1'h0;
        tables_2_io_update_uValid_r = 1'h0;
        tables_3_io_update_valid_REG = 1'h0;
        tables_3_io_update_reset_u_REG = 1'h0;
        tables_3_io_update_uValid_r = 1'h0;
        tables_4_io_update_valid_REG = 1'h0;
        tables_4_io_update_reset_u_REG = 1'h0;
        tables_4_io_update_uValid_r = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DelayNWithValid reset_vector_pipMod (
    .clock       (clock),
    .io_in_bits  (io_reset_vector),
    .io_in_valid (reset),
    .io_out_bits (_reset_vector_pipMod_io_out_bits)
  );
  ITTageTable tables_0 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_valid                                (_tables_4_io_req_valid_T),
    .io_req_bits_pc                              (s1_pc_dup_3),
    .io_req_bits_folded_hist_hist_12_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_12_folded_hist),
    .io_resp_valid                               (_tables_0_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_0_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_0_io_resp_bits_u),
    .io_resp_bits_target                         (_tables_0_io_resp_bits_target),
    .io_update_pc                                (tables_0_io_update_pc_r),
    .io_update_ghist                             (tables_0_io_update_ghist_r),
    .io_update_valid                             (tables_0_io_update_valid_REG),
    .io_update_correct                           (tables_0_io_update_correct_r),
    .io_update_alloc                             (tables_0_io_update_alloc_r),
    .io_update_oldCtr                            (tables_0_io_update_oldCtr_r),
    .io_update_uValid                            (tables_0_io_update_uValid_r),
    .io_update_u                                 (tables_0_io_update_u_r),
    .io_update_reset_u                           (tables_0_io_update_reset_u_REG),
    .io_update_target                            (tables_0_io_update_target_r),
    .io_update_old_target                        (tables_0_io_update_old_target_r)
  );
  ITTageTable_1 tables_1 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_valid                                (_tables_4_io_req_valid_T),
    .io_req_bits_pc                              (s1_pc_dup_3),
    .io_req_bits_folded_hist_hist_14_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_14_folded_hist),
    .io_resp_valid                               (_tables_1_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_1_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_1_io_resp_bits_u),
    .io_resp_bits_target                         (_tables_1_io_resp_bits_target),
    .io_update_pc                                (tables_1_io_update_pc_r),
    .io_update_ghist                             (tables_1_io_update_ghist_r),
    .io_update_valid                             (tables_1_io_update_valid_REG),
    .io_update_correct                           (tables_1_io_update_correct_r),
    .io_update_alloc                             (tables_1_io_update_alloc_r),
    .io_update_oldCtr                            (tables_1_io_update_oldCtr_r),
    .io_update_uValid                            (tables_1_io_update_uValid_r),
    .io_update_u                                 (tables_1_io_update_u_r),
    .io_update_reset_u                           (tables_1_io_update_reset_u_REG),
    .io_update_target                            (tables_1_io_update_target_r),
    .io_update_old_target                        (tables_1_io_update_old_target_r)
  );
  ITTageTable_2 tables_2 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_valid                                (_tables_4_io_req_valid_T),
    .io_req_bits_pc                              (s1_pc_dup_3),
    .io_req_bits_folded_hist_hist_13_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_13_folded_hist),
    .io_req_bits_folded_hist_hist_4_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_4_folded_hist),
    .io_resp_valid                               (_tables_2_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_2_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_2_io_resp_bits_u),
    .io_resp_bits_target                         (_tables_2_io_resp_bits_target),
    .io_update_pc                                (tables_2_io_update_pc_r),
    .io_update_ghist                             (tables_2_io_update_ghist_r),
    .io_update_valid                             (tables_2_io_update_valid_REG),
    .io_update_correct                           (tables_2_io_update_correct_r),
    .io_update_alloc                             (tables_2_io_update_alloc_r),
    .io_update_oldCtr                            (tables_2_io_update_oldCtr_r),
    .io_update_uValid                            (tables_2_io_update_uValid_r),
    .io_update_u                                 (tables_2_io_update_u_r),
    .io_update_reset_u                           (tables_2_io_update_reset_u_REG),
    .io_update_target                            (tables_2_io_update_target_r),
    .io_update_old_target                        (tables_2_io_update_old_target_r)
  );
  ITTageTable_3 tables_3 (
    .clock                                      (clock),
    .reset                                      (reset),
    .io_req_valid                               (_tables_4_io_req_valid_T),
    .io_req_bits_pc                             (s1_pc_dup_3),
    .io_req_bits_folded_hist_hist_6_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_6_folded_hist),
    .io_req_bits_folded_hist_hist_2_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_2_folded_hist),
    .io_resp_valid                              (_tables_3_io_resp_valid),
    .io_resp_bits_ctr                           (_tables_3_io_resp_bits_ctr),
    .io_resp_bits_u                             (_tables_3_io_resp_bits_u),
    .io_resp_bits_target                        (_tables_3_io_resp_bits_target),
    .io_update_pc                               (tables_3_io_update_pc_r),
    .io_update_ghist                            (tables_3_io_update_ghist_r),
    .io_update_valid                            (tables_3_io_update_valid_REG),
    .io_update_correct                          (tables_3_io_update_correct_r),
    .io_update_alloc                            (tables_3_io_update_alloc_r),
    .io_update_oldCtr                           (tables_3_io_update_oldCtr_r),
    .io_update_uValid                           (tables_3_io_update_uValid_r),
    .io_update_u                                (tables_3_io_update_u_r),
    .io_update_reset_u                          (tables_3_io_update_reset_u_REG),
    .io_update_target                           (tables_3_io_update_target_r),
    .io_update_old_target                       (tables_3_io_update_old_target_r)
  );
  ITTageTable_4 tables_4 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_valid                                (_tables_4_io_req_valid_T),
    .io_req_bits_pc                              (s1_pc_dup_3),
    .io_req_bits_folded_hist_hist_10_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_10_folded_hist),
    .io_req_bits_folded_hist_hist_3_folded_hist
      (io_in_bits_s1_folded_hist_3_hist_3_folded_hist),
    .io_resp_valid                               (_tables_4_io_resp_valid),
    .io_resp_bits_ctr                            (_tables_4_io_resp_bits_ctr),
    .io_resp_bits_u                              (_tables_4_io_resp_bits_u),
    .io_resp_bits_target                         (_tables_4_io_resp_bits_target),
    .io_update_pc                                (tables_4_io_update_pc_r),
    .io_update_ghist                             (tables_4_io_update_ghist_r),
    .io_update_valid                             (tables_4_io_update_valid_REG),
    .io_update_correct                           (tables_4_io_update_correct_r),
    .io_update_alloc                             (tables_4_io_update_alloc_r),
    .io_update_oldCtr                            (tables_4_io_update_oldCtr_r),
    .io_update_uValid                            (tables_4_io_update_uValid_r),
    .io_update_u                                 (tables_4_io_update_u_r),
    .io_update_reset_u                           (tables_4_io_update_reset_u_REG),
    .io_update_target                            (tables_4_io_update_target_r),
    .io_update_old_target                        (tables_4_io_update_old_target_r)
  );
  MaxPeriodFibonacciLFSR s2_allocLFSR_prng (
    .clock     (clock),
    .reset     (reset),
    .io_out_0  (_s2_allocLFSR_prng_io_out_0),
    .io_out_1  (_s2_allocLFSR_prng_io_out_1),
    .io_out_2  (_s2_allocLFSR_prng_io_out_2),
    .io_out_3  (_s2_allocLFSR_prng_io_out_3),
    .io_out_4  (_s2_allocLFSR_prng_io_out_4),
    .io_out_5  (/* unused */),
    .io_out_6  (/* unused */),
    .io_out_7  (/* unused */),
    .io_out_8  (/* unused */),
    .io_out_9  (/* unused */),
    .io_out_10 (/* unused */),
    .io_out_11 (/* unused */),
    .io_out_12 (/* unused */),
    .io_out_13 (/* unused */),
    .io_out_14 (/* unused */)
  );
  assign io_out_s2_full_pred_0_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_0;
  assign io_out_s2_full_pred_0_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_1;
  assign io_out_s2_full_pred_0_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_0;
  assign io_out_s2_full_pred_0_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_1;
  assign io_out_s2_full_pred_0_targets_0 = io_in_bits_resp_in_0_s2_full_pred_0_targets_0;
  assign io_out_s2_full_pred_0_targets_1 = io_in_bits_resp_in_0_s2_full_pred_0_targets_1;
  assign io_out_s2_full_pred_0_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_0_jalr_target;
  assign io_out_s2_full_pred_0_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_0_offsets_0;
  assign io_out_s2_full_pred_0_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_0_offsets_1;
  assign io_out_s2_full_pred_0_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_0_fallThroughAddr;
  assign io_out_s2_full_pred_0_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_0_is_br_sharing;
  assign io_out_s2_full_pred_0_hit = io_in_bits_resp_in_0_s2_full_pred_0_hit;
  assign io_out_s2_full_pred_1_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_0;
  assign io_out_s2_full_pred_1_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_1;
  assign io_out_s2_full_pred_1_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_0;
  assign io_out_s2_full_pred_1_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_1;
  assign io_out_s2_full_pred_1_targets_0 = io_in_bits_resp_in_0_s2_full_pred_1_targets_0;
  assign io_out_s2_full_pred_1_targets_1 = io_in_bits_resp_in_0_s2_full_pred_1_targets_1;
  assign io_out_s2_full_pred_1_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_1_jalr_target;
  assign io_out_s2_full_pred_1_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_1_offsets_0;
  assign io_out_s2_full_pred_1_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_1_offsets_1;
  assign io_out_s2_full_pred_1_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_1_fallThroughAddr;
  assign io_out_s2_full_pred_1_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_1_is_br_sharing;
  assign io_out_s2_full_pred_1_hit = io_in_bits_resp_in_0_s2_full_pred_1_hit;
  assign io_out_s2_full_pred_2_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_0;
  assign io_out_s2_full_pred_2_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_1;
  assign io_out_s2_full_pred_2_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_0;
  assign io_out_s2_full_pred_2_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_1;
  assign io_out_s2_full_pred_2_targets_0 = io_in_bits_resp_in_0_s2_full_pred_2_targets_0;
  assign io_out_s2_full_pred_2_targets_1 = io_in_bits_resp_in_0_s2_full_pred_2_targets_1;
  assign io_out_s2_full_pred_2_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_2_jalr_target;
  assign io_out_s2_full_pred_2_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_2_offsets_0;
  assign io_out_s2_full_pred_2_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_2_offsets_1;
  assign io_out_s2_full_pred_2_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_2_fallThroughAddr;
  assign io_out_s2_full_pred_2_is_jalr = io_in_bits_resp_in_0_s2_full_pred_2_is_jalr;
  assign io_out_s2_full_pred_2_is_call = io_in_bits_resp_in_0_s2_full_pred_2_is_call;
  assign io_out_s2_full_pred_2_is_ret = io_in_bits_resp_in_0_s2_full_pred_2_is_ret;
  assign io_out_s2_full_pred_2_last_may_be_rvi_call =
    io_in_bits_resp_in_0_s2_full_pred_2_last_may_be_rvi_call;
  assign io_out_s2_full_pred_2_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_2_is_br_sharing;
  assign io_out_s2_full_pred_2_hit = io_in_bits_resp_in_0_s2_full_pred_2_hit;
  assign io_out_s2_full_pred_3_br_taken_mask_0 =
    io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_0;
  assign io_out_s2_full_pred_3_br_taken_mask_1 =
    io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_1;
  assign io_out_s2_full_pred_3_slot_valids_0 =
    io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_0;
  assign io_out_s2_full_pred_3_slot_valids_1 =
    io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_1;
  assign io_out_s2_full_pred_3_targets_0 = io_in_bits_resp_in_0_s2_full_pred_3_targets_0;
  assign io_out_s2_full_pred_3_targets_1 = io_in_bits_resp_in_0_s2_full_pred_3_targets_1;
  assign io_out_s2_full_pred_3_jalr_target =
    io_in_bits_resp_in_0_s2_full_pred_3_jalr_target;
  assign io_out_s2_full_pred_3_offsets_0 = io_in_bits_resp_in_0_s2_full_pred_3_offsets_0;
  assign io_out_s2_full_pred_3_offsets_1 = io_in_bits_resp_in_0_s2_full_pred_3_offsets_1;
  assign io_out_s2_full_pred_3_fallThroughAddr =
    io_in_bits_resp_in_0_s2_full_pred_3_fallThroughAddr;
  assign io_out_s2_full_pred_3_fallThroughErr =
    io_in_bits_resp_in_0_s2_full_pred_3_fallThroughErr;
  assign io_out_s2_full_pred_3_is_br_sharing =
    io_in_bits_resp_in_0_s2_full_pred_3_is_br_sharing;
  assign io_out_s2_full_pred_3_hit = io_in_bits_resp_in_0_s2_full_pred_3_hit;
  assign io_out_s3_full_pred_0_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_0;
  assign io_out_s3_full_pred_0_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_1;
  assign io_out_s3_full_pred_0_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_0;
  assign io_out_s3_full_pred_0_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_1;
  assign io_out_s3_full_pred_0_targets_0 = io_in_bits_resp_in_0_s3_full_pred_0_targets_0;
  assign io_out_s3_full_pred_0_targets_1 = io_in_bits_resp_in_0_s3_full_pred_0_targets_1;
  assign io_out_s3_full_pred_0_jalr_target = s3_tageTarget_dup_0;
  assign io_out_s3_full_pred_0_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_0_fallThroughAddr;
  assign io_out_s3_full_pred_0_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_0_fallThroughErr;
  assign io_out_s3_full_pred_0_multiHit = io_in_bits_resp_in_0_s3_full_pred_0_multiHit;
  assign io_out_s3_full_pred_0_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_0_is_br_sharing;
  assign io_out_s3_full_pred_0_hit = io_in_bits_resp_in_0_s3_full_pred_0_hit;
  assign io_out_s3_full_pred_1_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_0;
  assign io_out_s3_full_pred_1_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_1;
  assign io_out_s3_full_pred_1_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_0;
  assign io_out_s3_full_pred_1_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_1;
  assign io_out_s3_full_pred_1_targets_0 = io_in_bits_resp_in_0_s3_full_pred_1_targets_0;
  assign io_out_s3_full_pred_1_targets_1 = io_in_bits_resp_in_0_s3_full_pred_1_targets_1;
  assign io_out_s3_full_pred_1_jalr_target = s3_tageTarget_dup_1;
  assign io_out_s3_full_pred_1_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_1_fallThroughAddr;
  assign io_out_s3_full_pred_1_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_1_fallThroughErr;
  assign io_out_s3_full_pred_1_multiHit = io_in_bits_resp_in_0_s3_full_pred_1_multiHit;
  assign io_out_s3_full_pred_1_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_1_is_br_sharing;
  assign io_out_s3_full_pred_1_hit = io_in_bits_resp_in_0_s3_full_pred_1_hit;
  assign io_out_s3_full_pred_2_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_0;
  assign io_out_s3_full_pred_2_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_1;
  assign io_out_s3_full_pred_2_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_0;
  assign io_out_s3_full_pred_2_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_1;
  assign io_out_s3_full_pred_2_targets_0 = io_in_bits_resp_in_0_s3_full_pred_2_targets_0;
  assign io_out_s3_full_pred_2_targets_1 = io_in_bits_resp_in_0_s3_full_pred_2_targets_1;
  assign io_out_s3_full_pred_2_jalr_target = s3_tageTarget_dup_2;
  assign io_out_s3_full_pred_2_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_2_fallThroughAddr;
  assign io_out_s3_full_pred_2_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_2_fallThroughErr;
  assign io_out_s3_full_pred_2_multiHit = io_in_bits_resp_in_0_s3_full_pred_2_multiHit;
  assign io_out_s3_full_pred_2_is_jalr = io_in_bits_resp_in_0_s3_full_pred_2_is_jalr;
  assign io_out_s3_full_pred_2_is_call = io_in_bits_resp_in_0_s3_full_pred_2_is_call;
  assign io_out_s3_full_pred_2_is_ret = io_in_bits_resp_in_0_s3_full_pred_2_is_ret;
  assign io_out_s3_full_pred_2_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_2_is_br_sharing;
  assign io_out_s3_full_pred_2_hit = io_in_bits_resp_in_0_s3_full_pred_2_hit;
  assign io_out_s3_full_pred_3_br_taken_mask_0 =
    io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_0;
  assign io_out_s3_full_pred_3_br_taken_mask_1 =
    io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_1;
  assign io_out_s3_full_pred_3_slot_valids_0 =
    io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_0;
  assign io_out_s3_full_pred_3_slot_valids_1 =
    io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_1;
  assign io_out_s3_full_pred_3_targets_0 = io_in_bits_resp_in_0_s3_full_pred_3_targets_0;
  assign io_out_s3_full_pred_3_targets_1 = io_in_bits_resp_in_0_s3_full_pred_3_targets_1;
  assign io_out_s3_full_pred_3_jalr_target = s3_tageTarget_dup_3;
  assign io_out_s3_full_pred_3_offsets_0 = io_in_bits_resp_in_0_s3_full_pred_3_offsets_0;
  assign io_out_s3_full_pred_3_offsets_1 = io_in_bits_resp_in_0_s3_full_pred_3_offsets_1;
  assign io_out_s3_full_pred_3_fallThroughAddr =
    io_in_bits_resp_in_0_s3_full_pred_3_fallThroughAddr;
  assign io_out_s3_full_pred_3_fallThroughErr =
    io_in_bits_resp_in_0_s3_full_pred_3_fallThroughErr;
  assign io_out_s3_full_pred_3_multiHit = io_in_bits_resp_in_0_s3_full_pred_3_multiHit;
  assign io_out_s3_full_pred_3_is_br_sharing =
    io_in_bits_resp_in_0_s3_full_pred_3_is_br_sharing;
  assign io_out_s3_full_pred_3_hit = io_in_bits_resp_in_0_s3_full_pred_3_hit;
  assign io_out_last_stage_meta =
    {161'h0,
     s3_provided,
     s3_provider,
     s3_altProvided,
     s3_altProvider,
     s3_providerU,
     s3_providerCtr,
     s3_altProviderCtr,
     resp_meta_allocate_valid_r,
     resp_meta_allocate_bits_r,
     s3_providerTarget,
     s3_altProviderTarget};
  assign io_out_last_stage_ftb_entry_isCall =
    io_in_bits_resp_in_0_last_stage_ftb_entry_isCall;
  assign io_out_last_stage_ftb_entry_isRet =
    io_in_bits_resp_in_0_last_stage_ftb_entry_isRet;
  assign io_out_last_stage_ftb_entry_isJalr =
    io_in_bits_resp_in_0_last_stage_ftb_entry_isJalr;
  assign io_out_last_stage_ftb_entry_valid =
    io_in_bits_resp_in_0_last_stage_ftb_entry_valid;
  assign io_out_last_stage_ftb_entry_brSlots_0_offset =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_offset;
  assign io_out_last_stage_ftb_entry_brSlots_0_sharing =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_sharing;
  assign io_out_last_stage_ftb_entry_brSlots_0_valid =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_valid;
  assign io_out_last_stage_ftb_entry_brSlots_0_lower =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_lower;
  assign io_out_last_stage_ftb_entry_brSlots_0_tarStat =
    io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_tarStat;
  assign io_out_last_stage_ftb_entry_tailSlot_offset =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_offset;
  assign io_out_last_stage_ftb_entry_tailSlot_sharing =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_sharing;
  assign io_out_last_stage_ftb_entry_tailSlot_valid =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_valid;
  assign io_out_last_stage_ftb_entry_tailSlot_lower =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_lower;
  assign io_out_last_stage_ftb_entry_tailSlot_tarStat =
    io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_tarStat;
  assign io_out_last_stage_ftb_entry_pftAddr =
    io_in_bits_resp_in_0_last_stage_ftb_entry_pftAddr;
  assign io_out_last_stage_ftb_entry_carry =
    io_in_bits_resp_in_0_last_stage_ftb_entry_carry;
  assign io_out_last_stage_ftb_entry_last_may_be_rvi_call =
    io_in_bits_resp_in_0_last_stage_ftb_entry_last_may_be_rvi_call;
  assign io_out_last_stage_ftb_entry_always_taken_0 =
    io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_0;
  assign io_out_last_stage_ftb_entry_always_taken_1 =
    io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_1;
endmodule

