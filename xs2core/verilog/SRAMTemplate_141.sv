// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SRAMTemplate_141(
  input        clock,
  output       io_r_req_ready,
  input        io_r_req_valid,
  input  [8:0] io_r_req_bits_setIdx,
  output       io_r_resp_data_0_dirty,
  output [1:0] io_r_resp_data_0_state,
  output       io_r_resp_data_0_clients,
  output       io_r_resp_data_0_alias,
  output       io_r_resp_data_0_prefetch,
  output [2:0] io_r_resp_data_0_prefetchSrc,
  output       io_r_resp_data_0_accessed,
  output       io_r_resp_data_1_dirty,
  output [1:0] io_r_resp_data_1_state,
  output       io_r_resp_data_1_clients,
  output       io_r_resp_data_1_alias,
  output       io_r_resp_data_1_prefetch,
  output [2:0] io_r_resp_data_1_prefetchSrc,
  output       io_r_resp_data_1_accessed,
  output       io_r_resp_data_2_dirty,
  output [1:0] io_r_resp_data_2_state,
  output       io_r_resp_data_2_clients,
  output       io_r_resp_data_2_alias,
  output       io_r_resp_data_2_prefetch,
  output [2:0] io_r_resp_data_2_prefetchSrc,
  output       io_r_resp_data_2_accessed,
  output       io_r_resp_data_3_dirty,
  output [1:0] io_r_resp_data_3_state,
  output       io_r_resp_data_3_clients,
  output       io_r_resp_data_3_alias,
  output       io_r_resp_data_3_prefetch,
  output [2:0] io_r_resp_data_3_prefetchSrc,
  output       io_r_resp_data_3_accessed,
  output       io_r_resp_data_4_dirty,
  output [1:0] io_r_resp_data_4_state,
  output       io_r_resp_data_4_clients,
  output       io_r_resp_data_4_alias,
  output       io_r_resp_data_4_prefetch,
  output [2:0] io_r_resp_data_4_prefetchSrc,
  output       io_r_resp_data_4_accessed,
  output       io_r_resp_data_5_dirty,
  output [1:0] io_r_resp_data_5_state,
  output       io_r_resp_data_5_clients,
  output       io_r_resp_data_5_alias,
  output       io_r_resp_data_5_prefetch,
  output [2:0] io_r_resp_data_5_prefetchSrc,
  output       io_r_resp_data_5_accessed,
  output       io_r_resp_data_6_dirty,
  output [1:0] io_r_resp_data_6_state,
  output       io_r_resp_data_6_clients,
  output       io_r_resp_data_6_alias,
  output       io_r_resp_data_6_prefetch,
  output [2:0] io_r_resp_data_6_prefetchSrc,
  output       io_r_resp_data_6_accessed,
  output       io_r_resp_data_7_dirty,
  output [1:0] io_r_resp_data_7_state,
  output       io_r_resp_data_7_clients,
  output       io_r_resp_data_7_alias,
  output       io_r_resp_data_7_prefetch,
  output [2:0] io_r_resp_data_7_prefetchSrc,
  output       io_r_resp_data_7_accessed,
  output       io_w_req_ready,
  input        io_w_req_valid,
  input  [8:0] io_w_req_bits_setIdx,
  input        io_w_req_bits_data_0_dirty,
  input  [1:0] io_w_req_bits_data_0_state,
  input        io_w_req_bits_data_0_clients,
  input        io_w_req_bits_data_0_alias,
  input        io_w_req_bits_data_0_prefetch,
  input  [2:0] io_w_req_bits_data_0_prefetchSrc,
  input        io_w_req_bits_data_0_accessed,
  input        io_w_req_bits_data_1_dirty,
  input  [1:0] io_w_req_bits_data_1_state,
  input        io_w_req_bits_data_1_clients,
  input        io_w_req_bits_data_1_alias,
  input        io_w_req_bits_data_1_prefetch,
  input  [2:0] io_w_req_bits_data_1_prefetchSrc,
  input        io_w_req_bits_data_1_accessed,
  input        io_w_req_bits_data_2_dirty,
  input  [1:0] io_w_req_bits_data_2_state,
  input        io_w_req_bits_data_2_clients,
  input        io_w_req_bits_data_2_alias,
  input        io_w_req_bits_data_2_prefetch,
  input  [2:0] io_w_req_bits_data_2_prefetchSrc,
  input        io_w_req_bits_data_2_accessed,
  input        io_w_req_bits_data_3_dirty,
  input  [1:0] io_w_req_bits_data_3_state,
  input        io_w_req_bits_data_3_clients,
  input        io_w_req_bits_data_3_alias,
  input        io_w_req_bits_data_3_prefetch,
  input  [2:0] io_w_req_bits_data_3_prefetchSrc,
  input        io_w_req_bits_data_3_accessed,
  input        io_w_req_bits_data_4_dirty,
  input  [1:0] io_w_req_bits_data_4_state,
  input        io_w_req_bits_data_4_clients,
  input        io_w_req_bits_data_4_alias,
  input        io_w_req_bits_data_4_prefetch,
  input  [2:0] io_w_req_bits_data_4_prefetchSrc,
  input        io_w_req_bits_data_4_accessed,
  input        io_w_req_bits_data_5_dirty,
  input  [1:0] io_w_req_bits_data_5_state,
  input        io_w_req_bits_data_5_clients,
  input        io_w_req_bits_data_5_alias,
  input        io_w_req_bits_data_5_prefetch,
  input  [2:0] io_w_req_bits_data_5_prefetchSrc,
  input        io_w_req_bits_data_5_accessed,
  input        io_w_req_bits_data_6_dirty,
  input  [1:0] io_w_req_bits_data_6_state,
  input        io_w_req_bits_data_6_clients,
  input        io_w_req_bits_data_6_alias,
  input        io_w_req_bits_data_6_prefetch,
  input  [2:0] io_w_req_bits_data_6_prefetchSrc,
  input        io_w_req_bits_data_6_accessed,
  input        io_w_req_bits_data_7_dirty,
  input  [1:0] io_w_req_bits_data_7_state,
  input        io_w_req_bits_data_7_clients,
  input        io_w_req_bits_data_7_alias,
  input        io_w_req_bits_data_7_prefetch,
  input  [2:0] io_w_req_bits_data_7_prefetchSrc,
  input        io_w_req_bits_data_7_accessed,
  input  [7:0] io_w_req_bits_waymask
);

  wire        realRen;
  wire [79:0] _array_RW0_rdata;
  assign realRen = io_r_req_valid & ~io_w_req_valid;
  array_14 array (
    .RW0_addr  (io_w_req_valid ? io_w_req_bits_setIdx : io_r_req_bits_setIdx),
    .RW0_en    (realRen | io_w_req_valid),
    .RW0_clk   (clock),
    .RW0_wmode (io_w_req_valid),
    .RW0_wdata
      ({io_w_req_bits_data_7_dirty,
        io_w_req_bits_data_7_state,
        io_w_req_bits_data_7_clients,
        io_w_req_bits_data_7_alias,
        io_w_req_bits_data_7_prefetch,
        io_w_req_bits_data_7_prefetchSrc,
        io_w_req_bits_data_7_accessed,
        io_w_req_bits_data_6_dirty,
        io_w_req_bits_data_6_state,
        io_w_req_bits_data_6_clients,
        io_w_req_bits_data_6_alias,
        io_w_req_bits_data_6_prefetch,
        io_w_req_bits_data_6_prefetchSrc,
        io_w_req_bits_data_6_accessed,
        io_w_req_bits_data_5_dirty,
        io_w_req_bits_data_5_state,
        io_w_req_bits_data_5_clients,
        io_w_req_bits_data_5_alias,
        io_w_req_bits_data_5_prefetch,
        io_w_req_bits_data_5_prefetchSrc,
        io_w_req_bits_data_5_accessed,
        io_w_req_bits_data_4_dirty,
        io_w_req_bits_data_4_state,
        io_w_req_bits_data_4_clients,
        io_w_req_bits_data_4_alias,
        io_w_req_bits_data_4_prefetch,
        io_w_req_bits_data_4_prefetchSrc,
        io_w_req_bits_data_4_accessed,
        io_w_req_bits_data_3_dirty,
        io_w_req_bits_data_3_state,
        io_w_req_bits_data_3_clients,
        io_w_req_bits_data_3_alias,
        io_w_req_bits_data_3_prefetch,
        io_w_req_bits_data_3_prefetchSrc,
        io_w_req_bits_data_3_accessed,
        io_w_req_bits_data_2_dirty,
        io_w_req_bits_data_2_state,
        io_w_req_bits_data_2_clients,
        io_w_req_bits_data_2_alias,
        io_w_req_bits_data_2_prefetch,
        io_w_req_bits_data_2_prefetchSrc,
        io_w_req_bits_data_2_accessed,
        io_w_req_bits_data_1_dirty,
        io_w_req_bits_data_1_state,
        io_w_req_bits_data_1_clients,
        io_w_req_bits_data_1_alias,
        io_w_req_bits_data_1_prefetch,
        io_w_req_bits_data_1_prefetchSrc,
        io_w_req_bits_data_1_accessed,
        io_w_req_bits_data_0_dirty,
        io_w_req_bits_data_0_state,
        io_w_req_bits_data_0_clients,
        io_w_req_bits_data_0_alias,
        io_w_req_bits_data_0_prefetch,
        io_w_req_bits_data_0_prefetchSrc,
        io_w_req_bits_data_0_accessed}),
    .RW0_rdata (_array_RW0_rdata),
    .RW0_wmask (io_w_req_bits_waymask)
  );
  assign io_r_req_ready = ~io_w_req_valid;
  assign io_r_resp_data_0_dirty = _array_RW0_rdata[9];
  assign io_r_resp_data_0_state = _array_RW0_rdata[8:7];
  assign io_r_resp_data_0_clients = _array_RW0_rdata[6];
  assign io_r_resp_data_0_alias = _array_RW0_rdata[5];
  assign io_r_resp_data_0_prefetch = _array_RW0_rdata[4];
  assign io_r_resp_data_0_prefetchSrc = _array_RW0_rdata[3:1];
  assign io_r_resp_data_0_accessed = _array_RW0_rdata[0];
  assign io_r_resp_data_1_dirty = _array_RW0_rdata[19];
  assign io_r_resp_data_1_state = _array_RW0_rdata[18:17];
  assign io_r_resp_data_1_clients = _array_RW0_rdata[16];
  assign io_r_resp_data_1_alias = _array_RW0_rdata[15];
  assign io_r_resp_data_1_prefetch = _array_RW0_rdata[14];
  assign io_r_resp_data_1_prefetchSrc = _array_RW0_rdata[13:11];
  assign io_r_resp_data_1_accessed = _array_RW0_rdata[10];
  assign io_r_resp_data_2_dirty = _array_RW0_rdata[29];
  assign io_r_resp_data_2_state = _array_RW0_rdata[28:27];
  assign io_r_resp_data_2_clients = _array_RW0_rdata[26];
  assign io_r_resp_data_2_alias = _array_RW0_rdata[25];
  assign io_r_resp_data_2_prefetch = _array_RW0_rdata[24];
  assign io_r_resp_data_2_prefetchSrc = _array_RW0_rdata[23:21];
  assign io_r_resp_data_2_accessed = _array_RW0_rdata[20];
  assign io_r_resp_data_3_dirty = _array_RW0_rdata[39];
  assign io_r_resp_data_3_state = _array_RW0_rdata[38:37];
  assign io_r_resp_data_3_clients = _array_RW0_rdata[36];
  assign io_r_resp_data_3_alias = _array_RW0_rdata[35];
  assign io_r_resp_data_3_prefetch = _array_RW0_rdata[34];
  assign io_r_resp_data_3_prefetchSrc = _array_RW0_rdata[33:31];
  assign io_r_resp_data_3_accessed = _array_RW0_rdata[30];
  assign io_r_resp_data_4_dirty = _array_RW0_rdata[49];
  assign io_r_resp_data_4_state = _array_RW0_rdata[48:47];
  assign io_r_resp_data_4_clients = _array_RW0_rdata[46];
  assign io_r_resp_data_4_alias = _array_RW0_rdata[45];
  assign io_r_resp_data_4_prefetch = _array_RW0_rdata[44];
  assign io_r_resp_data_4_prefetchSrc = _array_RW0_rdata[43:41];
  assign io_r_resp_data_4_accessed = _array_RW0_rdata[40];
  assign io_r_resp_data_5_dirty = _array_RW0_rdata[59];
  assign io_r_resp_data_5_state = _array_RW0_rdata[58:57];
  assign io_r_resp_data_5_clients = _array_RW0_rdata[56];
  assign io_r_resp_data_5_alias = _array_RW0_rdata[55];
  assign io_r_resp_data_5_prefetch = _array_RW0_rdata[54];
  assign io_r_resp_data_5_prefetchSrc = _array_RW0_rdata[53:51];
  assign io_r_resp_data_5_accessed = _array_RW0_rdata[50];
  assign io_r_resp_data_6_dirty = _array_RW0_rdata[69];
  assign io_r_resp_data_6_state = _array_RW0_rdata[68:67];
  assign io_r_resp_data_6_clients = _array_RW0_rdata[66];
  assign io_r_resp_data_6_alias = _array_RW0_rdata[65];
  assign io_r_resp_data_6_prefetch = _array_RW0_rdata[64];
  assign io_r_resp_data_6_prefetchSrc = _array_RW0_rdata[63:61];
  assign io_r_resp_data_6_accessed = _array_RW0_rdata[60];
  assign io_r_resp_data_7_dirty = _array_RW0_rdata[79];
  assign io_r_resp_data_7_state = _array_RW0_rdata[78:77];
  assign io_r_resp_data_7_clients = _array_RW0_rdata[76];
  assign io_r_resp_data_7_alias = _array_RW0_rdata[75];
  assign io_r_resp_data_7_prefetch = _array_RW0_rdata[74];
  assign io_r_resp_data_7_prefetchSrc = _array_RW0_rdata[73:71];
  assign io_r_resp_data_7_accessed = _array_RW0_rdata[70];
  assign io_w_req_ready = 1'h1;
endmodule

