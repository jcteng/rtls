// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module PrefetchQueue_2(
  input         clock,
  input         reset,
  input         io_enq_valid,
  input  [17:0] io_enq_bits_tag,
  input  [11:0] io_enq_bits_set,
  input         io_deq_ready,
  output        io_deq_valid,
  output [17:0] io_deq_bits_tag,
  output [11:0] io_deq_bits_set,
  output [3:0]  io_deq_bits_pfSource
);

  reg  [17:0]       queue_0_tag;
  reg  [11:0]       queue_0_set;
  reg  [3:0]        queue_0_pfSource;
  reg  [17:0]       queue_1_tag;
  reg  [11:0]       queue_1_set;
  reg  [3:0]        queue_1_pfSource;
  reg  [17:0]       queue_2_tag;
  reg  [11:0]       queue_2_set;
  reg  [3:0]        queue_2_pfSource;
  reg  [17:0]       queue_3_tag;
  reg  [11:0]       queue_3_set;
  reg  [3:0]        queue_3_pfSource;
  reg  [17:0]       queue_4_tag;
  reg  [11:0]       queue_4_set;
  reg  [3:0]        queue_4_pfSource;
  reg  [17:0]       queue_5_tag;
  reg  [11:0]       queue_5_set;
  reg  [3:0]        queue_5_pfSource;
  reg  [17:0]       queue_6_tag;
  reg  [11:0]       queue_6_set;
  reg  [3:0]        queue_6_pfSource;
  reg  [17:0]       queue_7_tag;
  reg  [11:0]       queue_7_set;
  reg  [3:0]        queue_7_pfSource;
  reg  [17:0]       queue_8_tag;
  reg  [11:0]       queue_8_set;
  reg  [3:0]        queue_8_pfSource;
  reg  [17:0]       queue_9_tag;
  reg  [11:0]       queue_9_set;
  reg  [3:0]        queue_9_pfSource;
  reg  [17:0]       queue_10_tag;
  reg  [11:0]       queue_10_set;
  reg  [3:0]        queue_10_pfSource;
  reg  [17:0]       queue_11_tag;
  reg  [11:0]       queue_11_set;
  reg  [3:0]        queue_11_pfSource;
  reg  [17:0]       queue_12_tag;
  reg  [11:0]       queue_12_set;
  reg  [3:0]        queue_12_pfSource;
  reg  [17:0]       queue_13_tag;
  reg  [11:0]       queue_13_set;
  reg  [3:0]        queue_13_pfSource;
  reg  [17:0]       queue_14_tag;
  reg  [11:0]       queue_14_set;
  reg  [3:0]        queue_14_pfSource;
  reg  [17:0]       queue_15_tag;
  reg  [11:0]       queue_15_set;
  reg  [3:0]        queue_15_pfSource;
  reg  [17:0]       queue_16_tag;
  reg  [11:0]       queue_16_set;
  reg  [3:0]        queue_16_pfSource;
  reg  [17:0]       queue_17_tag;
  reg  [11:0]       queue_17_set;
  reg  [3:0]        queue_17_pfSource;
  reg  [17:0]       queue_18_tag;
  reg  [11:0]       queue_18_set;
  reg  [3:0]        queue_18_pfSource;
  reg  [17:0]       queue_19_tag;
  reg  [11:0]       queue_19_set;
  reg  [3:0]        queue_19_pfSource;
  reg  [17:0]       queue_20_tag;
  reg  [11:0]       queue_20_set;
  reg  [3:0]        queue_20_pfSource;
  reg  [17:0]       queue_21_tag;
  reg  [11:0]       queue_21_set;
  reg  [3:0]        queue_21_pfSource;
  reg  [17:0]       queue_22_tag;
  reg  [11:0]       queue_22_set;
  reg  [3:0]        queue_22_pfSource;
  reg  [17:0]       queue_23_tag;
  reg  [11:0]       queue_23_set;
  reg  [3:0]        queue_23_pfSource;
  reg  [17:0]       queue_24_tag;
  reg  [11:0]       queue_24_set;
  reg  [3:0]        queue_24_pfSource;
  reg  [17:0]       queue_25_tag;
  reg  [11:0]       queue_25_set;
  reg  [3:0]        queue_25_pfSource;
  reg  [17:0]       queue_26_tag;
  reg  [11:0]       queue_26_set;
  reg  [3:0]        queue_26_pfSource;
  reg  [17:0]       queue_27_tag;
  reg  [11:0]       queue_27_set;
  reg  [3:0]        queue_27_pfSource;
  reg  [17:0]       queue_28_tag;
  reg  [11:0]       queue_28_set;
  reg  [3:0]        queue_28_pfSource;
  reg  [17:0]       queue_29_tag;
  reg  [11:0]       queue_29_set;
  reg  [3:0]        queue_29_pfSource;
  reg  [17:0]       queue_30_tag;
  reg  [11:0]       queue_30_set;
  reg  [3:0]        queue_30_pfSource;
  reg  [17:0]       queue_31_tag;
  reg  [11:0]       queue_31_set;
  reg  [3:0]        queue_31_pfSource;
  reg               valids_31;
  reg  [4:0]        head;
  reg  [4:0]        tail;
  wire              _full_T = head == tail;
  wire              empty = _full_T & ~valids_31;
  wire [31:0][17:0] _GEN =
    {{queue_31_tag},
     {queue_30_tag},
     {queue_29_tag},
     {queue_28_tag},
     {queue_27_tag},
     {queue_26_tag},
     {queue_25_tag},
     {queue_24_tag},
     {queue_23_tag},
     {queue_22_tag},
     {queue_21_tag},
     {queue_20_tag},
     {queue_19_tag},
     {queue_18_tag},
     {queue_17_tag},
     {queue_16_tag},
     {queue_15_tag},
     {queue_14_tag},
     {queue_13_tag},
     {queue_12_tag},
     {queue_11_tag},
     {queue_10_tag},
     {queue_9_tag},
     {queue_8_tag},
     {queue_7_tag},
     {queue_6_tag},
     {queue_5_tag},
     {queue_4_tag},
     {queue_3_tag},
     {queue_2_tag},
     {queue_1_tag},
     {queue_0_tag}};
  wire [31:0][11:0] _GEN_0 =
    {{queue_31_set},
     {queue_30_set},
     {queue_29_set},
     {queue_28_set},
     {queue_27_set},
     {queue_26_set},
     {queue_25_set},
     {queue_24_set},
     {queue_23_set},
     {queue_22_set},
     {queue_21_set},
     {queue_20_set},
     {queue_19_set},
     {queue_18_set},
     {queue_17_set},
     {queue_16_set},
     {queue_15_set},
     {queue_14_set},
     {queue_13_set},
     {queue_12_set},
     {queue_11_set},
     {queue_10_set},
     {queue_9_set},
     {queue_8_set},
     {queue_7_set},
     {queue_6_set},
     {queue_5_set},
     {queue_4_set},
     {queue_3_set},
     {queue_2_set},
     {queue_1_set},
     {queue_0_set}};
  wire [31:0][3:0]  _GEN_1 =
    {{queue_31_pfSource},
     {queue_30_pfSource},
     {queue_29_pfSource},
     {queue_28_pfSource},
     {queue_27_pfSource},
     {queue_26_pfSource},
     {queue_25_pfSource},
     {queue_24_pfSource},
     {queue_23_pfSource},
     {queue_22_pfSource},
     {queue_21_pfSource},
     {queue_20_pfSource},
     {queue_19_pfSource},
     {queue_18_pfSource},
     {queue_17_pfSource},
     {queue_16_pfSource},
     {queue_15_pfSource},
     {queue_14_pfSource},
     {queue_13_pfSource},
     {queue_12_pfSource},
     {queue_11_pfSource},
     {queue_10_pfSource},
     {queue_9_pfSource},
     {queue_8_pfSource},
     {queue_7_pfSource},
     {queue_6_pfSource},
     {queue_5_pfSource},
     {queue_4_pfSource},
     {queue_3_pfSource},
     {queue_2_pfSource},
     {queue_1_pfSource},
     {queue_0_pfSource}};
  wire              _GEN_2 = ~empty & io_deq_ready;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      queue_0_tag <= 18'h0;
      queue_0_set <= 12'h0;
      queue_0_pfSource <= 4'h0;
      queue_1_tag <= 18'h0;
      queue_1_set <= 12'h0;
      queue_1_pfSource <= 4'h0;
      queue_2_tag <= 18'h0;
      queue_2_set <= 12'h0;
      queue_2_pfSource <= 4'h0;
      queue_3_tag <= 18'h0;
      queue_3_set <= 12'h0;
      queue_3_pfSource <= 4'h0;
      queue_4_tag <= 18'h0;
      queue_4_set <= 12'h0;
      queue_4_pfSource <= 4'h0;
      queue_5_tag <= 18'h0;
      queue_5_set <= 12'h0;
      queue_5_pfSource <= 4'h0;
      queue_6_tag <= 18'h0;
      queue_6_set <= 12'h0;
      queue_6_pfSource <= 4'h0;
      queue_7_tag <= 18'h0;
      queue_7_set <= 12'h0;
      queue_7_pfSource <= 4'h0;
      queue_8_tag <= 18'h0;
      queue_8_set <= 12'h0;
      queue_8_pfSource <= 4'h0;
      queue_9_tag <= 18'h0;
      queue_9_set <= 12'h0;
      queue_9_pfSource <= 4'h0;
      queue_10_tag <= 18'h0;
      queue_10_set <= 12'h0;
      queue_10_pfSource <= 4'h0;
      queue_11_tag <= 18'h0;
      queue_11_set <= 12'h0;
      queue_11_pfSource <= 4'h0;
      queue_12_tag <= 18'h0;
      queue_12_set <= 12'h0;
      queue_12_pfSource <= 4'h0;
      queue_13_tag <= 18'h0;
      queue_13_set <= 12'h0;
      queue_13_pfSource <= 4'h0;
      queue_14_tag <= 18'h0;
      queue_14_set <= 12'h0;
      queue_14_pfSource <= 4'h0;
      queue_15_tag <= 18'h0;
      queue_15_set <= 12'h0;
      queue_15_pfSource <= 4'h0;
      queue_16_tag <= 18'h0;
      queue_16_set <= 12'h0;
      queue_16_pfSource <= 4'h0;
      queue_17_tag <= 18'h0;
      queue_17_set <= 12'h0;
      queue_17_pfSource <= 4'h0;
      queue_18_tag <= 18'h0;
      queue_18_set <= 12'h0;
      queue_18_pfSource <= 4'h0;
      queue_19_tag <= 18'h0;
      queue_19_set <= 12'h0;
      queue_19_pfSource <= 4'h0;
      queue_20_tag <= 18'h0;
      queue_20_set <= 12'h0;
      queue_20_pfSource <= 4'h0;
      queue_21_tag <= 18'h0;
      queue_21_set <= 12'h0;
      queue_21_pfSource <= 4'h0;
      queue_22_tag <= 18'h0;
      queue_22_set <= 12'h0;
      queue_22_pfSource <= 4'h0;
      queue_23_tag <= 18'h0;
      queue_23_set <= 12'h0;
      queue_23_pfSource <= 4'h0;
      queue_24_tag <= 18'h0;
      queue_24_set <= 12'h0;
      queue_24_pfSource <= 4'h0;
      queue_25_tag <= 18'h0;
      queue_25_set <= 12'h0;
      queue_25_pfSource <= 4'h0;
      queue_26_tag <= 18'h0;
      queue_26_set <= 12'h0;
      queue_26_pfSource <= 4'h0;
      queue_27_tag <= 18'h0;
      queue_27_set <= 12'h0;
      queue_27_pfSource <= 4'h0;
      queue_28_tag <= 18'h0;
      queue_28_set <= 12'h0;
      queue_28_pfSource <= 4'h0;
      queue_29_tag <= 18'h0;
      queue_29_set <= 12'h0;
      queue_29_pfSource <= 4'h0;
      queue_30_tag <= 18'h0;
      queue_30_set <= 12'h0;
      queue_30_pfSource <= 4'h0;
      queue_31_tag <= 18'h0;
      queue_31_set <= 12'h0;
      queue_31_pfSource <= 4'h0;
      valids_31 <= 1'h0;
      head <= 5'h0;
      tail <= 5'h0;
    end
    else begin
      if (io_enq_valid & tail == 5'h0) begin
        queue_0_tag <= io_enq_bits_tag;
        queue_0_set <= io_enq_bits_set;
        queue_0_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h1) begin
        queue_1_tag <= io_enq_bits_tag;
        queue_1_set <= io_enq_bits_set;
        queue_1_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h2) begin
        queue_2_tag <= io_enq_bits_tag;
        queue_2_set <= io_enq_bits_set;
        queue_2_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h3) begin
        queue_3_tag <= io_enq_bits_tag;
        queue_3_set <= io_enq_bits_set;
        queue_3_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h4) begin
        queue_4_tag <= io_enq_bits_tag;
        queue_4_set <= io_enq_bits_set;
        queue_4_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h5) begin
        queue_5_tag <= io_enq_bits_tag;
        queue_5_set <= io_enq_bits_set;
        queue_5_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h6) begin
        queue_6_tag <= io_enq_bits_tag;
        queue_6_set <= io_enq_bits_set;
        queue_6_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h7) begin
        queue_7_tag <= io_enq_bits_tag;
        queue_7_set <= io_enq_bits_set;
        queue_7_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h8) begin
        queue_8_tag <= io_enq_bits_tag;
        queue_8_set <= io_enq_bits_set;
        queue_8_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h9) begin
        queue_9_tag <= io_enq_bits_tag;
        queue_9_set <= io_enq_bits_set;
        queue_9_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'hA) begin
        queue_10_tag <= io_enq_bits_tag;
        queue_10_set <= io_enq_bits_set;
        queue_10_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'hB) begin
        queue_11_tag <= io_enq_bits_tag;
        queue_11_set <= io_enq_bits_set;
        queue_11_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'hC) begin
        queue_12_tag <= io_enq_bits_tag;
        queue_12_set <= io_enq_bits_set;
        queue_12_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'hD) begin
        queue_13_tag <= io_enq_bits_tag;
        queue_13_set <= io_enq_bits_set;
        queue_13_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'hE) begin
        queue_14_tag <= io_enq_bits_tag;
        queue_14_set <= io_enq_bits_set;
        queue_14_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'hF) begin
        queue_15_tag <= io_enq_bits_tag;
        queue_15_set <= io_enq_bits_set;
        queue_15_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h10) begin
        queue_16_tag <= io_enq_bits_tag;
        queue_16_set <= io_enq_bits_set;
        queue_16_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h11) begin
        queue_17_tag <= io_enq_bits_tag;
        queue_17_set <= io_enq_bits_set;
        queue_17_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h12) begin
        queue_18_tag <= io_enq_bits_tag;
        queue_18_set <= io_enq_bits_set;
        queue_18_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h13) begin
        queue_19_tag <= io_enq_bits_tag;
        queue_19_set <= io_enq_bits_set;
        queue_19_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h14) begin
        queue_20_tag <= io_enq_bits_tag;
        queue_20_set <= io_enq_bits_set;
        queue_20_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h15) begin
        queue_21_tag <= io_enq_bits_tag;
        queue_21_set <= io_enq_bits_set;
        queue_21_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h16) begin
        queue_22_tag <= io_enq_bits_tag;
        queue_22_set <= io_enq_bits_set;
        queue_22_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h17) begin
        queue_23_tag <= io_enq_bits_tag;
        queue_23_set <= io_enq_bits_set;
        queue_23_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h18) begin
        queue_24_tag <= io_enq_bits_tag;
        queue_24_set <= io_enq_bits_set;
        queue_24_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h19) begin
        queue_25_tag <= io_enq_bits_tag;
        queue_25_set <= io_enq_bits_set;
        queue_25_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h1A) begin
        queue_26_tag <= io_enq_bits_tag;
        queue_26_set <= io_enq_bits_set;
        queue_26_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h1B) begin
        queue_27_tag <= io_enq_bits_tag;
        queue_27_set <= io_enq_bits_set;
        queue_27_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h1C) begin
        queue_28_tag <= io_enq_bits_tag;
        queue_28_set <= io_enq_bits_set;
        queue_28_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h1D) begin
        queue_29_tag <= io_enq_bits_tag;
        queue_29_set <= io_enq_bits_set;
        queue_29_pfSource <= 4'hB;
      end
      if (io_enq_valid & tail == 5'h1E) begin
        queue_30_tag <= io_enq_bits_tag;
        queue_30_set <= io_enq_bits_set;
        queue_30_pfSource <= 4'hB;
      end
      if (io_enq_valid & (&tail)) begin
        queue_31_tag <= io_enq_bits_tag;
        queue_31_set <= io_enq_bits_set;
        queue_31_pfSource <= 4'hB;
        valids_31 <= ~empty | ~io_deq_ready;
      end
      else
        valids_31 <= ~(_GEN_2 & (&head)) & valids_31;
      if (io_enq_valid & _full_T & valids_31 & ~io_deq_ready)
        head <= 5'(head + 5'h1);
      else if (_GEN_2)
        head <= 5'(head + 5'h1);
      if (io_enq_valid)
        tail <= 5'(tail + {4'h0, ~empty | ~io_deq_ready});
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:48];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h31; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        queue_0_tag = _RANDOM[6'h0][17:0];
        queue_0_set = _RANDOM[6'h0][29:18];
        queue_0_pfSource = _RANDOM[6'h1][14:11];
        queue_1_tag = {_RANDOM[6'h1][31:15], _RANDOM[6'h2][0]};
        queue_1_set = _RANDOM[6'h2][12:1];
        queue_1_pfSource = _RANDOM[6'h2][29:26];
        queue_2_tag = {_RANDOM[6'h2][31:30], _RANDOM[6'h3][15:0]};
        queue_2_set = _RANDOM[6'h3][27:16];
        queue_2_pfSource = _RANDOM[6'h4][12:9];
        queue_3_tag = _RANDOM[6'h4][30:13];
        queue_3_set = {_RANDOM[6'h4][31], _RANDOM[6'h5][10:0]};
        queue_3_pfSource = _RANDOM[6'h5][27:24];
        queue_4_tag = {_RANDOM[6'h5][31:28], _RANDOM[6'h6][13:0]};
        queue_4_set = _RANDOM[6'h6][25:14];
        queue_4_pfSource = _RANDOM[6'h7][10:7];
        queue_5_tag = _RANDOM[6'h7][28:11];
        queue_5_set = {_RANDOM[6'h7][31:29], _RANDOM[6'h8][8:0]};
        queue_5_pfSource = _RANDOM[6'h8][25:22];
        queue_6_tag = {_RANDOM[6'h8][31:26], _RANDOM[6'h9][11:0]};
        queue_6_set = _RANDOM[6'h9][23:12];
        queue_6_pfSource = _RANDOM[6'hA][8:5];
        queue_7_tag = _RANDOM[6'hA][26:9];
        queue_7_set = {_RANDOM[6'hA][31:27], _RANDOM[6'hB][6:0]};
        queue_7_pfSource = _RANDOM[6'hB][23:20];
        queue_8_tag = {_RANDOM[6'hB][31:24], _RANDOM[6'hC][9:0]};
        queue_8_set = _RANDOM[6'hC][21:10];
        queue_8_pfSource = _RANDOM[6'hD][6:3];
        queue_9_tag = _RANDOM[6'hD][24:7];
        queue_9_set = {_RANDOM[6'hD][31:25], _RANDOM[6'hE][4:0]};
        queue_9_pfSource = _RANDOM[6'hE][21:18];
        queue_10_tag = {_RANDOM[6'hE][31:22], _RANDOM[6'hF][7:0]};
        queue_10_set = _RANDOM[6'hF][19:8];
        queue_10_pfSource = _RANDOM[6'h10][4:1];
        queue_11_tag = _RANDOM[6'h10][22:5];
        queue_11_set = {_RANDOM[6'h10][31:23], _RANDOM[6'h11][2:0]};
        queue_11_pfSource = _RANDOM[6'h11][19:16];
        queue_12_tag = {_RANDOM[6'h11][31:20], _RANDOM[6'h12][5:0]};
        queue_12_set = _RANDOM[6'h12][17:6];
        queue_12_pfSource = {_RANDOM[6'h12][31], _RANDOM[6'h13][2:0]};
        queue_13_tag = _RANDOM[6'h13][20:3];
        queue_13_set = {_RANDOM[6'h13][31:21], _RANDOM[6'h14][0]};
        queue_13_pfSource = _RANDOM[6'h14][17:14];
        queue_14_tag = {_RANDOM[6'h14][31:18], _RANDOM[6'h15][3:0]};
        queue_14_set = _RANDOM[6'h15][15:4];
        queue_14_pfSource = {_RANDOM[6'h15][31:29], _RANDOM[6'h16][0]};
        queue_15_tag = _RANDOM[6'h16][18:1];
        queue_15_set = _RANDOM[6'h16][30:19];
        queue_15_pfSource = _RANDOM[6'h17][15:12];
        queue_16_tag = {_RANDOM[6'h17][31:16], _RANDOM[6'h18][1:0]};
        queue_16_set = _RANDOM[6'h18][13:2];
        queue_16_pfSource = _RANDOM[6'h18][30:27];
        queue_17_tag = {_RANDOM[6'h18][31], _RANDOM[6'h19][16:0]};
        queue_17_set = _RANDOM[6'h19][28:17];
        queue_17_pfSource = _RANDOM[6'h1A][13:10];
        queue_18_tag = _RANDOM[6'h1A][31:14];
        queue_18_set = _RANDOM[6'h1B][11:0];
        queue_18_pfSource = _RANDOM[6'h1B][28:25];
        queue_19_tag = {_RANDOM[6'h1B][31:29], _RANDOM[6'h1C][14:0]};
        queue_19_set = _RANDOM[6'h1C][26:15];
        queue_19_pfSource = _RANDOM[6'h1D][11:8];
        queue_20_tag = _RANDOM[6'h1D][29:12];
        queue_20_set = {_RANDOM[6'h1D][31:30], _RANDOM[6'h1E][9:0]};
        queue_20_pfSource = _RANDOM[6'h1E][26:23];
        queue_21_tag = {_RANDOM[6'h1E][31:27], _RANDOM[6'h1F][12:0]};
        queue_21_set = _RANDOM[6'h1F][24:13];
        queue_21_pfSource = _RANDOM[6'h20][9:6];
        queue_22_tag = _RANDOM[6'h20][27:10];
        queue_22_set = {_RANDOM[6'h20][31:28], _RANDOM[6'h21][7:0]};
        queue_22_pfSource = _RANDOM[6'h21][24:21];
        queue_23_tag = {_RANDOM[6'h21][31:25], _RANDOM[6'h22][10:0]};
        queue_23_set = _RANDOM[6'h22][22:11];
        queue_23_pfSource = _RANDOM[6'h23][7:4];
        queue_24_tag = _RANDOM[6'h23][25:8];
        queue_24_set = {_RANDOM[6'h23][31:26], _RANDOM[6'h24][5:0]};
        queue_24_pfSource = _RANDOM[6'h24][22:19];
        queue_25_tag = {_RANDOM[6'h24][31:23], _RANDOM[6'h25][8:0]};
        queue_25_set = _RANDOM[6'h25][20:9];
        queue_25_pfSource = _RANDOM[6'h26][5:2];
        queue_26_tag = _RANDOM[6'h26][23:6];
        queue_26_set = {_RANDOM[6'h26][31:24], _RANDOM[6'h27][3:0]};
        queue_26_pfSource = _RANDOM[6'h27][20:17];
        queue_27_tag = {_RANDOM[6'h27][31:21], _RANDOM[6'h28][6:0]};
        queue_27_set = _RANDOM[6'h28][18:7];
        queue_27_pfSource = _RANDOM[6'h29][3:0];
        queue_28_tag = _RANDOM[6'h29][21:4];
        queue_28_set = {_RANDOM[6'h29][31:22], _RANDOM[6'h2A][1:0]};
        queue_28_pfSource = _RANDOM[6'h2A][18:15];
        queue_29_tag = {_RANDOM[6'h2A][31:19], _RANDOM[6'h2B][4:0]};
        queue_29_set = _RANDOM[6'h2B][16:5];
        queue_29_pfSource = {_RANDOM[6'h2B][31:30], _RANDOM[6'h2C][1:0]};
        queue_30_tag = _RANDOM[6'h2C][19:2];
        queue_30_set = _RANDOM[6'h2C][31:20];
        queue_30_pfSource = _RANDOM[6'h2D][16:13];
        queue_31_tag = {_RANDOM[6'h2D][31:17], _RANDOM[6'h2E][2:0]};
        queue_31_set = _RANDOM[6'h2E][14:3];
        queue_31_pfSource = _RANDOM[6'h2E][31:28];
        valids_31 = _RANDOM[6'h2F][31];
        head = _RANDOM[6'h30][4:0];
        tail = _RANDOM[6'h30][9:5];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        queue_0_tag = 18'h0;
        queue_0_set = 12'h0;
        queue_0_pfSource = 4'h0;
        queue_1_tag = 18'h0;
        queue_1_set = 12'h0;
        queue_1_pfSource = 4'h0;
        queue_2_tag = 18'h0;
        queue_2_set = 12'h0;
        queue_2_pfSource = 4'h0;
        queue_3_tag = 18'h0;
        queue_3_set = 12'h0;
        queue_3_pfSource = 4'h0;
        queue_4_tag = 18'h0;
        queue_4_set = 12'h0;
        queue_4_pfSource = 4'h0;
        queue_5_tag = 18'h0;
        queue_5_set = 12'h0;
        queue_5_pfSource = 4'h0;
        queue_6_tag = 18'h0;
        queue_6_set = 12'h0;
        queue_6_pfSource = 4'h0;
        queue_7_tag = 18'h0;
        queue_7_set = 12'h0;
        queue_7_pfSource = 4'h0;
        queue_8_tag = 18'h0;
        queue_8_set = 12'h0;
        queue_8_pfSource = 4'h0;
        queue_9_tag = 18'h0;
        queue_9_set = 12'h0;
        queue_9_pfSource = 4'h0;
        queue_10_tag = 18'h0;
        queue_10_set = 12'h0;
        queue_10_pfSource = 4'h0;
        queue_11_tag = 18'h0;
        queue_11_set = 12'h0;
        queue_11_pfSource = 4'h0;
        queue_12_tag = 18'h0;
        queue_12_set = 12'h0;
        queue_12_pfSource = 4'h0;
        queue_13_tag = 18'h0;
        queue_13_set = 12'h0;
        queue_13_pfSource = 4'h0;
        queue_14_tag = 18'h0;
        queue_14_set = 12'h0;
        queue_14_pfSource = 4'h0;
        queue_15_tag = 18'h0;
        queue_15_set = 12'h0;
        queue_15_pfSource = 4'h0;
        queue_16_tag = 18'h0;
        queue_16_set = 12'h0;
        queue_16_pfSource = 4'h0;
        queue_17_tag = 18'h0;
        queue_17_set = 12'h0;
        queue_17_pfSource = 4'h0;
        queue_18_tag = 18'h0;
        queue_18_set = 12'h0;
        queue_18_pfSource = 4'h0;
        queue_19_tag = 18'h0;
        queue_19_set = 12'h0;
        queue_19_pfSource = 4'h0;
        queue_20_tag = 18'h0;
        queue_20_set = 12'h0;
        queue_20_pfSource = 4'h0;
        queue_21_tag = 18'h0;
        queue_21_set = 12'h0;
        queue_21_pfSource = 4'h0;
        queue_22_tag = 18'h0;
        queue_22_set = 12'h0;
        queue_22_pfSource = 4'h0;
        queue_23_tag = 18'h0;
        queue_23_set = 12'h0;
        queue_23_pfSource = 4'h0;
        queue_24_tag = 18'h0;
        queue_24_set = 12'h0;
        queue_24_pfSource = 4'h0;
        queue_25_tag = 18'h0;
        queue_25_set = 12'h0;
        queue_25_pfSource = 4'h0;
        queue_26_tag = 18'h0;
        queue_26_set = 12'h0;
        queue_26_pfSource = 4'h0;
        queue_27_tag = 18'h0;
        queue_27_set = 12'h0;
        queue_27_pfSource = 4'h0;
        queue_28_tag = 18'h0;
        queue_28_set = 12'h0;
        queue_28_pfSource = 4'h0;
        queue_29_tag = 18'h0;
        queue_29_set = 12'h0;
        queue_29_pfSource = 4'h0;
        queue_30_tag = 18'h0;
        queue_30_set = 12'h0;
        queue_30_pfSource = 4'h0;
        queue_31_tag = 18'h0;
        queue_31_set = 12'h0;
        queue_31_pfSource = 4'h0;
        valids_31 = 1'h0;
        head = 5'h0;
        tail = 5'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_deq_valid = ~empty | io_enq_valid;
  assign io_deq_bits_tag = empty ? io_enq_bits_tag : _GEN[head];
  assign io_deq_bits_set = empty ? io_enq_bits_set : _GEN_0[head];
  assign io_deq_bits_pfSource = empty ? 4'hB : _GEN_1[head];
endmodule

