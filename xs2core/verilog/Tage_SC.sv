// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module Tage_SC(
  input          clock,
  input          reset,
  input  [35:0]  io_reset_vector,
  input  [40:0]  io_in_bits_s0_pc_0,
  input  [40:0]  io_in_bits_s0_pc_1,
  input  [40:0]  io_in_bits_s0_pc_2,
  input  [40:0]  io_in_bits_s0_pc_3,
  input  [10:0]  io_in_bits_folded_hist_1_hist_17_folded_hist,
  input  [10:0]  io_in_bits_folded_hist_1_hist_16_folded_hist,
  input  [6:0]   io_in_bits_folded_hist_1_hist_15_folded_hist,
  input  [7:0]   io_in_bits_folded_hist_1_hist_14_folded_hist,
  input  [6:0]   io_in_bits_folded_hist_1_hist_9_folded_hist,
  input  [7:0]   io_in_bits_folded_hist_1_hist_8_folded_hist,
  input  [6:0]   io_in_bits_folded_hist_1_hist_7_folded_hist,
  input  [6:0]   io_in_bits_folded_hist_1_hist_5_folded_hist,
  input  [7:0]   io_in_bits_folded_hist_1_hist_4_folded_hist,
  input  [7:0]   io_in_bits_folded_hist_1_hist_3_folded_hist,
  input  [10:0]  io_in_bits_folded_hist_1_hist_1_folded_hist,
  input  [3:0]   io_in_bits_folded_hist_3_hist_12_folded_hist,
  input  [7:0]   io_in_bits_folded_hist_3_hist_11_folded_hist,
  input  [7:0]   io_in_bits_folded_hist_3_hist_2_folded_hist,
  output         io_out_s2_full_pred_0_br_taken_mask_0,
  output         io_out_s2_full_pred_0_br_taken_mask_1,
  output         io_out_s2_full_pred_1_br_taken_mask_0,
  output         io_out_s2_full_pred_1_br_taken_mask_1,
  output         io_out_s2_full_pred_2_br_taken_mask_0,
  output         io_out_s2_full_pred_2_br_taken_mask_1,
  output         io_out_s2_full_pred_3_br_taken_mask_0,
  output         io_out_s2_full_pred_3_br_taken_mask_1,
  output         io_out_s3_full_pred_0_br_taken_mask_0,
  output         io_out_s3_full_pred_0_br_taken_mask_1,
  output         io_out_s3_full_pred_1_br_taken_mask_0,
  output         io_out_s3_full_pred_1_br_taken_mask_1,
  output         io_out_s3_full_pred_2_br_taken_mask_0,
  output         io_out_s3_full_pred_2_br_taken_mask_1,
  output         io_out_s3_full_pred_3_br_taken_mask_0,
  output         io_out_s3_full_pred_3_br_taken_mask_1,
  output [259:0] io_out_last_stage_meta,
  input          io_ctrl_tage_enable,
  input          io_ctrl_sc_enable,
  input          io_s0_fire_0,
  input          io_s0_fire_1,
  input          io_s0_fire_2,
  input          io_s0_fire_3,
  input          io_s1_fire_0,
  input          io_s1_fire_1,
  input          io_s1_fire_2,
  input          io_s1_fire_3,
  input          io_s2_fire_0,
  input          io_s2_fire_1,
  input          io_s2_fire_2,
  input          io_s2_fire_3,
  output         io_s1_ready,
  input          io_update_valid,
  input  [40:0]  io_update_bits_pc,
  input          io_update_bits_ftb_entry_brSlots_0_valid,
  input          io_update_bits_ftb_entry_tailSlot_sharing,
  input          io_update_bits_ftb_entry_tailSlot_valid,
  input          io_update_bits_ftb_entry_always_taken_0,
  input          io_update_bits_ftb_entry_always_taken_1,
  input          io_update_bits_br_taken_mask_0,
  input          io_update_bits_br_taken_mask_1,
  input          io_update_bits_mispred_mask_0,
  input          io_update_bits_mispred_mask_1,
  input  [259:0] io_update_bits_meta,
  input  [255:0] io_update_bits_ghist,
  output [5:0]   io_perf_0_value,
  output [5:0]   io_perf_1_value,
  output [5:0]   io_perf_2_value
);

  reg  [5:0]   r_3_3;
  reg  [5:0]   r_3_2;
  reg  [5:0]   r_3_1;
  reg  [5:0]   r_3_0;
  reg          resp_meta_scMeta_scPreds_1_r;
  reg  [5:0]   r_2_3;
  reg  [5:0]   r_2_2;
  reg  [5:0]   r_2_1;
  reg  [5:0]   r_2_0;
  reg          resp_meta_scMeta_scPreds_0_r;
  reg  [1:0]   resp_meta_basecnts_1_r;
  reg          resp_meta_altUsed_1_r;
  reg  [3:0]   resp_meta_allocates_1_r;
  reg          resp_meta_providerResps_1_r_u;
  reg  [2:0]   resp_meta_providerResps_1_r_ctr;
  reg  [1:0]   resp_meta_providers_1_bits_r;
  reg          resp_meta_providers_1_valid_r;
  reg  [1:0]   resp_meta_basecnts_0_r;
  reg          resp_meta_altUsed_0_r;
  reg  [3:0]   resp_meta_allocates_0_r;
  reg          resp_meta_providerResps_0_r_u;
  reg  [2:0]   resp_meta_providerResps_0_r_ctr;
  reg  [1:0]   resp_meta_providers_0_bits_r;
  reg          resp_meta_providers_0_valid_r;
  wire [5:0]   _scTables_3_io_resp_ctrs_0_0;
  wire [5:0]   _scTables_3_io_resp_ctrs_0_1;
  wire [5:0]   _scTables_3_io_resp_ctrs_1_0;
  wire [5:0]   _scTables_3_io_resp_ctrs_1_1;
  wire [5:0]   _scTables_2_io_resp_ctrs_0_0;
  wire [5:0]   _scTables_2_io_resp_ctrs_0_1;
  wire [5:0]   _scTables_2_io_resp_ctrs_1_0;
  wire [5:0]   _scTables_2_io_resp_ctrs_1_1;
  wire [5:0]   _scTables_1_io_resp_ctrs_0_0;
  wire [5:0]   _scTables_1_io_resp_ctrs_0_1;
  wire [5:0]   _scTables_1_io_resp_ctrs_1_0;
  wire [5:0]   _scTables_1_io_resp_ctrs_1_1;
  wire [5:0]   _scTables_0_io_resp_ctrs_0_0;
  wire [5:0]   _scTables_0_io_resp_ctrs_0_1;
  wire [5:0]   _scTables_0_io_resp_ctrs_1_0;
  wire [5:0]   _scTables_0_io_resp_ctrs_1_1;
  wire         _allocLFSR_prng_1_io_out_0;
  wire         _allocLFSR_prng_1_io_out_1;
  wire         _allocLFSR_prng_1_io_out_2;
  wire         _allocLFSR_prng_io_out_0;
  wire         _allocLFSR_prng_io_out_1;
  wire         _allocLFSR_prng_io_out_2;
  wire         _bt_io_req_ready;
  wire [1:0]   _bt_io_s1_cnt_0;
  wire [1:0]   _bt_io_s1_cnt_1;
  wire         _tables_3_io_req_ready;
  wire         _tables_3_io_resps_0_valid;
  wire [2:0]   _tables_3_io_resps_0_bits_ctr;
  wire         _tables_3_io_resps_0_bits_u;
  wire         _tables_3_io_resps_0_bits_unconf;
  wire         _tables_3_io_resps_1_valid;
  wire [2:0]   _tables_3_io_resps_1_bits_ctr;
  wire         _tables_3_io_resps_1_bits_u;
  wire         _tables_3_io_resps_1_bits_unconf;
  wire         _tables_2_io_req_ready;
  wire         _tables_2_io_resps_0_valid;
  wire [2:0]   _tables_2_io_resps_0_bits_ctr;
  wire         _tables_2_io_resps_0_bits_u;
  wire         _tables_2_io_resps_0_bits_unconf;
  wire         _tables_2_io_resps_1_valid;
  wire [2:0]   _tables_2_io_resps_1_bits_ctr;
  wire         _tables_2_io_resps_1_bits_u;
  wire         _tables_2_io_resps_1_bits_unconf;
  wire         _tables_1_io_req_ready;
  wire         _tables_1_io_resps_0_valid;
  wire [2:0]   _tables_1_io_resps_0_bits_ctr;
  wire         _tables_1_io_resps_0_bits_u;
  wire         _tables_1_io_resps_0_bits_unconf;
  wire         _tables_1_io_resps_1_valid;
  wire [2:0]   _tables_1_io_resps_1_bits_ctr;
  wire         _tables_1_io_resps_1_bits_u;
  wire         _tables_1_io_resps_1_bits_unconf;
  wire         _tables_0_io_req_ready;
  wire         _tables_0_io_resps_0_valid;
  wire [2:0]   _tables_0_io_resps_0_bits_ctr;
  wire         _tables_0_io_resps_0_bits_u;
  wire         _tables_0_io_resps_0_bits_unconf;
  wire         _tables_0_io_resps_1_valid;
  wire [2:0]   _tables_0_io_resps_1_bits_ctr;
  wire         _tables_0_io_resps_1_bits_u;
  wire         _tables_0_io_resps_1_bits_unconf;
  wire [35:0]  _reset_vector_pipMod_io_out_bits;
  wire         debug_modified_debug_s2_pc_modified_2 = 1'h1;
  wire         debug_modified_debug_s2_pc_modified_1_2 = 1'h1;
  wire         debug_modified_debug_s2_pc_modified_2_2 = 1'h1;
  wire         debug_modified_debug_s2_pc_modified_3_2 = 1'h1;
  wire         debug_modified_debug_s3_pc_modified_2 = 1'h1;
  wire         debug_modified_debug_s3_pc_modified_1_2 = 1'h1;
  wire         debug_modified_debug_s3_pc_modified_2_2 = 1'h1;
  wire         debug_modified_debug_s3_pc_modified_3_2 = 1'h1;
  reg  [40:0]  s1_pc_dup_0;
  reg  [40:0]  s1_pc_dup_1;
  reg  [40:0]  s1_pc_dup_2;
  reg  [40:0]  s1_pc_dup_3;
  reg  [16:0]  s2_pc_seg_0_value;
  reg  [11:0]  s2_pc_seg_1_value;
  reg  [11:0]  s2_pc_seg_2_value;
  wire         debug_modified_debug_s2_pc_modified_0 =
    s2_pc_seg_0_value != s1_pc_dup_0[40:24];
  wire         debug_modified_debug_s2_pc_modified_1 =
    s2_pc_seg_1_value != s1_pc_dup_0[23:12];
  wire [40:0]  debug_s2_pc_addr =
    {s2_pc_seg_0_value, s2_pc_seg_1_value, s2_pc_seg_2_value};
  reg  [16:0]  s2_pc_seg_0_value_1;
  reg  [11:0]  s2_pc_seg_1_value_1;
  reg  [11:0]  s2_pc_seg_2_value_1;
  wire         debug_modified_debug_s2_pc_modified_1_0 =
    s2_pc_seg_0_value_1 != s1_pc_dup_1[40:24];
  wire         debug_modified_debug_s2_pc_modified_1_1 =
    s2_pc_seg_1_value_1 != s1_pc_dup_1[23:12];
  wire [40:0]  debug_s2_pc_addr_1 =
    {s2_pc_seg_0_value_1, s2_pc_seg_1_value_1, s2_pc_seg_2_value_1};
  reg  [16:0]  s2_pc_seg_0_value_2;
  reg  [11:0]  s2_pc_seg_1_value_2;
  reg  [11:0]  s2_pc_seg_2_value_2;
  wire         debug_modified_debug_s2_pc_modified_2_0 =
    s2_pc_seg_0_value_2 != s1_pc_dup_2[40:24];
  wire         debug_modified_debug_s2_pc_modified_2_1 =
    s2_pc_seg_1_value_2 != s1_pc_dup_2[23:12];
  wire [40:0]  debug_s2_pc_addr_2 =
    {s2_pc_seg_0_value_2, s2_pc_seg_1_value_2, s2_pc_seg_2_value_2};
  reg  [16:0]  s2_pc_seg_0_value_3;
  reg  [11:0]  s2_pc_seg_1_value_3;
  reg  [11:0]  s2_pc_seg_2_value_3;
  wire         debug_modified_debug_s2_pc_modified_3_0 =
    s2_pc_seg_0_value_3 != s1_pc_dup_3[40:24];
  wire         debug_modified_debug_s2_pc_modified_3_1 =
    s2_pc_seg_1_value_3 != s1_pc_dup_3[23:12];
  wire [40:0]  debug_s2_pc_addr_3 =
    {s2_pc_seg_0_value_3, s2_pc_seg_1_value_3, s2_pc_seg_2_value_3};
  reg  [16:0]  s3_pc_seg_0_value;
  reg  [11:0]  s3_pc_seg_1_value;
  reg  [11:0]  s3_pc_seg_2_value;
  wire         debug_modified_debug_s3_pc_modified_0 =
    s3_pc_seg_0_value != s2_pc_seg_0_value;
  wire         debug_modified_debug_s3_pc_modified_1 =
    s3_pc_seg_1_value != s2_pc_seg_1_value;
  wire [40:0]  debug_s3_pc_addr =
    {s3_pc_seg_0_value, s3_pc_seg_1_value, s3_pc_seg_2_value};
  reg  [16:0]  s3_pc_seg_0_value_1;
  reg  [11:0]  s3_pc_seg_1_value_1;
  reg  [11:0]  s3_pc_seg_2_value_1;
  wire         debug_modified_debug_s3_pc_modified_1_0 =
    s3_pc_seg_0_value_1 != s2_pc_seg_0_value_1;
  wire         debug_modified_debug_s3_pc_modified_1_1 =
    s3_pc_seg_1_value_1 != s2_pc_seg_1_value_1;
  wire [40:0]  debug_s3_pc_addr_1 =
    {s3_pc_seg_0_value_1, s3_pc_seg_1_value_1, s3_pc_seg_2_value_1};
  reg  [16:0]  s3_pc_seg_0_value_2;
  reg  [11:0]  s3_pc_seg_1_value_2;
  reg  [11:0]  s3_pc_seg_2_value_2;
  wire         debug_modified_debug_s3_pc_modified_2_0 =
    s3_pc_seg_0_value_2 != s2_pc_seg_0_value_2;
  wire         debug_modified_debug_s3_pc_modified_2_1 =
    s3_pc_seg_1_value_2 != s2_pc_seg_1_value_2;
  wire [40:0]  debug_s3_pc_addr_2 =
    {s3_pc_seg_0_value_2, s3_pc_seg_1_value_2, s3_pc_seg_2_value_2};
  reg  [16:0]  s3_pc_seg_0_value_3;
  reg  [11:0]  s3_pc_seg_1_value_3;
  reg  [11:0]  s3_pc_seg_2_value_3;
  wire         debug_modified_debug_s3_pc_modified_3_0 =
    s3_pc_seg_0_value_3 != s2_pc_seg_0_value_3;
  wire         debug_modified_debug_s3_pc_modified_3_1 =
    s3_pc_seg_1_value_3 != s2_pc_seg_1_value_3;
  wire [40:0]  debug_s3_pc_addr_3 =
    {s3_pc_seg_0_value_3, s3_pc_seg_1_value_3, s3_pc_seg_2_value_3};
  reg          REG;
  reg          REG_1;
  reg  [6:0]   bankTickCtrDistanceToTops_0;
  reg  [6:0]   bankTickCtrDistanceToTops_1;
  reg  [6:0]   bankTickCtrs_0;
  reg  [6:0]   bankTickCtrs_1;
  reg  [3:0]   useAltOnNaCtrs_0_0;
  reg  [3:0]   useAltOnNaCtrs_0_1;
  reg  [3:0]   useAltOnNaCtrs_0_2;
  reg  [3:0]   useAltOnNaCtrs_0_3;
  reg  [3:0]   useAltOnNaCtrs_0_4;
  reg  [3:0]   useAltOnNaCtrs_0_5;
  reg  [3:0]   useAltOnNaCtrs_0_6;
  reg  [3:0]   useAltOnNaCtrs_0_7;
  reg  [3:0]   useAltOnNaCtrs_0_8;
  reg  [3:0]   useAltOnNaCtrs_0_9;
  reg  [3:0]   useAltOnNaCtrs_0_10;
  reg  [3:0]   useAltOnNaCtrs_0_11;
  reg  [3:0]   useAltOnNaCtrs_0_12;
  reg  [3:0]   useAltOnNaCtrs_0_13;
  reg  [3:0]   useAltOnNaCtrs_0_14;
  reg  [3:0]   useAltOnNaCtrs_0_15;
  reg  [3:0]   useAltOnNaCtrs_0_16;
  reg  [3:0]   useAltOnNaCtrs_0_17;
  reg  [3:0]   useAltOnNaCtrs_0_18;
  reg  [3:0]   useAltOnNaCtrs_0_19;
  reg  [3:0]   useAltOnNaCtrs_0_20;
  reg  [3:0]   useAltOnNaCtrs_0_21;
  reg  [3:0]   useAltOnNaCtrs_0_22;
  reg  [3:0]   useAltOnNaCtrs_0_23;
  reg  [3:0]   useAltOnNaCtrs_0_24;
  reg  [3:0]   useAltOnNaCtrs_0_25;
  reg  [3:0]   useAltOnNaCtrs_0_26;
  reg  [3:0]   useAltOnNaCtrs_0_27;
  reg  [3:0]   useAltOnNaCtrs_0_28;
  reg  [3:0]   useAltOnNaCtrs_0_29;
  reg  [3:0]   useAltOnNaCtrs_0_30;
  reg  [3:0]   useAltOnNaCtrs_0_31;
  reg  [3:0]   useAltOnNaCtrs_0_32;
  reg  [3:0]   useAltOnNaCtrs_0_33;
  reg  [3:0]   useAltOnNaCtrs_0_34;
  reg  [3:0]   useAltOnNaCtrs_0_35;
  reg  [3:0]   useAltOnNaCtrs_0_36;
  reg  [3:0]   useAltOnNaCtrs_0_37;
  reg  [3:0]   useAltOnNaCtrs_0_38;
  reg  [3:0]   useAltOnNaCtrs_0_39;
  reg  [3:0]   useAltOnNaCtrs_0_40;
  reg  [3:0]   useAltOnNaCtrs_0_41;
  reg  [3:0]   useAltOnNaCtrs_0_42;
  reg  [3:0]   useAltOnNaCtrs_0_43;
  reg  [3:0]   useAltOnNaCtrs_0_44;
  reg  [3:0]   useAltOnNaCtrs_0_45;
  reg  [3:0]   useAltOnNaCtrs_0_46;
  reg  [3:0]   useAltOnNaCtrs_0_47;
  reg  [3:0]   useAltOnNaCtrs_0_48;
  reg  [3:0]   useAltOnNaCtrs_0_49;
  reg  [3:0]   useAltOnNaCtrs_0_50;
  reg  [3:0]   useAltOnNaCtrs_0_51;
  reg  [3:0]   useAltOnNaCtrs_0_52;
  reg  [3:0]   useAltOnNaCtrs_0_53;
  reg  [3:0]   useAltOnNaCtrs_0_54;
  reg  [3:0]   useAltOnNaCtrs_0_55;
  reg  [3:0]   useAltOnNaCtrs_0_56;
  reg  [3:0]   useAltOnNaCtrs_0_57;
  reg  [3:0]   useAltOnNaCtrs_0_58;
  reg  [3:0]   useAltOnNaCtrs_0_59;
  reg  [3:0]   useAltOnNaCtrs_0_60;
  reg  [3:0]   useAltOnNaCtrs_0_61;
  reg  [3:0]   useAltOnNaCtrs_0_62;
  reg  [3:0]   useAltOnNaCtrs_0_63;
  reg  [3:0]   useAltOnNaCtrs_0_64;
  reg  [3:0]   useAltOnNaCtrs_0_65;
  reg  [3:0]   useAltOnNaCtrs_0_66;
  reg  [3:0]   useAltOnNaCtrs_0_67;
  reg  [3:0]   useAltOnNaCtrs_0_68;
  reg  [3:0]   useAltOnNaCtrs_0_69;
  reg  [3:0]   useAltOnNaCtrs_0_70;
  reg  [3:0]   useAltOnNaCtrs_0_71;
  reg  [3:0]   useAltOnNaCtrs_0_72;
  reg  [3:0]   useAltOnNaCtrs_0_73;
  reg  [3:0]   useAltOnNaCtrs_0_74;
  reg  [3:0]   useAltOnNaCtrs_0_75;
  reg  [3:0]   useAltOnNaCtrs_0_76;
  reg  [3:0]   useAltOnNaCtrs_0_77;
  reg  [3:0]   useAltOnNaCtrs_0_78;
  reg  [3:0]   useAltOnNaCtrs_0_79;
  reg  [3:0]   useAltOnNaCtrs_0_80;
  reg  [3:0]   useAltOnNaCtrs_0_81;
  reg  [3:0]   useAltOnNaCtrs_0_82;
  reg  [3:0]   useAltOnNaCtrs_0_83;
  reg  [3:0]   useAltOnNaCtrs_0_84;
  reg  [3:0]   useAltOnNaCtrs_0_85;
  reg  [3:0]   useAltOnNaCtrs_0_86;
  reg  [3:0]   useAltOnNaCtrs_0_87;
  reg  [3:0]   useAltOnNaCtrs_0_88;
  reg  [3:0]   useAltOnNaCtrs_0_89;
  reg  [3:0]   useAltOnNaCtrs_0_90;
  reg  [3:0]   useAltOnNaCtrs_0_91;
  reg  [3:0]   useAltOnNaCtrs_0_92;
  reg  [3:0]   useAltOnNaCtrs_0_93;
  reg  [3:0]   useAltOnNaCtrs_0_94;
  reg  [3:0]   useAltOnNaCtrs_0_95;
  reg  [3:0]   useAltOnNaCtrs_0_96;
  reg  [3:0]   useAltOnNaCtrs_0_97;
  reg  [3:0]   useAltOnNaCtrs_0_98;
  reg  [3:0]   useAltOnNaCtrs_0_99;
  reg  [3:0]   useAltOnNaCtrs_0_100;
  reg  [3:0]   useAltOnNaCtrs_0_101;
  reg  [3:0]   useAltOnNaCtrs_0_102;
  reg  [3:0]   useAltOnNaCtrs_0_103;
  reg  [3:0]   useAltOnNaCtrs_0_104;
  reg  [3:0]   useAltOnNaCtrs_0_105;
  reg  [3:0]   useAltOnNaCtrs_0_106;
  reg  [3:0]   useAltOnNaCtrs_0_107;
  reg  [3:0]   useAltOnNaCtrs_0_108;
  reg  [3:0]   useAltOnNaCtrs_0_109;
  reg  [3:0]   useAltOnNaCtrs_0_110;
  reg  [3:0]   useAltOnNaCtrs_0_111;
  reg  [3:0]   useAltOnNaCtrs_0_112;
  reg  [3:0]   useAltOnNaCtrs_0_113;
  reg  [3:0]   useAltOnNaCtrs_0_114;
  reg  [3:0]   useAltOnNaCtrs_0_115;
  reg  [3:0]   useAltOnNaCtrs_0_116;
  reg  [3:0]   useAltOnNaCtrs_0_117;
  reg  [3:0]   useAltOnNaCtrs_0_118;
  reg  [3:0]   useAltOnNaCtrs_0_119;
  reg  [3:0]   useAltOnNaCtrs_0_120;
  reg  [3:0]   useAltOnNaCtrs_0_121;
  reg  [3:0]   useAltOnNaCtrs_0_122;
  reg  [3:0]   useAltOnNaCtrs_0_123;
  reg  [3:0]   useAltOnNaCtrs_0_124;
  reg  [3:0]   useAltOnNaCtrs_0_125;
  reg  [3:0]   useAltOnNaCtrs_0_126;
  reg  [3:0]   useAltOnNaCtrs_0_127;
  reg  [3:0]   useAltOnNaCtrs_1_0;
  reg  [3:0]   useAltOnNaCtrs_1_1;
  reg  [3:0]   useAltOnNaCtrs_1_2;
  reg  [3:0]   useAltOnNaCtrs_1_3;
  reg  [3:0]   useAltOnNaCtrs_1_4;
  reg  [3:0]   useAltOnNaCtrs_1_5;
  reg  [3:0]   useAltOnNaCtrs_1_6;
  reg  [3:0]   useAltOnNaCtrs_1_7;
  reg  [3:0]   useAltOnNaCtrs_1_8;
  reg  [3:0]   useAltOnNaCtrs_1_9;
  reg  [3:0]   useAltOnNaCtrs_1_10;
  reg  [3:0]   useAltOnNaCtrs_1_11;
  reg  [3:0]   useAltOnNaCtrs_1_12;
  reg  [3:0]   useAltOnNaCtrs_1_13;
  reg  [3:0]   useAltOnNaCtrs_1_14;
  reg  [3:0]   useAltOnNaCtrs_1_15;
  reg  [3:0]   useAltOnNaCtrs_1_16;
  reg  [3:0]   useAltOnNaCtrs_1_17;
  reg  [3:0]   useAltOnNaCtrs_1_18;
  reg  [3:0]   useAltOnNaCtrs_1_19;
  reg  [3:0]   useAltOnNaCtrs_1_20;
  reg  [3:0]   useAltOnNaCtrs_1_21;
  reg  [3:0]   useAltOnNaCtrs_1_22;
  reg  [3:0]   useAltOnNaCtrs_1_23;
  reg  [3:0]   useAltOnNaCtrs_1_24;
  reg  [3:0]   useAltOnNaCtrs_1_25;
  reg  [3:0]   useAltOnNaCtrs_1_26;
  reg  [3:0]   useAltOnNaCtrs_1_27;
  reg  [3:0]   useAltOnNaCtrs_1_28;
  reg  [3:0]   useAltOnNaCtrs_1_29;
  reg  [3:0]   useAltOnNaCtrs_1_30;
  reg  [3:0]   useAltOnNaCtrs_1_31;
  reg  [3:0]   useAltOnNaCtrs_1_32;
  reg  [3:0]   useAltOnNaCtrs_1_33;
  reg  [3:0]   useAltOnNaCtrs_1_34;
  reg  [3:0]   useAltOnNaCtrs_1_35;
  reg  [3:0]   useAltOnNaCtrs_1_36;
  reg  [3:0]   useAltOnNaCtrs_1_37;
  reg  [3:0]   useAltOnNaCtrs_1_38;
  reg  [3:0]   useAltOnNaCtrs_1_39;
  reg  [3:0]   useAltOnNaCtrs_1_40;
  reg  [3:0]   useAltOnNaCtrs_1_41;
  reg  [3:0]   useAltOnNaCtrs_1_42;
  reg  [3:0]   useAltOnNaCtrs_1_43;
  reg  [3:0]   useAltOnNaCtrs_1_44;
  reg  [3:0]   useAltOnNaCtrs_1_45;
  reg  [3:0]   useAltOnNaCtrs_1_46;
  reg  [3:0]   useAltOnNaCtrs_1_47;
  reg  [3:0]   useAltOnNaCtrs_1_48;
  reg  [3:0]   useAltOnNaCtrs_1_49;
  reg  [3:0]   useAltOnNaCtrs_1_50;
  reg  [3:0]   useAltOnNaCtrs_1_51;
  reg  [3:0]   useAltOnNaCtrs_1_52;
  reg  [3:0]   useAltOnNaCtrs_1_53;
  reg  [3:0]   useAltOnNaCtrs_1_54;
  reg  [3:0]   useAltOnNaCtrs_1_55;
  reg  [3:0]   useAltOnNaCtrs_1_56;
  reg  [3:0]   useAltOnNaCtrs_1_57;
  reg  [3:0]   useAltOnNaCtrs_1_58;
  reg  [3:0]   useAltOnNaCtrs_1_59;
  reg  [3:0]   useAltOnNaCtrs_1_60;
  reg  [3:0]   useAltOnNaCtrs_1_61;
  reg  [3:0]   useAltOnNaCtrs_1_62;
  reg  [3:0]   useAltOnNaCtrs_1_63;
  reg  [3:0]   useAltOnNaCtrs_1_64;
  reg  [3:0]   useAltOnNaCtrs_1_65;
  reg  [3:0]   useAltOnNaCtrs_1_66;
  reg  [3:0]   useAltOnNaCtrs_1_67;
  reg  [3:0]   useAltOnNaCtrs_1_68;
  reg  [3:0]   useAltOnNaCtrs_1_69;
  reg  [3:0]   useAltOnNaCtrs_1_70;
  reg  [3:0]   useAltOnNaCtrs_1_71;
  reg  [3:0]   useAltOnNaCtrs_1_72;
  reg  [3:0]   useAltOnNaCtrs_1_73;
  reg  [3:0]   useAltOnNaCtrs_1_74;
  reg  [3:0]   useAltOnNaCtrs_1_75;
  reg  [3:0]   useAltOnNaCtrs_1_76;
  reg  [3:0]   useAltOnNaCtrs_1_77;
  reg  [3:0]   useAltOnNaCtrs_1_78;
  reg  [3:0]   useAltOnNaCtrs_1_79;
  reg  [3:0]   useAltOnNaCtrs_1_80;
  reg  [3:0]   useAltOnNaCtrs_1_81;
  reg  [3:0]   useAltOnNaCtrs_1_82;
  reg  [3:0]   useAltOnNaCtrs_1_83;
  reg  [3:0]   useAltOnNaCtrs_1_84;
  reg  [3:0]   useAltOnNaCtrs_1_85;
  reg  [3:0]   useAltOnNaCtrs_1_86;
  reg  [3:0]   useAltOnNaCtrs_1_87;
  reg  [3:0]   useAltOnNaCtrs_1_88;
  reg  [3:0]   useAltOnNaCtrs_1_89;
  reg  [3:0]   useAltOnNaCtrs_1_90;
  reg  [3:0]   useAltOnNaCtrs_1_91;
  reg  [3:0]   useAltOnNaCtrs_1_92;
  reg  [3:0]   useAltOnNaCtrs_1_93;
  reg  [3:0]   useAltOnNaCtrs_1_94;
  reg  [3:0]   useAltOnNaCtrs_1_95;
  reg  [3:0]   useAltOnNaCtrs_1_96;
  reg  [3:0]   useAltOnNaCtrs_1_97;
  reg  [3:0]   useAltOnNaCtrs_1_98;
  reg  [3:0]   useAltOnNaCtrs_1_99;
  reg  [3:0]   useAltOnNaCtrs_1_100;
  reg  [3:0]   useAltOnNaCtrs_1_101;
  reg  [3:0]   useAltOnNaCtrs_1_102;
  reg  [3:0]   useAltOnNaCtrs_1_103;
  reg  [3:0]   useAltOnNaCtrs_1_104;
  reg  [3:0]   useAltOnNaCtrs_1_105;
  reg  [3:0]   useAltOnNaCtrs_1_106;
  reg  [3:0]   useAltOnNaCtrs_1_107;
  reg  [3:0]   useAltOnNaCtrs_1_108;
  reg  [3:0]   useAltOnNaCtrs_1_109;
  reg  [3:0]   useAltOnNaCtrs_1_110;
  reg  [3:0]   useAltOnNaCtrs_1_111;
  reg  [3:0]   useAltOnNaCtrs_1_112;
  reg  [3:0]   useAltOnNaCtrs_1_113;
  reg  [3:0]   useAltOnNaCtrs_1_114;
  reg  [3:0]   useAltOnNaCtrs_1_115;
  reg  [3:0]   useAltOnNaCtrs_1_116;
  reg  [3:0]   useAltOnNaCtrs_1_117;
  reg  [3:0]   useAltOnNaCtrs_1_118;
  reg  [3:0]   useAltOnNaCtrs_1_119;
  reg  [3:0]   useAltOnNaCtrs_1_120;
  reg  [3:0]   useAltOnNaCtrs_1_121;
  reg  [3:0]   useAltOnNaCtrs_1_122;
  reg  [3:0]   useAltOnNaCtrs_1_123;
  reg  [3:0]   useAltOnNaCtrs_1_124;
  reg  [3:0]   useAltOnNaCtrs_1_125;
  reg  [3:0]   useAltOnNaCtrs_1_126;
  reg  [3:0]   useAltOnNaCtrs_1_127;
  reg          s2_provideds_0;
  reg          s2_provideds_1;
  reg  [1:0]   s2_providers_0;
  reg  [1:0]   s2_providers_1;
  reg  [2:0]   s2_providerResps_0_ctr;
  reg          s2_providerResps_0_u;
  reg  [2:0]   s2_providerResps_1_ctr;
  reg          s2_providerResps_1_u;
  reg          s2_altUsed_0;
  reg          s2_altUsed_1;
  reg          s2_tageTakens_dup_0_0;
  reg          s2_tageTakens_dup_0_1;
  reg          s2_tageTakens_dup_1_0;
  reg          s2_tageTakens_dup_1_1;
  reg          s2_tageTakens_dup_2_0;
  reg          s2_tageTakens_dup_2_1;
  reg          s2_tageTakens_dup_3_0;
  reg          s2_tageTakens_dup_3_1;
  reg  [1:0]   s2_basecnts_0;
  reg  [1:0]   s2_basecnts_1;
  wire         updateValids_0 =
    io_update_bits_ftb_entry_brSlots_0_valid & io_update_valid
    & ~io_update_bits_ftb_entry_always_taken_0;
  wire         updateValids_1 =
    io_update_bits_ftb_entry_tailSlot_valid & io_update_bits_ftb_entry_tailSlot_sharing
    & io_update_valid & ~io_update_bits_ftb_entry_always_taken_1
    & ~io_update_bits_br_taken_mask_0;
  reg  [3:0]   allocatableSlots;
  reg          tage_enable_dup_REG;
  wire         updateTaken = updateValids_0 & io_update_bits_br_taken_mask_0;
  wire         updateProviderCorrect = io_update_bits_meta[67] == updateTaken;
  wire         updateAltDiffers = io_update_bits_meta[59] != io_update_bits_meta[67];
  wire         _GEN = updateValids_0 & io_update_bits_meta[74];
  wire         needToAllocate =
    updateValids_0 & io_update_bits_mispred_mask_0
    & ~(io_update_bits_meta[62] & updateProviderCorrect & io_update_bits_meta[74]);
  wire [3:0]   _longerHistoryTableMask_T_1 = 4'h1 << io_update_bits_meta[73:72];
  wire [2:0]   _GEN_0 =
    _longerHistoryTableMask_T_1[2:0] | _longerHistoryTableMask_T_1[3:1];
  wire [3:0]   longerHistoryTableMask =
    ~({&(io_update_bits_meta[73:72]),
       _GEN_0[2],
       _GEN_0[1] | (&(io_update_bits_meta[73:72])),
       _GEN_0[0] | io_update_bits_meta[73:72] == 2'h2 | (&(io_update_bits_meta[73:72]))}
      & {4{io_update_bits_meta[74]}});
  wire         _firstEntry_T = io_update_bits_meta[50] & longerHistoryTableMask[0];
  wire         _firstEntry_T_1 = io_update_bits_meta[51] & longerHistoryTableMask[1];
  wire         _firstEntry_T_2 = io_update_bits_meta[52] & longerHistoryTableMask[2];
  reg  [3:0]   allocatableSlots_1;
  reg          tage_enable_dup_REG_1;
  wire         updateTaken_1 = updateValids_1 & io_update_bits_br_taken_mask_1;
  wire         updateProviderCorrect_1 = io_update_bits_meta[71] == updateTaken_1;
  wire         updateAltDiffers_1 = io_update_bits_meta[61] != io_update_bits_meta[71];
  wire         _GEN_1 = updateValids_1 & io_update_bits_meta[77];
  wire         needToAllocate_1 =
    updateValids_1 & io_update_bits_mispred_mask_1
    & ~(io_update_bits_meta[63] & updateProviderCorrect_1 & io_update_bits_meta[77]);
  wire [3:0]   _longerHistoryTableMask_T_11 = 4'h1 << io_update_bits_meta[76:75];
  wire [2:0]   _GEN_2 =
    _longerHistoryTableMask_T_11[2:0] | _longerHistoryTableMask_T_11[3:1];
  wire [3:0]   longerHistoryTableMask_1 =
    ~({&(io_update_bits_meta[76:75]),
       _GEN_2[2],
       _GEN_2[1] | (&(io_update_bits_meta[76:75])),
       _GEN_2[0] | io_update_bits_meta[76:75] == 2'h2 | (&(io_update_bits_meta[76:75]))}
      & {4{io_update_bits_meta[77]}});
  wire         _firstEntry_T_6 = io_update_bits_meta[54] & longerHistoryTableMask_1[0];
  wire         _firstEntry_T_7 = io_update_bits_meta[55] & longerHistoryTableMask_1[1];
  wire         _firstEntry_T_8 = io_update_bits_meta[56] & longerHistoryTableMask_1[2];
  reg          tables_0_io_update_reset_u_0_REG;
  reg          tables_0_io_update_mask_0_REG;
  reg          tables_0_io_update_takens_0_r;
  reg          tables_0_io_update_alloc_0_r;
  reg  [2:0]   tables_0_io_update_oldCtrs_0_r;
  reg          tables_0_io_update_uMask_0_r;
  reg          tables_0_io_update_us_0_r;
  reg          tables_1_io_update_reset_u_0_REG;
  reg          tables_1_io_update_mask_0_REG;
  reg          tables_1_io_update_takens_0_r;
  reg          tables_1_io_update_alloc_0_r;
  reg  [2:0]   tables_1_io_update_oldCtrs_0_r;
  reg          tables_1_io_update_uMask_0_r;
  reg          tables_1_io_update_us_0_r;
  reg          tables_2_io_update_reset_u_0_REG;
  reg          tables_2_io_update_mask_0_REG;
  reg          tables_2_io_update_takens_0_r;
  reg          tables_2_io_update_alloc_0_r;
  reg  [2:0]   tables_2_io_update_oldCtrs_0_r;
  reg          tables_2_io_update_uMask_0_r;
  reg          tables_2_io_update_us_0_r;
  reg          tables_3_io_update_reset_u_0_REG;
  reg          tables_3_io_update_mask_0_REG;
  reg          tables_3_io_update_takens_0_r;
  reg          tables_3_io_update_alloc_0_r;
  reg  [2:0]   tables_3_io_update_oldCtrs_0_r;
  reg          tables_3_io_update_uMask_0_r;
  reg          tables_3_io_update_us_0_r;
  reg          tables_0_io_update_reset_u_1_REG;
  reg          tables_0_io_update_mask_1_REG;
  reg          tables_0_io_update_takens_1_r;
  reg          tables_0_io_update_alloc_1_r;
  reg  [2:0]   tables_0_io_update_oldCtrs_1_r;
  reg          tables_0_io_update_uMask_1_r;
  reg          tables_0_io_update_us_1_r;
  reg  [40:0]  tables_0_io_update_pc_r_1;
  reg  [255:0] tables_0_io_update_ghist_r_1;
  reg          tables_1_io_update_reset_u_1_REG;
  reg          tables_1_io_update_mask_1_REG;
  reg          tables_1_io_update_takens_1_r;
  reg          tables_1_io_update_alloc_1_r;
  reg  [2:0]   tables_1_io_update_oldCtrs_1_r;
  reg          tables_1_io_update_uMask_1_r;
  reg          tables_1_io_update_us_1_r;
  reg  [40:0]  tables_1_io_update_pc_r_1;
  reg  [255:0] tables_1_io_update_ghist_r_1;
  reg          tables_2_io_update_reset_u_1_REG;
  reg          tables_2_io_update_mask_1_REG;
  reg          tables_2_io_update_takens_1_r;
  reg          tables_2_io_update_alloc_1_r;
  reg  [2:0]   tables_2_io_update_oldCtrs_1_r;
  reg          tables_2_io_update_uMask_1_r;
  reg          tables_2_io_update_us_1_r;
  reg  [40:0]  tables_2_io_update_pc_r_1;
  reg  [255:0] tables_2_io_update_ghist_r_1;
  reg          tables_3_io_update_reset_u_1_REG;
  reg          tables_3_io_update_mask_1_REG;
  reg          tables_3_io_update_takens_1_r;
  reg          tables_3_io_update_alloc_1_r;
  reg  [2:0]   tables_3_io_update_oldCtrs_1_r;
  reg          tables_3_io_update_uMask_1_r;
  reg          tables_3_io_update_us_1_r;
  reg  [40:0]  tables_3_io_update_pc_r_1;
  reg  [255:0] tables_3_io_update_ghist_r_1;
  reg          REG_2_0;
  reg          REG_2_1;
  reg  [1:0]   r_0;
  reg  [1:0]   r_1;
  reg  [40:0]  bt_io_update_pc_r;
  reg          r_1_0;
  reg          r_1_1;
  reg  [4:0]   scThresholds_0_ctr;
  reg  [7:0]   scThresholds_0_thres;
  reg  [4:0]   scThresholds_1_ctr;
  reg  [7:0]   scThresholds_1_thres;
  reg  [8:0]   s2_scTableSums_0;
  reg  [8:0]   s2_scTableSums_1;
  reg  [2:0]   s2_tagePrvdCtrCentered_r;
  reg  [5:0]   s2_scResps_r_0_ctrs_0_0;
  reg  [5:0]   s2_scResps_r_0_ctrs_0_1;
  reg  [5:0]   s2_scResps_r_1_ctrs_0_0;
  reg  [5:0]   s2_scResps_r_1_ctrs_0_1;
  reg  [5:0]   s2_scResps_r_2_ctrs_0_0;
  reg  [5:0]   s2_scResps_r_2_ctrs_0_1;
  reg  [5:0]   s2_scResps_r_3_ctrs_0_0;
  reg  [5:0]   s2_scResps_r_3_ctrs_0_1;
  reg          s3_pred_dup_0;
  reg          s3_pred_dup_1;
  reg          s3_pred_dup_2;
  reg          s3_pred_dup_3;
  reg          sc_enable_dup_REG;
  wire         tagePred =
    io_update_bits_meta[62] ? io_update_bits_meta[59] : io_update_bits_meta[67];
  wire [7:0]   _tableSum_T_8 =
    8'({io_update_bits_meta[5], io_update_bits_meta[5:0], 1'h1}
       + {io_update_bits_meta[11], io_update_bits_meta[11:6], 1'h1});
  wire [7:0]   _tableSum_T_9 =
    8'({io_update_bits_meta[17], io_update_bits_meta[17:12], 1'h1}
       + {io_update_bits_meta[23], io_update_bits_meta[23:18], 1'h1});
  wire [8:0]   tableSum =
    9'({_tableSum_T_8[7], _tableSum_T_8} + {_tableSum_T_9[7], _tableSum_T_9});
  wire [2:0]   _sumAboveThreshold_T = io_update_bits_meta[67:65] ^ 3'h4;
  wire [9:0]   _GEN_3 = {tableSum[8], tableSum};
  wire [9:0]   _GEN_4 = {{3{_sumAboveThreshold_T[2]}}, _sumAboveThreshold_T, 4'h8};
  wire         _update_on_mispred_0_T =
    io_update_bits_meta[48] != io_update_bits_br_taken_mask_0;
  reg  [8:0]   s2_scTableSums_1_0;
  reg  [8:0]   s2_scTableSums_1_1;
  reg  [2:0]   s2_tagePrvdCtrCentered_r_1;
  reg  [5:0]   s2_scResps_r_1_0_ctrs_1_0;
  reg  [5:0]   s2_scResps_r_1_0_ctrs_1_1;
  reg  [5:0]   s2_scResps_r_1_1_ctrs_1_0;
  reg  [5:0]   s2_scResps_r_1_1_ctrs_1_1;
  reg  [5:0]   s2_scResps_r_1_2_ctrs_1_0;
  reg  [5:0]   s2_scResps_r_1_2_ctrs_1_1;
  reg  [5:0]   s2_scResps_r_1_3_ctrs_1_0;
  reg  [5:0]   s2_scResps_r_1_3_ctrs_1_1;
  reg          s3_pred_dup_0_1;
  reg          s3_pred_dup_1_1;
  reg          s3_pred_dup_2_1;
  reg          s3_pred_dup_3_1;
  reg          sc_enable_dup_REG_1;
  wire         tagePred_1 =
    io_update_bits_meta[63] ? io_update_bits_meta[61] : io_update_bits_meta[71];
  wire [7:0]   _tableSum_T_18 =
    8'({io_update_bits_meta[29], io_update_bits_meta[29:24], 1'h1}
       + {io_update_bits_meta[35], io_update_bits_meta[35:30], 1'h1});
  wire [7:0]   _tableSum_T_19 =
    8'({io_update_bits_meta[41], io_update_bits_meta[41:36], 1'h1}
       + {io_update_bits_meta[47], io_update_bits_meta[47:42], 1'h1});
  wire [8:0]   tableSum_1 =
    9'({_tableSum_T_18[7], _tableSum_T_18} + {_tableSum_T_19[7], _tableSum_T_19});
  wire [2:0]   _sumAboveThreshold_T_19 = io_update_bits_meta[71:69] ^ 3'h4;
  wire [9:0]   _GEN_5 = {tableSum_1[8], tableSum_1};
  wire [9:0]   _GEN_6 = {{3{_sumAboveThreshold_T_19[2]}}, _sumAboveThreshold_T_19, 4'h8};
  wire         _update_on_mispred_1_T =
    io_update_bits_meta[49] != io_update_bits_br_taken_mask_1;
  reg          scTables_0_io_update_mask_0_REG;
  reg          scTables_0_io_update_tagePreds_0_r;
  reg          scTables_0_io_update_takens_0_r;
  reg  [5:0]   scTables_0_io_update_oldCtrs_0_r;
  reg          scTables_1_io_update_mask_0_REG;
  reg          scTables_1_io_update_tagePreds_0_r;
  reg          scTables_1_io_update_takens_0_r;
  reg  [5:0]   scTables_1_io_update_oldCtrs_0_r;
  reg          scTables_2_io_update_mask_0_REG;
  reg          scTables_2_io_update_tagePreds_0_r;
  reg          scTables_2_io_update_takens_0_r;
  reg  [5:0]   scTables_2_io_update_oldCtrs_0_r;
  reg          scTables_3_io_update_mask_0_REG;
  reg          scTables_3_io_update_tagePreds_0_r;
  reg          scTables_3_io_update_takens_0_r;
  reg  [5:0]   scTables_3_io_update_oldCtrs_0_r;
  reg          scTables_0_io_update_mask_1_REG;
  reg          scTables_0_io_update_tagePreds_1_r;
  reg          scTables_0_io_update_takens_1_r;
  reg  [5:0]   scTables_0_io_update_oldCtrs_1_r;
  reg  [40:0]  scTables_0_io_update_pc_r_1;
  reg          scTables_1_io_update_mask_1_REG;
  reg          scTables_1_io_update_tagePreds_1_r;
  reg          scTables_1_io_update_takens_1_r;
  reg  [5:0]   scTables_1_io_update_oldCtrs_1_r;
  reg  [40:0]  scTables_1_io_update_pc_r_1;
  reg  [255:0] scTables_1_io_update_ghist_r_1;
  reg          scTables_2_io_update_mask_1_REG;
  reg          scTables_2_io_update_tagePreds_1_r;
  reg          scTables_2_io_update_takens_1_r;
  reg  [5:0]   scTables_2_io_update_oldCtrs_1_r;
  reg  [40:0]  scTables_2_io_update_pc_r_1;
  reg  [255:0] scTables_2_io_update_ghist_r_1;
  reg          scTables_3_io_update_mask_1_REG;
  reg          scTables_3_io_update_tagePreds_1_r;
  reg          scTables_3_io_update_takens_1_r;
  reg  [5:0]   scTables_3_io_update_oldCtrs_1_r;
  reg  [40:0]  scTables_3_io_update_pc_r_1;
  reg  [255:0] scTables_3_io_update_ghist_r_1;
  reg  [1:0]   io_perf_0_value_REG;
  reg  [1:0]   io_perf_0_value_REG_1;
  reg  [1:0]   io_perf_1_value_REG;
  reg  [1:0]   io_perf_1_value_REG_1;
  reg  [1:0]   io_perf_2_value_REG;
  reg  [1:0]   io_perf_2_value_REG_1;
  wire [40:0]  _GEN_7 = {5'h0, _reset_vector_pipMod_io_out_bits};
  wire [7:0]   _s1_scTableSums_T_8 =
    8'({_scTables_0_io_resp_ctrs_0_0[5], _scTables_0_io_resp_ctrs_0_0, 1'h1}
       + {_scTables_1_io_resp_ctrs_0_0[5], _scTables_1_io_resp_ctrs_0_0, 1'h1});
  wire [7:0]   _s1_scTableSums_T_9 =
    8'({_scTables_2_io_resp_ctrs_0_0[5], _scTables_2_io_resp_ctrs_0_0, 1'h1}
       + {_scTables_3_io_resp_ctrs_0_0[5], _scTables_3_io_resp_ctrs_0_0, 1'h1});
  wire [7:0]   _s1_scTableSums_T_19 =
    8'({_scTables_0_io_resp_ctrs_0_1[5], _scTables_0_io_resp_ctrs_0_1, 1'h1}
       + {_scTables_1_io_resp_ctrs_0_1[5], _scTables_1_io_resp_ctrs_0_1, 1'h1});
  wire [7:0]   _s1_scTableSums_T_20 =
    8'({_scTables_2_io_resp_ctrs_0_1[5], _scTables_2_io_resp_ctrs_0_1, 1'h1}
       + {_scTables_3_io_resp_ctrs_0_1[5], _scTables_3_io_resp_ctrs_0_1, 1'h1});
  wire [7:0]   _s1_scTableSums_T_30 =
    8'({_scTables_0_io_resp_ctrs_1_0[5], _scTables_0_io_resp_ctrs_1_0, 1'h1}
       + {_scTables_1_io_resp_ctrs_1_0[5], _scTables_1_io_resp_ctrs_1_0, 1'h1});
  wire [7:0]   _s1_scTableSums_T_31 =
    8'({_scTables_2_io_resp_ctrs_1_0[5], _scTables_2_io_resp_ctrs_1_0, 1'h1}
       + {_scTables_3_io_resp_ctrs_1_0[5], _scTables_3_io_resp_ctrs_1_0, 1'h1});
  wire [7:0]   _s1_scTableSums_T_41 =
    8'({_scTables_0_io_resp_ctrs_1_1[5], _scTables_0_io_resp_ctrs_1_1, 1'h1}
       + {_scTables_1_io_resp_ctrs_1_1[5], _scTables_1_io_resp_ctrs_1_1, 1'h1});
  wire [7:0]   _s1_scTableSums_T_42 =
    8'({_scTables_2_io_resp_ctrs_1_1[5], _scTables_2_io_resp_ctrs_1_1, 1'h1}
       + {_scTables_3_io_resp_ctrs_1_1[5], _scTables_3_io_resp_ctrs_1_1, 1'h1});
  wire         useAltCtr =
    s1_pc_dup_0[7:1] == 7'h0 & useAltOnNaCtrs_0_0[3] | s1_pc_dup_0[7:1] == 7'h1
    & useAltOnNaCtrs_0_1[3] | s1_pc_dup_0[7:1] == 7'h2 & useAltOnNaCtrs_0_2[3]
    | s1_pc_dup_0[7:1] == 7'h3 & useAltOnNaCtrs_0_3[3] | s1_pc_dup_0[7:1] == 7'h4
    & useAltOnNaCtrs_0_4[3] | s1_pc_dup_0[7:1] == 7'h5 & useAltOnNaCtrs_0_5[3]
    | s1_pc_dup_0[7:1] == 7'h6 & useAltOnNaCtrs_0_6[3] | s1_pc_dup_0[7:1] == 7'h7
    & useAltOnNaCtrs_0_7[3] | s1_pc_dup_0[7:1] == 7'h8 & useAltOnNaCtrs_0_8[3]
    | s1_pc_dup_0[7:1] == 7'h9 & useAltOnNaCtrs_0_9[3] | s1_pc_dup_0[7:1] == 7'hA
    & useAltOnNaCtrs_0_10[3] | s1_pc_dup_0[7:1] == 7'hB & useAltOnNaCtrs_0_11[3]
    | s1_pc_dup_0[7:1] == 7'hC & useAltOnNaCtrs_0_12[3] | s1_pc_dup_0[7:1] == 7'hD
    & useAltOnNaCtrs_0_13[3] | s1_pc_dup_0[7:1] == 7'hE & useAltOnNaCtrs_0_14[3]
    | s1_pc_dup_0[7:1] == 7'hF & useAltOnNaCtrs_0_15[3] | s1_pc_dup_0[7:1] == 7'h10
    & useAltOnNaCtrs_0_16[3] | s1_pc_dup_0[7:1] == 7'h11 & useAltOnNaCtrs_0_17[3]
    | s1_pc_dup_0[7:1] == 7'h12 & useAltOnNaCtrs_0_18[3] | s1_pc_dup_0[7:1] == 7'h13
    & useAltOnNaCtrs_0_19[3] | s1_pc_dup_0[7:1] == 7'h14 & useAltOnNaCtrs_0_20[3]
    | s1_pc_dup_0[7:1] == 7'h15 & useAltOnNaCtrs_0_21[3] | s1_pc_dup_0[7:1] == 7'h16
    & useAltOnNaCtrs_0_22[3] | s1_pc_dup_0[7:1] == 7'h17 & useAltOnNaCtrs_0_23[3]
    | s1_pc_dup_0[7:1] == 7'h18 & useAltOnNaCtrs_0_24[3] | s1_pc_dup_0[7:1] == 7'h19
    & useAltOnNaCtrs_0_25[3] | s1_pc_dup_0[7:1] == 7'h1A & useAltOnNaCtrs_0_26[3]
    | s1_pc_dup_0[7:1] == 7'h1B & useAltOnNaCtrs_0_27[3] | s1_pc_dup_0[7:1] == 7'h1C
    & useAltOnNaCtrs_0_28[3] | s1_pc_dup_0[7:1] == 7'h1D & useAltOnNaCtrs_0_29[3]
    | s1_pc_dup_0[7:1] == 7'h1E & useAltOnNaCtrs_0_30[3] | s1_pc_dup_0[7:1] == 7'h1F
    & useAltOnNaCtrs_0_31[3] | s1_pc_dup_0[7:1] == 7'h20 & useAltOnNaCtrs_0_32[3]
    | s1_pc_dup_0[7:1] == 7'h21 & useAltOnNaCtrs_0_33[3] | s1_pc_dup_0[7:1] == 7'h22
    & useAltOnNaCtrs_0_34[3] | s1_pc_dup_0[7:1] == 7'h23 & useAltOnNaCtrs_0_35[3]
    | s1_pc_dup_0[7:1] == 7'h24 & useAltOnNaCtrs_0_36[3] | s1_pc_dup_0[7:1] == 7'h25
    & useAltOnNaCtrs_0_37[3] | s1_pc_dup_0[7:1] == 7'h26 & useAltOnNaCtrs_0_38[3]
    | s1_pc_dup_0[7:1] == 7'h27 & useAltOnNaCtrs_0_39[3] | s1_pc_dup_0[7:1] == 7'h28
    & useAltOnNaCtrs_0_40[3] | s1_pc_dup_0[7:1] == 7'h29 & useAltOnNaCtrs_0_41[3]
    | s1_pc_dup_0[7:1] == 7'h2A & useAltOnNaCtrs_0_42[3] | s1_pc_dup_0[7:1] == 7'h2B
    & useAltOnNaCtrs_0_43[3] | s1_pc_dup_0[7:1] == 7'h2C & useAltOnNaCtrs_0_44[3]
    | s1_pc_dup_0[7:1] == 7'h2D & useAltOnNaCtrs_0_45[3] | s1_pc_dup_0[7:1] == 7'h2E
    & useAltOnNaCtrs_0_46[3] | s1_pc_dup_0[7:1] == 7'h2F & useAltOnNaCtrs_0_47[3]
    | s1_pc_dup_0[7:1] == 7'h30 & useAltOnNaCtrs_0_48[3] | s1_pc_dup_0[7:1] == 7'h31
    & useAltOnNaCtrs_0_49[3] | s1_pc_dup_0[7:1] == 7'h32 & useAltOnNaCtrs_0_50[3]
    | s1_pc_dup_0[7:1] == 7'h33 & useAltOnNaCtrs_0_51[3] | s1_pc_dup_0[7:1] == 7'h34
    & useAltOnNaCtrs_0_52[3] | s1_pc_dup_0[7:1] == 7'h35 & useAltOnNaCtrs_0_53[3]
    | s1_pc_dup_0[7:1] == 7'h36 & useAltOnNaCtrs_0_54[3] | s1_pc_dup_0[7:1] == 7'h37
    & useAltOnNaCtrs_0_55[3] | s1_pc_dup_0[7:1] == 7'h38 & useAltOnNaCtrs_0_56[3]
    | s1_pc_dup_0[7:1] == 7'h39 & useAltOnNaCtrs_0_57[3] | s1_pc_dup_0[7:1] == 7'h3A
    & useAltOnNaCtrs_0_58[3] | s1_pc_dup_0[7:1] == 7'h3B & useAltOnNaCtrs_0_59[3]
    | s1_pc_dup_0[7:1] == 7'h3C & useAltOnNaCtrs_0_60[3] | s1_pc_dup_0[7:1] == 7'h3D
    & useAltOnNaCtrs_0_61[3] | s1_pc_dup_0[7:1] == 7'h3E & useAltOnNaCtrs_0_62[3]
    | s1_pc_dup_0[7:1] == 7'h3F & useAltOnNaCtrs_0_63[3] | s1_pc_dup_0[7:1] == 7'h40
    & useAltOnNaCtrs_0_64[3] | s1_pc_dup_0[7:1] == 7'h41 & useAltOnNaCtrs_0_65[3]
    | s1_pc_dup_0[7:1] == 7'h42 & useAltOnNaCtrs_0_66[3] | s1_pc_dup_0[7:1] == 7'h43
    & useAltOnNaCtrs_0_67[3] | s1_pc_dup_0[7:1] == 7'h44 & useAltOnNaCtrs_0_68[3]
    | s1_pc_dup_0[7:1] == 7'h45 & useAltOnNaCtrs_0_69[3] | s1_pc_dup_0[7:1] == 7'h46
    & useAltOnNaCtrs_0_70[3] | s1_pc_dup_0[7:1] == 7'h47 & useAltOnNaCtrs_0_71[3]
    | s1_pc_dup_0[7:1] == 7'h48 & useAltOnNaCtrs_0_72[3] | s1_pc_dup_0[7:1] == 7'h49
    & useAltOnNaCtrs_0_73[3] | s1_pc_dup_0[7:1] == 7'h4A & useAltOnNaCtrs_0_74[3]
    | s1_pc_dup_0[7:1] == 7'h4B & useAltOnNaCtrs_0_75[3] | s1_pc_dup_0[7:1] == 7'h4C
    & useAltOnNaCtrs_0_76[3] | s1_pc_dup_0[7:1] == 7'h4D & useAltOnNaCtrs_0_77[3]
    | s1_pc_dup_0[7:1] == 7'h4E & useAltOnNaCtrs_0_78[3] | s1_pc_dup_0[7:1] == 7'h4F
    & useAltOnNaCtrs_0_79[3] | s1_pc_dup_0[7:1] == 7'h50 & useAltOnNaCtrs_0_80[3]
    | s1_pc_dup_0[7:1] == 7'h51 & useAltOnNaCtrs_0_81[3] | s1_pc_dup_0[7:1] == 7'h52
    & useAltOnNaCtrs_0_82[3] | s1_pc_dup_0[7:1] == 7'h53 & useAltOnNaCtrs_0_83[3]
    | s1_pc_dup_0[7:1] == 7'h54 & useAltOnNaCtrs_0_84[3] | s1_pc_dup_0[7:1] == 7'h55
    & useAltOnNaCtrs_0_85[3] | s1_pc_dup_0[7:1] == 7'h56 & useAltOnNaCtrs_0_86[3]
    | s1_pc_dup_0[7:1] == 7'h57 & useAltOnNaCtrs_0_87[3] | s1_pc_dup_0[7:1] == 7'h58
    & useAltOnNaCtrs_0_88[3] | s1_pc_dup_0[7:1] == 7'h59 & useAltOnNaCtrs_0_89[3]
    | s1_pc_dup_0[7:1] == 7'h5A & useAltOnNaCtrs_0_90[3] | s1_pc_dup_0[7:1] == 7'h5B
    & useAltOnNaCtrs_0_91[3] | s1_pc_dup_0[7:1] == 7'h5C & useAltOnNaCtrs_0_92[3]
    | s1_pc_dup_0[7:1] == 7'h5D & useAltOnNaCtrs_0_93[3] | s1_pc_dup_0[7:1] == 7'h5E
    & useAltOnNaCtrs_0_94[3] | s1_pc_dup_0[7:1] == 7'h5F & useAltOnNaCtrs_0_95[3]
    | s1_pc_dup_0[7:1] == 7'h60 & useAltOnNaCtrs_0_96[3] | s1_pc_dup_0[7:1] == 7'h61
    & useAltOnNaCtrs_0_97[3] | s1_pc_dup_0[7:1] == 7'h62 & useAltOnNaCtrs_0_98[3]
    | s1_pc_dup_0[7:1] == 7'h63 & useAltOnNaCtrs_0_99[3] | s1_pc_dup_0[7:1] == 7'h64
    & useAltOnNaCtrs_0_100[3] | s1_pc_dup_0[7:1] == 7'h65 & useAltOnNaCtrs_0_101[3]
    | s1_pc_dup_0[7:1] == 7'h66 & useAltOnNaCtrs_0_102[3] | s1_pc_dup_0[7:1] == 7'h67
    & useAltOnNaCtrs_0_103[3] | s1_pc_dup_0[7:1] == 7'h68 & useAltOnNaCtrs_0_104[3]
    | s1_pc_dup_0[7:1] == 7'h69 & useAltOnNaCtrs_0_105[3] | s1_pc_dup_0[7:1] == 7'h6A
    & useAltOnNaCtrs_0_106[3] | s1_pc_dup_0[7:1] == 7'h6B & useAltOnNaCtrs_0_107[3]
    | s1_pc_dup_0[7:1] == 7'h6C & useAltOnNaCtrs_0_108[3] | s1_pc_dup_0[7:1] == 7'h6D
    & useAltOnNaCtrs_0_109[3] | s1_pc_dup_0[7:1] == 7'h6E & useAltOnNaCtrs_0_110[3]
    | s1_pc_dup_0[7:1] == 7'h6F & useAltOnNaCtrs_0_111[3] | s1_pc_dup_0[7:1] == 7'h70
    & useAltOnNaCtrs_0_112[3] | s1_pc_dup_0[7:1] == 7'h71 & useAltOnNaCtrs_0_113[3]
    | s1_pc_dup_0[7:1] == 7'h72 & useAltOnNaCtrs_0_114[3] | s1_pc_dup_0[7:1] == 7'h73
    & useAltOnNaCtrs_0_115[3] | s1_pc_dup_0[7:1] == 7'h74 & useAltOnNaCtrs_0_116[3]
    | s1_pc_dup_0[7:1] == 7'h75 & useAltOnNaCtrs_0_117[3] | s1_pc_dup_0[7:1] == 7'h76
    & useAltOnNaCtrs_0_118[3] | s1_pc_dup_0[7:1] == 7'h77 & useAltOnNaCtrs_0_119[3]
    | s1_pc_dup_0[7:1] == 7'h78 & useAltOnNaCtrs_0_120[3] | s1_pc_dup_0[7:1] == 7'h79
    & useAltOnNaCtrs_0_121[3] | s1_pc_dup_0[7:1] == 7'h7A & useAltOnNaCtrs_0_122[3]
    | s1_pc_dup_0[7:1] == 7'h7B & useAltOnNaCtrs_0_123[3] | s1_pc_dup_0[7:1] == 7'h7C
    & useAltOnNaCtrs_0_124[3] | s1_pc_dup_0[7:1] == 7'h7D & useAltOnNaCtrs_0_125[3]
    | s1_pc_dup_0[7:1] == 7'h7E & useAltOnNaCtrs_0_126[3] | (&(s1_pc_dup_0[7:1]))
    & useAltOnNaCtrs_0_127[3];
  wire         _providerInfo_T = _tables_3_io_resps_0_valid | _tables_2_io_resps_0_valid;
  wire [2:0]   providerInfo_resp_ctr =
    _providerInfo_T
      ? (_tables_3_io_resps_0_valid
           ? _tables_3_io_resps_0_bits_ctr
           : _tables_2_io_resps_0_bits_ctr)
      : _tables_1_io_resps_0_valid
          ? _tables_1_io_resps_0_bits_ctr
          : _tables_0_io_resps_0_bits_ctr;
  wire         provided =
    _tables_0_io_resps_0_valid | _tables_1_io_resps_0_valid | _tables_2_io_resps_0_valid
    | _tables_3_io_resps_0_valid;
  wire         s1_altUsed_0 =
    ~provided
    | (_providerInfo_T
         ? (_tables_3_io_resps_0_valid
              ? _tables_3_io_resps_0_bits_unconf & useAltCtr
              : _tables_2_io_resps_0_bits_unconf & useAltCtr)
         : _tables_1_io_resps_0_valid
             ? _tables_1_io_resps_0_bits_unconf & useAltCtr
             : _tables_0_io_resps_0_bits_unconf & useAltCtr);
  wire         s1_tageTakens_0 =
    s1_altUsed_0 ? _bt_io_s1_cnt_0[1] : providerInfo_resp_ctr[2];
  wire         baseupdate_0 = updateValids_0 & io_update_bits_meta[62];
  wire         _GEN_8 = io_update_bits_meta[73:72] == 2'h0;
  wire         _GEN_9 = io_update_bits_meta[73:72] == 2'h1;
  wire         _GEN_10 = io_update_bits_meta[73:72] == 2'h2;
  wire [1:0]   maskedEntry =
    io_update_bits_meta[50] & longerHistoryTableMask[0] & _allocLFSR_prng_io_out_0
      ? 2'h0
      : io_update_bits_meta[51] & longerHistoryTableMask[1] & _allocLFSR_prng_io_out_1
          ? 2'h1
          : {1'h1,
             ~(io_update_bits_meta[52] & longerHistoryTableMask[2]
               & _allocLFSR_prng_io_out_2)};
  wire [3:0]   _allocate_T =
    (io_update_bits_meta[53:50] & longerHistoryTableMask) >> maskedEntry;
  wire [1:0]   allocate =
    _allocate_T[0]
      ? maskedEntry
      : _firstEntry_T ? 2'h0 : _firstEntry_T_1 ? 2'h1 : {1'h1, ~_firstEntry_T_2};
  wire         _GEN_11 = allocate == 2'h0;
  wire         _GEN_12 = needToAllocate & (|(io_update_bits_meta[53:50])) & _GEN_11;
  wire         updateMask_0_0 = _GEN_12 | _GEN & _GEN_8;
  wire         _GEN_13 = allocate == 2'h1;
  wire         _GEN_14 = needToAllocate & (|(io_update_bits_meta[53:50])) & _GEN_13;
  wire         updateMask_0_1 = _GEN_14 | _GEN & _GEN_9;
  wire         _GEN_15 = allocate == 2'h2;
  wire         _GEN_16 = needToAllocate & (|(io_update_bits_meta[53:50])) & _GEN_15;
  wire         updateMask_0_2 = _GEN_16 | _GEN & _GEN_10;
  wire         _GEN_17 = needToAllocate & (|(io_update_bits_meta[53:50])) & (&allocate);
  wire         updateMask_0_3 = _GEN_17 | _GEN & (&(io_update_bits_meta[73:72]));
  wire         _GEN_18 = needToAllocate & (|(io_update_bits_meta[53:50]));
  wire         updateResetU_0 = needToAllocate & (&bankTickCtrs_0);
  wire         useAltCtr_1 =
    s1_pc_dup_0[7:1] == 7'h0 & useAltOnNaCtrs_1_0[3] | s1_pc_dup_0[7:1] == 7'h1
    & useAltOnNaCtrs_1_1[3] | s1_pc_dup_0[7:1] == 7'h2 & useAltOnNaCtrs_1_2[3]
    | s1_pc_dup_0[7:1] == 7'h3 & useAltOnNaCtrs_1_3[3] | s1_pc_dup_0[7:1] == 7'h4
    & useAltOnNaCtrs_1_4[3] | s1_pc_dup_0[7:1] == 7'h5 & useAltOnNaCtrs_1_5[3]
    | s1_pc_dup_0[7:1] == 7'h6 & useAltOnNaCtrs_1_6[3] | s1_pc_dup_0[7:1] == 7'h7
    & useAltOnNaCtrs_1_7[3] | s1_pc_dup_0[7:1] == 7'h8 & useAltOnNaCtrs_1_8[3]
    | s1_pc_dup_0[7:1] == 7'h9 & useAltOnNaCtrs_1_9[3] | s1_pc_dup_0[7:1] == 7'hA
    & useAltOnNaCtrs_1_10[3] | s1_pc_dup_0[7:1] == 7'hB & useAltOnNaCtrs_1_11[3]
    | s1_pc_dup_0[7:1] == 7'hC & useAltOnNaCtrs_1_12[3] | s1_pc_dup_0[7:1] == 7'hD
    & useAltOnNaCtrs_1_13[3] | s1_pc_dup_0[7:1] == 7'hE & useAltOnNaCtrs_1_14[3]
    | s1_pc_dup_0[7:1] == 7'hF & useAltOnNaCtrs_1_15[3] | s1_pc_dup_0[7:1] == 7'h10
    & useAltOnNaCtrs_1_16[3] | s1_pc_dup_0[7:1] == 7'h11 & useAltOnNaCtrs_1_17[3]
    | s1_pc_dup_0[7:1] == 7'h12 & useAltOnNaCtrs_1_18[3] | s1_pc_dup_0[7:1] == 7'h13
    & useAltOnNaCtrs_1_19[3] | s1_pc_dup_0[7:1] == 7'h14 & useAltOnNaCtrs_1_20[3]
    | s1_pc_dup_0[7:1] == 7'h15 & useAltOnNaCtrs_1_21[3] | s1_pc_dup_0[7:1] == 7'h16
    & useAltOnNaCtrs_1_22[3] | s1_pc_dup_0[7:1] == 7'h17 & useAltOnNaCtrs_1_23[3]
    | s1_pc_dup_0[7:1] == 7'h18 & useAltOnNaCtrs_1_24[3] | s1_pc_dup_0[7:1] == 7'h19
    & useAltOnNaCtrs_1_25[3] | s1_pc_dup_0[7:1] == 7'h1A & useAltOnNaCtrs_1_26[3]
    | s1_pc_dup_0[7:1] == 7'h1B & useAltOnNaCtrs_1_27[3] | s1_pc_dup_0[7:1] == 7'h1C
    & useAltOnNaCtrs_1_28[3] | s1_pc_dup_0[7:1] == 7'h1D & useAltOnNaCtrs_1_29[3]
    | s1_pc_dup_0[7:1] == 7'h1E & useAltOnNaCtrs_1_30[3] | s1_pc_dup_0[7:1] == 7'h1F
    & useAltOnNaCtrs_1_31[3] | s1_pc_dup_0[7:1] == 7'h20 & useAltOnNaCtrs_1_32[3]
    | s1_pc_dup_0[7:1] == 7'h21 & useAltOnNaCtrs_1_33[3] | s1_pc_dup_0[7:1] == 7'h22
    & useAltOnNaCtrs_1_34[3] | s1_pc_dup_0[7:1] == 7'h23 & useAltOnNaCtrs_1_35[3]
    | s1_pc_dup_0[7:1] == 7'h24 & useAltOnNaCtrs_1_36[3] | s1_pc_dup_0[7:1] == 7'h25
    & useAltOnNaCtrs_1_37[3] | s1_pc_dup_0[7:1] == 7'h26 & useAltOnNaCtrs_1_38[3]
    | s1_pc_dup_0[7:1] == 7'h27 & useAltOnNaCtrs_1_39[3] | s1_pc_dup_0[7:1] == 7'h28
    & useAltOnNaCtrs_1_40[3] | s1_pc_dup_0[7:1] == 7'h29 & useAltOnNaCtrs_1_41[3]
    | s1_pc_dup_0[7:1] == 7'h2A & useAltOnNaCtrs_1_42[3] | s1_pc_dup_0[7:1] == 7'h2B
    & useAltOnNaCtrs_1_43[3] | s1_pc_dup_0[7:1] == 7'h2C & useAltOnNaCtrs_1_44[3]
    | s1_pc_dup_0[7:1] == 7'h2D & useAltOnNaCtrs_1_45[3] | s1_pc_dup_0[7:1] == 7'h2E
    & useAltOnNaCtrs_1_46[3] | s1_pc_dup_0[7:1] == 7'h2F & useAltOnNaCtrs_1_47[3]
    | s1_pc_dup_0[7:1] == 7'h30 & useAltOnNaCtrs_1_48[3] | s1_pc_dup_0[7:1] == 7'h31
    & useAltOnNaCtrs_1_49[3] | s1_pc_dup_0[7:1] == 7'h32 & useAltOnNaCtrs_1_50[3]
    | s1_pc_dup_0[7:1] == 7'h33 & useAltOnNaCtrs_1_51[3] | s1_pc_dup_0[7:1] == 7'h34
    & useAltOnNaCtrs_1_52[3] | s1_pc_dup_0[7:1] == 7'h35 & useAltOnNaCtrs_1_53[3]
    | s1_pc_dup_0[7:1] == 7'h36 & useAltOnNaCtrs_1_54[3] | s1_pc_dup_0[7:1] == 7'h37
    & useAltOnNaCtrs_1_55[3] | s1_pc_dup_0[7:1] == 7'h38 & useAltOnNaCtrs_1_56[3]
    | s1_pc_dup_0[7:1] == 7'h39 & useAltOnNaCtrs_1_57[3] | s1_pc_dup_0[7:1] == 7'h3A
    & useAltOnNaCtrs_1_58[3] | s1_pc_dup_0[7:1] == 7'h3B & useAltOnNaCtrs_1_59[3]
    | s1_pc_dup_0[7:1] == 7'h3C & useAltOnNaCtrs_1_60[3] | s1_pc_dup_0[7:1] == 7'h3D
    & useAltOnNaCtrs_1_61[3] | s1_pc_dup_0[7:1] == 7'h3E & useAltOnNaCtrs_1_62[3]
    | s1_pc_dup_0[7:1] == 7'h3F & useAltOnNaCtrs_1_63[3] | s1_pc_dup_0[7:1] == 7'h40
    & useAltOnNaCtrs_1_64[3] | s1_pc_dup_0[7:1] == 7'h41 & useAltOnNaCtrs_1_65[3]
    | s1_pc_dup_0[7:1] == 7'h42 & useAltOnNaCtrs_1_66[3] | s1_pc_dup_0[7:1] == 7'h43
    & useAltOnNaCtrs_1_67[3] | s1_pc_dup_0[7:1] == 7'h44 & useAltOnNaCtrs_1_68[3]
    | s1_pc_dup_0[7:1] == 7'h45 & useAltOnNaCtrs_1_69[3] | s1_pc_dup_0[7:1] == 7'h46
    & useAltOnNaCtrs_1_70[3] | s1_pc_dup_0[7:1] == 7'h47 & useAltOnNaCtrs_1_71[3]
    | s1_pc_dup_0[7:1] == 7'h48 & useAltOnNaCtrs_1_72[3] | s1_pc_dup_0[7:1] == 7'h49
    & useAltOnNaCtrs_1_73[3] | s1_pc_dup_0[7:1] == 7'h4A & useAltOnNaCtrs_1_74[3]
    | s1_pc_dup_0[7:1] == 7'h4B & useAltOnNaCtrs_1_75[3] | s1_pc_dup_0[7:1] == 7'h4C
    & useAltOnNaCtrs_1_76[3] | s1_pc_dup_0[7:1] == 7'h4D & useAltOnNaCtrs_1_77[3]
    | s1_pc_dup_0[7:1] == 7'h4E & useAltOnNaCtrs_1_78[3] | s1_pc_dup_0[7:1] == 7'h4F
    & useAltOnNaCtrs_1_79[3] | s1_pc_dup_0[7:1] == 7'h50 & useAltOnNaCtrs_1_80[3]
    | s1_pc_dup_0[7:1] == 7'h51 & useAltOnNaCtrs_1_81[3] | s1_pc_dup_0[7:1] == 7'h52
    & useAltOnNaCtrs_1_82[3] | s1_pc_dup_0[7:1] == 7'h53 & useAltOnNaCtrs_1_83[3]
    | s1_pc_dup_0[7:1] == 7'h54 & useAltOnNaCtrs_1_84[3] | s1_pc_dup_0[7:1] == 7'h55
    & useAltOnNaCtrs_1_85[3] | s1_pc_dup_0[7:1] == 7'h56 & useAltOnNaCtrs_1_86[3]
    | s1_pc_dup_0[7:1] == 7'h57 & useAltOnNaCtrs_1_87[3] | s1_pc_dup_0[7:1] == 7'h58
    & useAltOnNaCtrs_1_88[3] | s1_pc_dup_0[7:1] == 7'h59 & useAltOnNaCtrs_1_89[3]
    | s1_pc_dup_0[7:1] == 7'h5A & useAltOnNaCtrs_1_90[3] | s1_pc_dup_0[7:1] == 7'h5B
    & useAltOnNaCtrs_1_91[3] | s1_pc_dup_0[7:1] == 7'h5C & useAltOnNaCtrs_1_92[3]
    | s1_pc_dup_0[7:1] == 7'h5D & useAltOnNaCtrs_1_93[3] | s1_pc_dup_0[7:1] == 7'h5E
    & useAltOnNaCtrs_1_94[3] | s1_pc_dup_0[7:1] == 7'h5F & useAltOnNaCtrs_1_95[3]
    | s1_pc_dup_0[7:1] == 7'h60 & useAltOnNaCtrs_1_96[3] | s1_pc_dup_0[7:1] == 7'h61
    & useAltOnNaCtrs_1_97[3] | s1_pc_dup_0[7:1] == 7'h62 & useAltOnNaCtrs_1_98[3]
    | s1_pc_dup_0[7:1] == 7'h63 & useAltOnNaCtrs_1_99[3] | s1_pc_dup_0[7:1] == 7'h64
    & useAltOnNaCtrs_1_100[3] | s1_pc_dup_0[7:1] == 7'h65 & useAltOnNaCtrs_1_101[3]
    | s1_pc_dup_0[7:1] == 7'h66 & useAltOnNaCtrs_1_102[3] | s1_pc_dup_0[7:1] == 7'h67
    & useAltOnNaCtrs_1_103[3] | s1_pc_dup_0[7:1] == 7'h68 & useAltOnNaCtrs_1_104[3]
    | s1_pc_dup_0[7:1] == 7'h69 & useAltOnNaCtrs_1_105[3] | s1_pc_dup_0[7:1] == 7'h6A
    & useAltOnNaCtrs_1_106[3] | s1_pc_dup_0[7:1] == 7'h6B & useAltOnNaCtrs_1_107[3]
    | s1_pc_dup_0[7:1] == 7'h6C & useAltOnNaCtrs_1_108[3] | s1_pc_dup_0[7:1] == 7'h6D
    & useAltOnNaCtrs_1_109[3] | s1_pc_dup_0[7:1] == 7'h6E & useAltOnNaCtrs_1_110[3]
    | s1_pc_dup_0[7:1] == 7'h6F & useAltOnNaCtrs_1_111[3] | s1_pc_dup_0[7:1] == 7'h70
    & useAltOnNaCtrs_1_112[3] | s1_pc_dup_0[7:1] == 7'h71 & useAltOnNaCtrs_1_113[3]
    | s1_pc_dup_0[7:1] == 7'h72 & useAltOnNaCtrs_1_114[3] | s1_pc_dup_0[7:1] == 7'h73
    & useAltOnNaCtrs_1_115[3] | s1_pc_dup_0[7:1] == 7'h74 & useAltOnNaCtrs_1_116[3]
    | s1_pc_dup_0[7:1] == 7'h75 & useAltOnNaCtrs_1_117[3] | s1_pc_dup_0[7:1] == 7'h76
    & useAltOnNaCtrs_1_118[3] | s1_pc_dup_0[7:1] == 7'h77 & useAltOnNaCtrs_1_119[3]
    | s1_pc_dup_0[7:1] == 7'h78 & useAltOnNaCtrs_1_120[3] | s1_pc_dup_0[7:1] == 7'h79
    & useAltOnNaCtrs_1_121[3] | s1_pc_dup_0[7:1] == 7'h7A & useAltOnNaCtrs_1_122[3]
    | s1_pc_dup_0[7:1] == 7'h7B & useAltOnNaCtrs_1_123[3] | s1_pc_dup_0[7:1] == 7'h7C
    & useAltOnNaCtrs_1_124[3] | s1_pc_dup_0[7:1] == 7'h7D & useAltOnNaCtrs_1_125[3]
    | s1_pc_dup_0[7:1] == 7'h7E & useAltOnNaCtrs_1_126[3] | (&(s1_pc_dup_0[7:1]))
    & useAltOnNaCtrs_1_127[3];
  wire         _providerInfo_T_5 =
    _tables_3_io_resps_1_valid | _tables_2_io_resps_1_valid;
  wire [2:0]   s1_providerResps_1_ctr =
    _providerInfo_T_5
      ? (_tables_3_io_resps_1_valid
           ? _tables_3_io_resps_1_bits_ctr
           : _tables_2_io_resps_1_bits_ctr)
      : _tables_1_io_resps_1_valid
          ? _tables_1_io_resps_1_bits_ctr
          : _tables_0_io_resps_1_bits_ctr;
  wire         provided_1 =
    _tables_0_io_resps_1_valid | _tables_1_io_resps_1_valid | _tables_2_io_resps_1_valid
    | _tables_3_io_resps_1_valid;
  wire         s1_altUsed_1 =
    ~provided_1
    | (_providerInfo_T_5
         ? (_tables_3_io_resps_1_valid
              ? _tables_3_io_resps_1_bits_unconf & useAltCtr_1
              : _tables_2_io_resps_1_bits_unconf & useAltCtr_1)
         : _tables_1_io_resps_1_valid
             ? _tables_1_io_resps_1_bits_unconf & useAltCtr_1
             : _tables_0_io_resps_1_bits_unconf & useAltCtr_1);
  wire         s1_tageTakens_1 =
    s1_altUsed_1 ? _bt_io_s1_cnt_1[1] : s1_providerResps_1_ctr[2];
  wire         baseupdate_1 = updateValids_1 & io_update_bits_meta[63];
  wire         _GEN_19 = io_update_bits_meta[76:75] == 2'h0;
  wire         _GEN_20 = io_update_bits_meta[76:75] == 2'h1;
  wire         _GEN_21 = io_update_bits_meta[76:75] == 2'h2;
  wire [1:0]   maskedEntry_1 =
    io_update_bits_meta[54] & longerHistoryTableMask_1[0] & _allocLFSR_prng_1_io_out_0
      ? 2'h0
      : io_update_bits_meta[55] & longerHistoryTableMask_1[1] & _allocLFSR_prng_1_io_out_1
          ? 2'h1
          : {1'h1,
             ~(io_update_bits_meta[56] & longerHistoryTableMask_1[2]
               & _allocLFSR_prng_1_io_out_2)};
  wire [3:0]   _allocate_T_2 =
    (io_update_bits_meta[57:54] & longerHistoryTableMask_1) >> maskedEntry_1;
  wire [1:0]   allocate_1 =
    _allocate_T_2[0]
      ? maskedEntry_1
      : _firstEntry_T_6 ? 2'h0 : _firstEntry_T_7 ? 2'h1 : {1'h1, ~_firstEntry_T_8};
  wire         _GEN_22 = allocate_1 == 2'h0;
  wire         _GEN_23 = needToAllocate_1 & (|(io_update_bits_meta[57:54])) & _GEN_22;
  wire         updateMask_1_0 = _GEN_23 | _GEN_1 & _GEN_19;
  wire         _GEN_24 = allocate_1 == 2'h1;
  wire         _GEN_25 = needToAllocate_1 & (|(io_update_bits_meta[57:54])) & _GEN_24;
  wire         updateMask_1_1 = _GEN_25 | _GEN_1 & _GEN_20;
  wire         _GEN_26 = allocate_1 == 2'h2;
  wire         _GEN_27 = needToAllocate_1 & (|(io_update_bits_meta[57:54])) & _GEN_26;
  wire         updateMask_1_2 = _GEN_27 | _GEN_1 & _GEN_21;
  wire         _GEN_28 =
    needToAllocate_1 & (|(io_update_bits_meta[57:54])) & (&allocate_1);
  wire         updateMask_1_3 = _GEN_28 | _GEN_1 & (&(io_update_bits_meta[76:75]));
  wire         _GEN_29 = needToAllocate_1 & (|(io_update_bits_meta[57:54]));
  wire         updateResetU_1 = needToAllocate_1 & (&bankTickCtrs_1);
  wire [2:0]   _s2_tagePrvdCtrCentered_T = s2_tagePrvdCtrCentered_r ^ 3'h4;
  wire [9:0]   _GEN_30 =
    {{3{_s2_tagePrvdCtrCentered_T[2]}}, _s2_tagePrvdCtrCentered_T, 4'h8};
  wire [9:0]   s2_totalSums_0 = 10'({s2_scTableSums_0[8], s2_scTableSums_0} + _GEN_30);
  wire [9:0]   s2_totalSums_1 = 10'({s2_scTableSums_1[8], s2_scTableSums_1} + _GEN_30);
  wire [8:0]   _GEN_31 = {1'h0, scThresholds_0_thres};
  wire [8:0]   _GEN_32 =
    {{2{_s2_tagePrvdCtrCentered_T[2]}}, _s2_tagePrvdCtrCentered_T, 4'h8};
  wire         _GEN_33 =
    s2_tageTakens_dup_3_0
      ? $signed(s2_totalSums_1) > -10'sh1
      : $signed(s2_totalSums_0) > -10'sh1;
  wire         s2_pred =
    s2_provideds_0
    & (s2_tageTakens_dup_3_0
         ? $signed(s2_scTableSums_1) > $signed(9'(_GEN_31 - _GEN_32))
           & ~(s2_totalSums_1[9])
           | $signed(s2_scTableSums_1) < $signed(9'(9'(9'h0 - _GEN_31) - _GEN_32))
           & s2_totalSums_1[9]
         : $signed(s2_scTableSums_0) > $signed(9'(_GEN_31 - _GEN_32))
           & ~(s2_totalSums_0[9])
           | $signed(s2_scTableSums_0) < $signed(9'(9'(9'h0 - _GEN_31) - _GEN_32))
           & s2_totalSums_0[9])
      ? _GEN_33
      : s2_tageTakens_dup_3_0;
  wire [12:0]  _GEN_34 = {1'h0, 12'({1'h0, scThresholds_0_thres, 3'h0} + 12'h15)};
  wire [12:0]  _GEN_35 = {{6{_sumAboveThreshold_T[2]}}, _sumAboveThreshold_T, 4'h8};
  wire [12:0]  _GEN_36 = {{4{tableSum[8]}}, tableSum};
  wire [9:0]   sumAboveThreshold_totalSum = 10'(_GEN_3 + _GEN_4);
  wire         _GEN_37 =
    _update_on_mispred_0_T
    | ~($signed(_GEN_36) > $signed(13'(_GEN_34 - _GEN_35))
        & ~(sumAboveThreshold_totalSum[9])
        | $signed(_GEN_36) < $signed(13'(13'(13'h0 - _GEN_34) - _GEN_35))
        & sumAboveThreshold_totalSum[9]);
  wire         scUpdateMask_0_3 = _GEN & _GEN_37;
  wire         _GEN_38 = _GEN & _GEN_37;
  wire [2:0]   _s2_tagePrvdCtrCentered_T_2 = s2_tagePrvdCtrCentered_r_1 ^ 3'h4;
  wire [9:0]   _GEN_39 =
    {{3{_s2_tagePrvdCtrCentered_T_2[2]}}, _s2_tagePrvdCtrCentered_T_2, 4'h8};
  wire [9:0]   s2_totalSums_0_1 =
    10'({s2_scTableSums_1_0[8], s2_scTableSums_1_0} + _GEN_39);
  wire [9:0]   s2_totalSums_1_1 =
    10'({s2_scTableSums_1_1[8], s2_scTableSums_1_1} + _GEN_39);
  wire [8:0]   _GEN_40 = {1'h0, scThresholds_1_thres};
  wire [8:0]   _GEN_41 =
    {{2{_s2_tagePrvdCtrCentered_T_2[2]}}, _s2_tagePrvdCtrCentered_T_2, 4'h8};
  wire         _GEN_42 =
    s2_tageTakens_dup_3_1
      ? $signed(s2_totalSums_1_1) > -10'sh1
      : $signed(s2_totalSums_0_1) > -10'sh1;
  wire         s2_pred_1 =
    s2_provideds_1
    & (s2_tageTakens_dup_3_1
         ? $signed(s2_scTableSums_1_1) > $signed(9'(_GEN_40 - _GEN_41))
           & ~(s2_totalSums_1_1[9])
           | $signed(s2_scTableSums_1_1) < $signed(9'(9'(9'h0 - _GEN_40) - _GEN_41))
           & s2_totalSums_1_1[9]
         : $signed(s2_scTableSums_1_0) > $signed(9'(_GEN_40 - _GEN_41))
           & ~(s2_totalSums_0_1[9])
           | $signed(s2_scTableSums_1_0) < $signed(9'(9'(9'h0 - _GEN_40) - _GEN_41))
           & s2_totalSums_0_1[9])
      ? _GEN_42
      : s2_tageTakens_dup_3_1;
  wire [12:0]  _GEN_43 = {1'h0, 12'({1'h0, scThresholds_1_thres, 3'h0} + 12'h15)};
  wire [12:0]  _GEN_44 = {{6{_sumAboveThreshold_T_19[2]}}, _sumAboveThreshold_T_19, 4'h8};
  wire [12:0]  _GEN_45 = {{4{tableSum_1[8]}}, tableSum_1};
  wire [9:0]   sumAboveThreshold_totalSum_1 = 10'(_GEN_5 + _GEN_6);
  wire         _GEN_46 =
    _update_on_mispred_1_T
    | ~($signed(_GEN_45) > $signed(13'(_GEN_43 - _GEN_44))
        & ~(sumAboveThreshold_totalSum_1[9])
        | $signed(_GEN_45) < $signed(13'(13'(13'h0 - _GEN_43) - _GEN_44))
        & sumAboveThreshold_totalSum_1[9]);
  wire         scUpdateMask_1_3 = _GEN_1 & _GEN_46;
  wire         _GEN_47 = _GEN_1 & _GEN_46;
  wire [1:0]   providerInfo_tableIdx =
    _providerInfo_T
      ? {1'h1, _tables_3_io_resps_0_valid}
      : {1'h0, _tables_1_io_resps_0_valid};
  wire [3:0]   _allocatableSlots_T_14 = 4'h1 << providerInfo_tableIdx;
  wire [2:0]   _GEN_48 = _allocatableSlots_T_14[2:0] | _allocatableSlots_T_14[3:1];
  wire [1:0]   s1_providers_1 =
    _providerInfo_T_5
      ? {1'h1, _tables_3_io_resps_1_valid}
      : {1'h0, _tables_1_io_resps_1_valid};
  wire [3:0]   _allocatableSlots_T_39 = 4'h1 << s1_providers_1;
  wire [2:0]   _GEN_49 = _allocatableSlots_T_39[2:0] | _allocatableSlots_T_39[3:1];
  always @(posedge clock) begin
    if (REG_1) begin
      s1_pc_dup_0 <= _GEN_7;
      s1_pc_dup_1 <= _GEN_7;
      s1_pc_dup_2 <= _GEN_7;
      s1_pc_dup_3 <= _GEN_7;
    end
    else begin
      if (io_s0_fire_0)
        s1_pc_dup_0 <= io_in_bits_s0_pc_0;
      if (io_s0_fire_1)
        s1_pc_dup_1 <= io_in_bits_s0_pc_1;
      if (io_s0_fire_2)
        s1_pc_dup_2 <= io_in_bits_s0_pc_2;
      if (io_s0_fire_3)
        s1_pc_dup_3 <= io_in_bits_s0_pc_3;
    end
    REG <= reset;
    REG_1 <= REG & ~reset;
    if (io_s1_fire_1) begin
      s2_provideds_0 <= provided;
      s2_provideds_1 <= provided_1;
      s2_providers_0 <= providerInfo_tableIdx;
      s2_providers_1 <= s1_providers_1;
      s2_providerResps_0_ctr <= providerInfo_resp_ctr;
      s2_providerResps_0_u <=
        _providerInfo_T
          ? (_tables_3_io_resps_0_valid
               ? _tables_3_io_resps_0_bits_u
               : _tables_2_io_resps_0_bits_u)
          : _tables_1_io_resps_0_valid
              ? _tables_1_io_resps_0_bits_u
              : _tables_0_io_resps_0_bits_u;
      s2_providerResps_1_ctr <= s1_providerResps_1_ctr;
      s2_providerResps_1_u <=
        _providerInfo_T_5
          ? (_tables_3_io_resps_1_valid
               ? _tables_3_io_resps_1_bits_u
               : _tables_2_io_resps_1_bits_u)
          : _tables_1_io_resps_1_valid
              ? _tables_1_io_resps_1_bits_u
              : _tables_0_io_resps_1_bits_u;
      s2_altUsed_0 <= s1_altUsed_0;
      s2_altUsed_1 <= s1_altUsed_1;
      s2_tageTakens_dup_1_0 <= s1_tageTakens_0;
      s2_tageTakens_dup_1_1 <= s1_tageTakens_1;
      s2_basecnts_0 <= _bt_io_s1_cnt_0;
      s2_basecnts_1 <= _bt_io_s1_cnt_1;
      allocatableSlots <=
        {~_tables_3_io_resps_0_valid & ~_tables_3_io_resps_0_bits_u,
         ~_tables_2_io_resps_0_valid & ~_tables_2_io_resps_0_bits_u,
         ~_tables_1_io_resps_0_valid & ~_tables_1_io_resps_0_bits_u,
         ~_tables_0_io_resps_0_valid & ~_tables_0_io_resps_0_bits_u}
        & ~({&providerInfo_tableIdx,
             _GEN_48[2],
             _GEN_48[1] | (&providerInfo_tableIdx),
             _GEN_48[0] | providerInfo_tableIdx == 2'h2 | (&providerInfo_tableIdx)}
            & {4{provided}});
      allocatableSlots_1 <=
        {~_tables_3_io_resps_1_valid & ~_tables_3_io_resps_1_bits_u,
         ~_tables_2_io_resps_1_valid & ~_tables_2_io_resps_1_bits_u,
         ~_tables_1_io_resps_1_valid & ~_tables_1_io_resps_1_bits_u,
         ~_tables_0_io_resps_1_valid & ~_tables_0_io_resps_1_bits_u}
        & ~({&s1_providers_1,
             _GEN_49[2],
             _GEN_49[1] | (&s1_providers_1),
             _GEN_49[0] | s1_providers_1 == 2'h2 | (&s1_providers_1)} & {4{provided_1}});
    end
    if (io_s1_fire_0) begin
      s2_tageTakens_dup_0_0 <= s1_tageTakens_0;
      s2_tageTakens_dup_0_1 <= s1_tageTakens_1;
    end
    if (io_s1_fire_2) begin
      s2_tageTakens_dup_2_0 <= s1_tageTakens_0;
      s2_tageTakens_dup_2_1 <= s1_tageTakens_1;
    end
    if (io_s1_fire_3) begin
      s2_tageTakens_dup_3_0 <= s1_tageTakens_0;
      s2_tageTakens_dup_3_1 <= s1_tageTakens_1;
      s2_scTableSums_0 <=
        9'({_s1_scTableSums_T_8[7], _s1_scTableSums_T_8}
           + {_s1_scTableSums_T_9[7], _s1_scTableSums_T_9});
      s2_scTableSums_1 <=
        9'({_s1_scTableSums_T_19[7], _s1_scTableSums_T_19}
           + {_s1_scTableSums_T_20[7], _s1_scTableSums_T_20});
      s2_tagePrvdCtrCentered_r <= providerInfo_resp_ctr;
      s2_scResps_r_0_ctrs_0_0 <= _scTables_0_io_resp_ctrs_0_0;
      s2_scResps_r_0_ctrs_0_1 <= _scTables_0_io_resp_ctrs_0_1;
      s2_scResps_r_1_ctrs_0_0 <= _scTables_1_io_resp_ctrs_0_0;
      s2_scResps_r_1_ctrs_0_1 <= _scTables_1_io_resp_ctrs_0_1;
      s2_scResps_r_2_ctrs_0_0 <= _scTables_2_io_resp_ctrs_0_0;
      s2_scResps_r_2_ctrs_0_1 <= _scTables_2_io_resp_ctrs_0_1;
      s2_scResps_r_3_ctrs_0_0 <= _scTables_3_io_resp_ctrs_0_0;
      s2_scResps_r_3_ctrs_0_1 <= _scTables_3_io_resp_ctrs_0_1;
      s2_scTableSums_1_0 <=
        9'({_s1_scTableSums_T_30[7], _s1_scTableSums_T_30}
           + {_s1_scTableSums_T_31[7], _s1_scTableSums_T_31});
      s2_scTableSums_1_1 <=
        9'({_s1_scTableSums_T_41[7], _s1_scTableSums_T_41}
           + {_s1_scTableSums_T_42[7], _s1_scTableSums_T_42});
      s2_tagePrvdCtrCentered_r_1 <= s1_providerResps_1_ctr;
      s2_scResps_r_1_0_ctrs_1_0 <= _scTables_0_io_resp_ctrs_1_0;
      s2_scResps_r_1_0_ctrs_1_1 <= _scTables_0_io_resp_ctrs_1_1;
      s2_scResps_r_1_1_ctrs_1_0 <= _scTables_1_io_resp_ctrs_1_0;
      s2_scResps_r_1_1_ctrs_1_1 <= _scTables_1_io_resp_ctrs_1_1;
      s2_scResps_r_1_2_ctrs_1_0 <= _scTables_2_io_resp_ctrs_1_0;
      s2_scResps_r_1_2_ctrs_1_1 <= _scTables_2_io_resp_ctrs_1_1;
      s2_scResps_r_1_3_ctrs_1_0 <= _scTables_3_io_resp_ctrs_1_0;
      s2_scResps_r_1_3_ctrs_1_1 <= _scTables_3_io_resp_ctrs_1_1;
    end
    if (io_s2_fire_1) begin
      resp_meta_providers_0_valid_r <= s2_provideds_0;
      resp_meta_providers_0_bits_r <= s2_providers_0;
      resp_meta_providerResps_0_r_ctr <= s2_providerResps_0_ctr;
      resp_meta_providerResps_0_r_u <= s2_providerResps_0_u;
      resp_meta_allocates_0_r <= allocatableSlots;
      resp_meta_altUsed_0_r <= s2_altUsed_0;
      resp_meta_basecnts_0_r <= s2_basecnts_0;
      resp_meta_providers_1_valid_r <= s2_provideds_1;
      resp_meta_providers_1_bits_r <= s2_providers_1;
      resp_meta_providerResps_1_r_ctr <= s2_providerResps_1_ctr;
      resp_meta_providerResps_1_r_u <= s2_providerResps_1_u;
      resp_meta_allocates_1_r <= allocatableSlots_1;
      resp_meta_altUsed_1_r <= s2_altUsed_1;
      resp_meta_basecnts_1_r <= s2_basecnts_1;
      s3_pred_dup_1 <= s2_pred;
      s3_pred_dup_1_1 <= s2_pred_1;
    end
    tage_enable_dup_REG <= io_ctrl_tage_enable;
    tage_enable_dup_REG_1 <= io_ctrl_tage_enable;
    tables_0_io_update_reset_u_0_REG <= updateResetU_0;
    tables_0_io_update_mask_0_REG <= updateMask_0_0;
    if (updateMask_0_0 | updateMask_1_0) begin
      tables_0_io_update_takens_0_r <= updateTaken;
      tables_0_io_update_alloc_0_r <= _GEN_18 & _GEN_11;
      tables_0_io_update_oldCtrs_0_r <= io_update_bits_meta[67:65];
      tables_0_io_update_uMask_0_r <=
        _GEN_12 | updateValids_0 & io_update_bits_meta[74] & _GEN_8 & updateAltDiffers;
      tables_0_io_update_us_0_r <= ~_GEN_12 & updateProviderCorrect;
      tables_0_io_update_takens_1_r <= updateTaken_1;
      tables_0_io_update_alloc_1_r <= _GEN_29 & _GEN_22;
      tables_0_io_update_oldCtrs_1_r <= io_update_bits_meta[71:69];
      tables_0_io_update_uMask_1_r <=
        _GEN_23 | updateValids_1 & io_update_bits_meta[77] & _GEN_19 & updateAltDiffers_1;
      tables_0_io_update_us_1_r <= ~_GEN_23 & updateProviderCorrect_1;
      tables_0_io_update_pc_r_1 <= io_update_bits_pc;
      tables_0_io_update_ghist_r_1 <= io_update_bits_ghist;
    end
    tables_1_io_update_reset_u_0_REG <= updateResetU_0;
    tables_1_io_update_mask_0_REG <= updateMask_0_1;
    if (updateMask_0_1 | updateMask_1_1) begin
      tables_1_io_update_takens_0_r <= updateTaken;
      tables_1_io_update_alloc_0_r <= _GEN_18 & _GEN_13;
      tables_1_io_update_oldCtrs_0_r <= io_update_bits_meta[67:65];
      tables_1_io_update_uMask_0_r <=
        _GEN_14 | updateValids_0 & io_update_bits_meta[74] & _GEN_9 & updateAltDiffers;
      tables_1_io_update_us_0_r <= ~_GEN_14 & updateProviderCorrect;
      tables_1_io_update_takens_1_r <= updateTaken_1;
      tables_1_io_update_alloc_1_r <= _GEN_29 & _GEN_24;
      tables_1_io_update_oldCtrs_1_r <= io_update_bits_meta[71:69];
      tables_1_io_update_uMask_1_r <=
        _GEN_25 | updateValids_1 & io_update_bits_meta[77] & _GEN_20 & updateAltDiffers_1;
      tables_1_io_update_us_1_r <= ~_GEN_25 & updateProviderCorrect_1;
      tables_1_io_update_pc_r_1 <= io_update_bits_pc;
      tables_1_io_update_ghist_r_1 <= io_update_bits_ghist;
    end
    tables_2_io_update_reset_u_0_REG <= updateResetU_0;
    tables_2_io_update_mask_0_REG <= updateMask_0_2;
    if (updateMask_0_2 | updateMask_1_2) begin
      tables_2_io_update_takens_0_r <= updateTaken;
      tables_2_io_update_alloc_0_r <= _GEN_18 & _GEN_15;
      tables_2_io_update_oldCtrs_0_r <= io_update_bits_meta[67:65];
      tables_2_io_update_uMask_0_r <=
        _GEN_16 | updateValids_0 & io_update_bits_meta[74] & _GEN_10 & updateAltDiffers;
      tables_2_io_update_us_0_r <= ~_GEN_16 & updateProviderCorrect;
      tables_2_io_update_takens_1_r <= updateTaken_1;
      tables_2_io_update_alloc_1_r <= _GEN_29 & _GEN_26;
      tables_2_io_update_oldCtrs_1_r <= io_update_bits_meta[71:69];
      tables_2_io_update_uMask_1_r <=
        _GEN_27 | updateValids_1 & io_update_bits_meta[77] & _GEN_21 & updateAltDiffers_1;
      tables_2_io_update_us_1_r <= ~_GEN_27 & updateProviderCorrect_1;
      tables_2_io_update_pc_r_1 <= io_update_bits_pc;
      tables_2_io_update_ghist_r_1 <= io_update_bits_ghist;
    end
    tables_3_io_update_reset_u_0_REG <= updateResetU_0;
    tables_3_io_update_mask_0_REG <= updateMask_0_3;
    if (updateMask_0_3 | updateMask_1_3) begin
      tables_3_io_update_takens_0_r <= updateTaken;
      tables_3_io_update_alloc_0_r <= _GEN_18 & (&allocate);
      tables_3_io_update_oldCtrs_0_r <= io_update_bits_meta[67:65];
      tables_3_io_update_uMask_0_r <=
        _GEN_17 | updateValids_0 & io_update_bits_meta[74]
        & (&(io_update_bits_meta[73:72])) & updateAltDiffers;
      tables_3_io_update_us_0_r <= ~_GEN_17 & updateProviderCorrect;
      tables_3_io_update_takens_1_r <= updateTaken_1;
      tables_3_io_update_alloc_1_r <= _GEN_29 & (&allocate_1);
      tables_3_io_update_oldCtrs_1_r <= io_update_bits_meta[71:69];
      tables_3_io_update_uMask_1_r <=
        _GEN_28 | updateValids_1 & io_update_bits_meta[77]
        & (&(io_update_bits_meta[76:75])) & updateAltDiffers_1;
      tables_3_io_update_us_1_r <= ~_GEN_28 & updateProviderCorrect_1;
      tables_3_io_update_pc_r_1 <= io_update_bits_pc;
      tables_3_io_update_ghist_r_1 <= io_update_bits_ghist;
    end
    tables_0_io_update_reset_u_1_REG <= updateResetU_1;
    tables_0_io_update_mask_1_REG <= updateMask_1_0;
    tables_1_io_update_reset_u_1_REG <= updateResetU_1;
    tables_1_io_update_mask_1_REG <= updateMask_1_1;
    tables_2_io_update_reset_u_1_REG <= updateResetU_1;
    tables_2_io_update_mask_1_REG <= updateMask_1_2;
    tables_3_io_update_reset_u_1_REG <= updateResetU_1;
    tables_3_io_update_mask_1_REG <= updateMask_1_3;
    REG_2_0 <= baseupdate_0;
    REG_2_1 <= baseupdate_1;
    if (baseupdate_0 | baseupdate_1) begin
      r_0 <= io_update_bits_meta[59:58];
      r_1 <= io_update_bits_meta[61:60];
      bt_io_update_pc_r <= io_update_bits_pc;
      r_1_0 <= updateTaken;
      r_1_1 <= updateTaken_1;
    end
    if (io_s2_fire_3) begin
      resp_meta_scMeta_scPreds_0_r <= _GEN_33;
      r_2_0 <= s2_tageTakens_dup_3_0 ? s2_scResps_r_0_ctrs_0_1 : s2_scResps_r_0_ctrs_0_0;
      r_2_1 <= s2_tageTakens_dup_3_0 ? s2_scResps_r_1_ctrs_0_1 : s2_scResps_r_1_ctrs_0_0;
      r_2_2 <= s2_tageTakens_dup_3_0 ? s2_scResps_r_2_ctrs_0_1 : s2_scResps_r_2_ctrs_0_0;
      r_2_3 <= s2_tageTakens_dup_3_0 ? s2_scResps_r_3_ctrs_0_1 : s2_scResps_r_3_ctrs_0_0;
      s3_pred_dup_3 <= s2_pred;
      resp_meta_scMeta_scPreds_1_r <= _GEN_42;
      r_3_0 <=
        s2_tageTakens_dup_3_1 ? s2_scResps_r_1_0_ctrs_1_1 : s2_scResps_r_1_0_ctrs_1_0;
      r_3_1 <=
        s2_tageTakens_dup_3_1 ? s2_scResps_r_1_1_ctrs_1_1 : s2_scResps_r_1_1_ctrs_1_0;
      r_3_2 <=
        s2_tageTakens_dup_3_1 ? s2_scResps_r_1_2_ctrs_1_1 : s2_scResps_r_1_2_ctrs_1_0;
      r_3_3 <=
        s2_tageTakens_dup_3_1 ? s2_scResps_r_1_3_ctrs_1_1 : s2_scResps_r_1_3_ctrs_1_0;
      s3_pred_dup_3_1 <= s2_pred_1;
    end
    if (io_s2_fire_0) begin
      s3_pred_dup_0 <= s2_pred;
      s3_pred_dup_0_1 <= s2_pred_1;
    end
    if (io_s2_fire_2) begin
      s3_pred_dup_2 <= s2_pred;
      s3_pred_dup_2_1 <= s2_pred_1;
    end
    sc_enable_dup_REG <= io_ctrl_sc_enable;
    sc_enable_dup_REG_1 <= io_ctrl_sc_enable;
    scTables_0_io_update_mask_0_REG <= scUpdateMask_0_3;
    if (scUpdateMask_0_3 | scUpdateMask_1_3) begin
      scTables_0_io_update_tagePreds_0_r <= tagePred;
      scTables_0_io_update_takens_0_r <= io_update_bits_br_taken_mask_0;
      scTables_0_io_update_oldCtrs_0_r <= io_update_bits_meta[5:0];
      scTables_0_io_update_tagePreds_1_r <= tagePred_1;
      scTables_0_io_update_takens_1_r <= io_update_bits_br_taken_mask_1;
      scTables_0_io_update_oldCtrs_1_r <= io_update_bits_meta[29:24];
      scTables_0_io_update_pc_r_1 <= io_update_bits_pc;
    end
    scTables_1_io_update_mask_0_REG <= scUpdateMask_0_3;
    if (scUpdateMask_0_3 | scUpdateMask_1_3) begin
      scTables_1_io_update_tagePreds_0_r <= tagePred;
      scTables_1_io_update_takens_0_r <= io_update_bits_br_taken_mask_0;
      scTables_1_io_update_oldCtrs_0_r <= io_update_bits_meta[11:6];
      scTables_1_io_update_tagePreds_1_r <= tagePred_1;
      scTables_1_io_update_takens_1_r <= io_update_bits_br_taken_mask_1;
      scTables_1_io_update_oldCtrs_1_r <= io_update_bits_meta[35:30];
      scTables_1_io_update_pc_r_1 <= io_update_bits_pc;
      scTables_1_io_update_ghist_r_1 <= io_update_bits_ghist;
    end
    scTables_2_io_update_mask_0_REG <= scUpdateMask_0_3;
    if (scUpdateMask_0_3 | scUpdateMask_1_3) begin
      scTables_2_io_update_tagePreds_0_r <= tagePred;
      scTables_2_io_update_takens_0_r <= io_update_bits_br_taken_mask_0;
      scTables_2_io_update_oldCtrs_0_r <= io_update_bits_meta[17:12];
      scTables_2_io_update_tagePreds_1_r <= tagePred_1;
      scTables_2_io_update_takens_1_r <= io_update_bits_br_taken_mask_1;
      scTables_2_io_update_oldCtrs_1_r <= io_update_bits_meta[41:36];
      scTables_2_io_update_pc_r_1 <= io_update_bits_pc;
      scTables_2_io_update_ghist_r_1 <= io_update_bits_ghist;
    end
    scTables_3_io_update_mask_0_REG <= scUpdateMask_0_3;
    if (scUpdateMask_0_3 | scUpdateMask_1_3) begin
      scTables_3_io_update_tagePreds_0_r <= tagePred;
      scTables_3_io_update_takens_0_r <= io_update_bits_br_taken_mask_0;
      scTables_3_io_update_oldCtrs_0_r <= io_update_bits_meta[23:18];
      scTables_3_io_update_tagePreds_1_r <= tagePred_1;
      scTables_3_io_update_takens_1_r <= io_update_bits_br_taken_mask_1;
      scTables_3_io_update_oldCtrs_1_r <= io_update_bits_meta[47:42];
      scTables_3_io_update_pc_r_1 <= io_update_bits_pc;
      scTables_3_io_update_ghist_r_1 <= io_update_bits_ghist;
    end
    scTables_0_io_update_mask_1_REG <= scUpdateMask_1_3;
    scTables_1_io_update_mask_1_REG <= scUpdateMask_1_3;
    scTables_2_io_update_mask_1_REG <= scUpdateMask_1_3;
    scTables_3_io_update_mask_1_REG <= scUpdateMask_1_3;
    io_perf_0_value_REG <=
      2'({1'h0, io_update_bits_meta[74]} + {1'h0, io_update_bits_meta[77]});
    io_perf_0_value_REG_1 <= io_perf_0_value_REG;
    io_perf_1_value_REG <=
      2'({1'h0, _GEN_38 & _update_on_mispred_0_T}
         + {1'h0, _GEN_47 & _update_on_mispred_1_T});
    io_perf_1_value_REG_1 <= io_perf_1_value_REG;
    io_perf_2_value_REG <=
      2'({1'h0, _GEN_38 & io_update_bits_meta[48] == io_update_bits_br_taken_mask_0}
         + {1'h0, _GEN_47 & io_update_bits_meta[49] == io_update_bits_br_taken_mask_1});
    io_perf_2_value_REG_1 <= io_perf_2_value_REG;
  end // always @(posedge)
  wire [3:0]   _allocFailureMask_T = ~(io_update_bits_meta[53:50]);
  wire [1:0]   _GEN_50 = {1'h0, _allocFailureMask_T[0] & longerHistoryTableMask[0]};
  wire [1:0]   _GEN_51 = {1'h0, _allocFailureMask_T[1] & longerHistoryTableMask[1]};
  wire [1:0]   _GEN_52 = {1'h0, _allocFailureMask_T[2] & longerHistoryTableMask[2]};
  wire [1:0]   _GEN_53 = {1'h0, _allocFailureMask_T[3] & longerHistoryTableMask[3]};
  wire [1:0]   _GEN_54 = {1'h0, _firstEntry_T};
  wire [1:0]   _GEN_55 = {1'h0, _firstEntry_T_1};
  wire [1:0]   _GEN_56 = {1'h0, _firstEntry_T_2};
  wire [1:0]   _GEN_57 = {1'h0, io_update_bits_meta[53] & longerHistoryTableMask[3]};
  wire         tickInc =
    3'({1'h0, 2'(_GEN_50 + _GEN_51)}
       + {1'h0,
          2'(_GEN_52
             + _GEN_53)}) > 3'({1'h0, 2'(_GEN_54 + _GEN_55)}
                               + {1'h0, 2'(_GEN_56 + _GEN_57)});
  wire [6:0]   _GEN_58 =
    {4'h0,
     3'(3'({1'h0, 2'(_GEN_50 + _GEN_51)} + {1'h0, 2'(_GEN_52 + _GEN_53)})
        - (3'({1'h0, 2'(_GEN_54 + _GEN_55)} + {1'h0, 2'(_GEN_56 + _GEN_57)})))};
  wire         tickDec =
    3'({1'h0, 2'(_GEN_54 + _GEN_55)}
       + {1'h0,
          2'(_GEN_56
             + _GEN_57)}) > 3'({1'h0, 2'(_GEN_50 + _GEN_51)}
                               + {1'h0, 2'(_GEN_52 + _GEN_53)});
  wire [6:0]   _GEN_59 =
    {4'h0,
     3'(3'({1'h0, 2'(_GEN_54 + _GEN_55)} + {1'h0, 2'(_GEN_56 + _GEN_57)})
        - (3'({1'h0, 2'(_GEN_50 + _GEN_51)} + {1'h0, 2'(_GEN_52 + _GEN_53)})))};
  wire [3:0]   _allocFailureMask_T_1 = ~(io_update_bits_meta[57:54]);
  wire [1:0]   _GEN_60 = {1'h0, _allocFailureMask_T_1[0] & longerHistoryTableMask_1[0]};
  wire [1:0]   _GEN_61 = {1'h0, _allocFailureMask_T_1[1] & longerHistoryTableMask_1[1]};
  wire [1:0]   _GEN_62 = {1'h0, _allocFailureMask_T_1[2] & longerHistoryTableMask_1[2]};
  wire [1:0]   _GEN_63 = {1'h0, _allocFailureMask_T_1[3] & longerHistoryTableMask_1[3]};
  wire [1:0]   _GEN_64 = {1'h0, _firstEntry_T_6};
  wire [1:0]   _GEN_65 = {1'h0, _firstEntry_T_7};
  wire [1:0]   _GEN_66 = {1'h0, _firstEntry_T_8};
  wire [1:0]   _GEN_67 = {1'h0, io_update_bits_meta[57] & longerHistoryTableMask_1[3]};
  wire         tickInc_1 =
    3'({1'h0, 2'(_GEN_60 + _GEN_61)}
       + {1'h0,
          2'(_GEN_62
             + _GEN_63)}) > 3'({1'h0, 2'(_GEN_64 + _GEN_65)}
                               + {1'h0, 2'(_GEN_66 + _GEN_67)});
  wire [6:0]   _GEN_68 =
    {4'h0,
     3'(3'({1'h0, 2'(_GEN_60 + _GEN_61)} + {1'h0, 2'(_GEN_62 + _GEN_63)})
        - (3'({1'h0, 2'(_GEN_64 + _GEN_65)} + {1'h0, 2'(_GEN_66 + _GEN_67)})))};
  wire         tickDec_1 =
    3'({1'h0, 2'(_GEN_64 + _GEN_65)}
       + {1'h0,
          2'(_GEN_66
             + _GEN_67)}) > 3'({1'h0, 2'(_GEN_60 + _GEN_61)}
                               + {1'h0, 2'(_GEN_62 + _GEN_63)});
  wire [6:0]   _GEN_69 =
    {4'h0,
     3'(3'({1'h0, 2'(_GEN_64 + _GEN_65)} + {1'h0, 2'(_GEN_66 + _GEN_67)})
        - (3'({1'h0, 2'(_GEN_60 + _GEN_61)} + {1'h0, 2'(_GEN_62 + _GEN_63)})))};
  wire         _newThres_newCtr_T = (&scThresholds_0_ctr) & _update_on_mispred_0_T;
  wire         _newThres_newCtr_T_2 =
    scThresholds_0_ctr == 5'h0 & ~_update_on_mispred_0_T;
  wire [4:0]   _newThres_newCtr_T_3 = 5'(scThresholds_0_ctr + 5'h1);
  wire [4:0]   _newThres_newCtr_T_5 = 5'(scThresholds_0_ctr - 5'h1);
  wire         _GEN_70 = io_update_bits_meta[48] == io_update_bits_br_taken_mask_0;
  wire [4:0]   newThres_newCtr =
    _newThres_newCtr_T
      ? 5'h1F
      : _newThres_newCtr_T_2
          ? 5'h0
          : _GEN_70 ? _newThres_newCtr_T_5 : _newThres_newCtr_T_3;
  wire         _newThres_res_ctr_T_4 = newThres_newCtr == 5'h0;
  wire         _newThres_newCtr_T_9 = (&scThresholds_1_ctr) & _update_on_mispred_1_T;
  wire         _newThres_newCtr_T_11 =
    scThresholds_1_ctr == 5'h0 & ~_update_on_mispred_1_T;
  wire [4:0]   _newThres_newCtr_T_12 = 5'(scThresholds_1_ctr + 5'h1);
  wire [4:0]   _newThres_newCtr_T_14 = 5'(scThresholds_1_ctr - 5'h1);
  wire         _GEN_71 = io_update_bits_meta[49] == io_update_bits_br_taken_mask_1;
  wire [4:0]   newThres_newCtr_1 =
    _newThres_newCtr_T_9
      ? 5'h1F
      : _newThres_newCtr_T_11
          ? 5'h0
          : _GEN_71 ? _newThres_newCtr_T_14 : _newThres_newCtr_T_12;
  wire         _newThres_res_ctr_T_11 = newThres_newCtr_1 == 5'h0;
  wire [3:0]   updateUseAltCtr =
    (io_update_bits_pc[7:1] == 7'h0 ? useAltOnNaCtrs_0_0 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1 ? useAltOnNaCtrs_0_1 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2 ? useAltOnNaCtrs_0_2 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3 ? useAltOnNaCtrs_0_3 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4 ? useAltOnNaCtrs_0_4 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5 ? useAltOnNaCtrs_0_5 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6 ? useAltOnNaCtrs_0_6 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7 ? useAltOnNaCtrs_0_7 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h8 ? useAltOnNaCtrs_0_8 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h9 ? useAltOnNaCtrs_0_9 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hA ? useAltOnNaCtrs_0_10 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hB ? useAltOnNaCtrs_0_11 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hC ? useAltOnNaCtrs_0_12 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hD ? useAltOnNaCtrs_0_13 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hE ? useAltOnNaCtrs_0_14 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hF ? useAltOnNaCtrs_0_15 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h10 ? useAltOnNaCtrs_0_16 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h11 ? useAltOnNaCtrs_0_17 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h12 ? useAltOnNaCtrs_0_18 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h13 ? useAltOnNaCtrs_0_19 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h14 ? useAltOnNaCtrs_0_20 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h15 ? useAltOnNaCtrs_0_21 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h16 ? useAltOnNaCtrs_0_22 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h17 ? useAltOnNaCtrs_0_23 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h18 ? useAltOnNaCtrs_0_24 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h19 ? useAltOnNaCtrs_0_25 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1A ? useAltOnNaCtrs_0_26 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1B ? useAltOnNaCtrs_0_27 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1C ? useAltOnNaCtrs_0_28 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1D ? useAltOnNaCtrs_0_29 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1E ? useAltOnNaCtrs_0_30 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1F ? useAltOnNaCtrs_0_31 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h20 ? useAltOnNaCtrs_0_32 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h21 ? useAltOnNaCtrs_0_33 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h22 ? useAltOnNaCtrs_0_34 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h23 ? useAltOnNaCtrs_0_35 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h24 ? useAltOnNaCtrs_0_36 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h25 ? useAltOnNaCtrs_0_37 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h26 ? useAltOnNaCtrs_0_38 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h27 ? useAltOnNaCtrs_0_39 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h28 ? useAltOnNaCtrs_0_40 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h29 ? useAltOnNaCtrs_0_41 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2A ? useAltOnNaCtrs_0_42 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2B ? useAltOnNaCtrs_0_43 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2C ? useAltOnNaCtrs_0_44 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2D ? useAltOnNaCtrs_0_45 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2E ? useAltOnNaCtrs_0_46 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2F ? useAltOnNaCtrs_0_47 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h30 ? useAltOnNaCtrs_0_48 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h31 ? useAltOnNaCtrs_0_49 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h32 ? useAltOnNaCtrs_0_50 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h33 ? useAltOnNaCtrs_0_51 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h34 ? useAltOnNaCtrs_0_52 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h35 ? useAltOnNaCtrs_0_53 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h36 ? useAltOnNaCtrs_0_54 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h37 ? useAltOnNaCtrs_0_55 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h38 ? useAltOnNaCtrs_0_56 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h39 ? useAltOnNaCtrs_0_57 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3A ? useAltOnNaCtrs_0_58 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3B ? useAltOnNaCtrs_0_59 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3C ? useAltOnNaCtrs_0_60 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3D ? useAltOnNaCtrs_0_61 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3E ? useAltOnNaCtrs_0_62 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3F ? useAltOnNaCtrs_0_63 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h40 ? useAltOnNaCtrs_0_64 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h41 ? useAltOnNaCtrs_0_65 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h42 ? useAltOnNaCtrs_0_66 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h43 ? useAltOnNaCtrs_0_67 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h44 ? useAltOnNaCtrs_0_68 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h45 ? useAltOnNaCtrs_0_69 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h46 ? useAltOnNaCtrs_0_70 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h47 ? useAltOnNaCtrs_0_71 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h48 ? useAltOnNaCtrs_0_72 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h49 ? useAltOnNaCtrs_0_73 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4A ? useAltOnNaCtrs_0_74 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4B ? useAltOnNaCtrs_0_75 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4C ? useAltOnNaCtrs_0_76 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4D ? useAltOnNaCtrs_0_77 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4E ? useAltOnNaCtrs_0_78 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4F ? useAltOnNaCtrs_0_79 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h50 ? useAltOnNaCtrs_0_80 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h51 ? useAltOnNaCtrs_0_81 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h52 ? useAltOnNaCtrs_0_82 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h53 ? useAltOnNaCtrs_0_83 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h54 ? useAltOnNaCtrs_0_84 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h55 ? useAltOnNaCtrs_0_85 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h56 ? useAltOnNaCtrs_0_86 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h57 ? useAltOnNaCtrs_0_87 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h58 ? useAltOnNaCtrs_0_88 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h59 ? useAltOnNaCtrs_0_89 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5A ? useAltOnNaCtrs_0_90 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5B ? useAltOnNaCtrs_0_91 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5C ? useAltOnNaCtrs_0_92 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5D ? useAltOnNaCtrs_0_93 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5E ? useAltOnNaCtrs_0_94 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5F ? useAltOnNaCtrs_0_95 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h60 ? useAltOnNaCtrs_0_96 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h61 ? useAltOnNaCtrs_0_97 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h62 ? useAltOnNaCtrs_0_98 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h63 ? useAltOnNaCtrs_0_99 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h64 ? useAltOnNaCtrs_0_100 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h65 ? useAltOnNaCtrs_0_101 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h66 ? useAltOnNaCtrs_0_102 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h67 ? useAltOnNaCtrs_0_103 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h68 ? useAltOnNaCtrs_0_104 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h69 ? useAltOnNaCtrs_0_105 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6A ? useAltOnNaCtrs_0_106 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6B ? useAltOnNaCtrs_0_107 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6C ? useAltOnNaCtrs_0_108 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6D ? useAltOnNaCtrs_0_109 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6E ? useAltOnNaCtrs_0_110 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6F ? useAltOnNaCtrs_0_111 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h70 ? useAltOnNaCtrs_0_112 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h71 ? useAltOnNaCtrs_0_113 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h72 ? useAltOnNaCtrs_0_114 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h73 ? useAltOnNaCtrs_0_115 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h74 ? useAltOnNaCtrs_0_116 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h75 ? useAltOnNaCtrs_0_117 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h76 ? useAltOnNaCtrs_0_118 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h77 ? useAltOnNaCtrs_0_119 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h78 ? useAltOnNaCtrs_0_120 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h79 ? useAltOnNaCtrs_0_121 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7A ? useAltOnNaCtrs_0_122 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7B ? useAltOnNaCtrs_0_123 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7C ? useAltOnNaCtrs_0_124 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7D ? useAltOnNaCtrs_0_125 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7E ? useAltOnNaCtrs_0_126 : 4'h0)
    | ((&(io_update_bits_pc[7:1])) ? useAltOnNaCtrs_0_127 : 4'h0);
  wire         updateAltCorrect = io_update_bits_meta[59] == updateTaken;
  wire         _GEN_72 =
    io_update_bits_meta[74]
    & (io_update_bits_meta[67:65] == 3'h4 | io_update_bits_meta[67:65] == 3'h3)
    & updateAltDiffers;
  wire         _newCtr_T = (&updateUseAltCtr) & updateAltCorrect;
  wire         _newCtr_T_2 = updateUseAltCtr == 4'h0 & ~updateAltCorrect;
  wire [3:0]   _newCtr_T_3 = 4'(updateUseAltCtr + 4'h1);
  wire [3:0]   _newCtr_T_5 = 4'(updateUseAltCtr - 4'h1);
  wire [3:0]   updateUseAltCtr_1 =
    (io_update_bits_pc[7:1] == 7'h0 ? useAltOnNaCtrs_1_0 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1 ? useAltOnNaCtrs_1_1 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2 ? useAltOnNaCtrs_1_2 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3 ? useAltOnNaCtrs_1_3 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4 ? useAltOnNaCtrs_1_4 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5 ? useAltOnNaCtrs_1_5 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6 ? useAltOnNaCtrs_1_6 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7 ? useAltOnNaCtrs_1_7 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h8 ? useAltOnNaCtrs_1_8 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h9 ? useAltOnNaCtrs_1_9 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hA ? useAltOnNaCtrs_1_10 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hB ? useAltOnNaCtrs_1_11 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hC ? useAltOnNaCtrs_1_12 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hD ? useAltOnNaCtrs_1_13 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hE ? useAltOnNaCtrs_1_14 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'hF ? useAltOnNaCtrs_1_15 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h10 ? useAltOnNaCtrs_1_16 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h11 ? useAltOnNaCtrs_1_17 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h12 ? useAltOnNaCtrs_1_18 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h13 ? useAltOnNaCtrs_1_19 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h14 ? useAltOnNaCtrs_1_20 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h15 ? useAltOnNaCtrs_1_21 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h16 ? useAltOnNaCtrs_1_22 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h17 ? useAltOnNaCtrs_1_23 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h18 ? useAltOnNaCtrs_1_24 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h19 ? useAltOnNaCtrs_1_25 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1A ? useAltOnNaCtrs_1_26 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1B ? useAltOnNaCtrs_1_27 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1C ? useAltOnNaCtrs_1_28 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1D ? useAltOnNaCtrs_1_29 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1E ? useAltOnNaCtrs_1_30 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h1F ? useAltOnNaCtrs_1_31 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h20 ? useAltOnNaCtrs_1_32 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h21 ? useAltOnNaCtrs_1_33 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h22 ? useAltOnNaCtrs_1_34 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h23 ? useAltOnNaCtrs_1_35 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h24 ? useAltOnNaCtrs_1_36 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h25 ? useAltOnNaCtrs_1_37 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h26 ? useAltOnNaCtrs_1_38 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h27 ? useAltOnNaCtrs_1_39 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h28 ? useAltOnNaCtrs_1_40 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h29 ? useAltOnNaCtrs_1_41 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2A ? useAltOnNaCtrs_1_42 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2B ? useAltOnNaCtrs_1_43 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2C ? useAltOnNaCtrs_1_44 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2D ? useAltOnNaCtrs_1_45 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2E ? useAltOnNaCtrs_1_46 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h2F ? useAltOnNaCtrs_1_47 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h30 ? useAltOnNaCtrs_1_48 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h31 ? useAltOnNaCtrs_1_49 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h32 ? useAltOnNaCtrs_1_50 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h33 ? useAltOnNaCtrs_1_51 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h34 ? useAltOnNaCtrs_1_52 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h35 ? useAltOnNaCtrs_1_53 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h36 ? useAltOnNaCtrs_1_54 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h37 ? useAltOnNaCtrs_1_55 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h38 ? useAltOnNaCtrs_1_56 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h39 ? useAltOnNaCtrs_1_57 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3A ? useAltOnNaCtrs_1_58 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3B ? useAltOnNaCtrs_1_59 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3C ? useAltOnNaCtrs_1_60 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3D ? useAltOnNaCtrs_1_61 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3E ? useAltOnNaCtrs_1_62 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h3F ? useAltOnNaCtrs_1_63 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h40 ? useAltOnNaCtrs_1_64 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h41 ? useAltOnNaCtrs_1_65 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h42 ? useAltOnNaCtrs_1_66 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h43 ? useAltOnNaCtrs_1_67 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h44 ? useAltOnNaCtrs_1_68 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h45 ? useAltOnNaCtrs_1_69 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h46 ? useAltOnNaCtrs_1_70 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h47 ? useAltOnNaCtrs_1_71 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h48 ? useAltOnNaCtrs_1_72 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h49 ? useAltOnNaCtrs_1_73 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4A ? useAltOnNaCtrs_1_74 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4B ? useAltOnNaCtrs_1_75 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4C ? useAltOnNaCtrs_1_76 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4D ? useAltOnNaCtrs_1_77 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4E ? useAltOnNaCtrs_1_78 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h4F ? useAltOnNaCtrs_1_79 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h50 ? useAltOnNaCtrs_1_80 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h51 ? useAltOnNaCtrs_1_81 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h52 ? useAltOnNaCtrs_1_82 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h53 ? useAltOnNaCtrs_1_83 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h54 ? useAltOnNaCtrs_1_84 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h55 ? useAltOnNaCtrs_1_85 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h56 ? useAltOnNaCtrs_1_86 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h57 ? useAltOnNaCtrs_1_87 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h58 ? useAltOnNaCtrs_1_88 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h59 ? useAltOnNaCtrs_1_89 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5A ? useAltOnNaCtrs_1_90 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5B ? useAltOnNaCtrs_1_91 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5C ? useAltOnNaCtrs_1_92 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5D ? useAltOnNaCtrs_1_93 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5E ? useAltOnNaCtrs_1_94 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h5F ? useAltOnNaCtrs_1_95 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h60 ? useAltOnNaCtrs_1_96 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h61 ? useAltOnNaCtrs_1_97 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h62 ? useAltOnNaCtrs_1_98 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h63 ? useAltOnNaCtrs_1_99 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h64 ? useAltOnNaCtrs_1_100 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h65 ? useAltOnNaCtrs_1_101 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h66 ? useAltOnNaCtrs_1_102 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h67 ? useAltOnNaCtrs_1_103 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h68 ? useAltOnNaCtrs_1_104 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h69 ? useAltOnNaCtrs_1_105 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6A ? useAltOnNaCtrs_1_106 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6B ? useAltOnNaCtrs_1_107 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6C ? useAltOnNaCtrs_1_108 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6D ? useAltOnNaCtrs_1_109 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6E ? useAltOnNaCtrs_1_110 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h6F ? useAltOnNaCtrs_1_111 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h70 ? useAltOnNaCtrs_1_112 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h71 ? useAltOnNaCtrs_1_113 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h72 ? useAltOnNaCtrs_1_114 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h73 ? useAltOnNaCtrs_1_115 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h74 ? useAltOnNaCtrs_1_116 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h75 ? useAltOnNaCtrs_1_117 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h76 ? useAltOnNaCtrs_1_118 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h77 ? useAltOnNaCtrs_1_119 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h78 ? useAltOnNaCtrs_1_120 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h79 ? useAltOnNaCtrs_1_121 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7A ? useAltOnNaCtrs_1_122 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7B ? useAltOnNaCtrs_1_123 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7C ? useAltOnNaCtrs_1_124 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7D ? useAltOnNaCtrs_1_125 : 4'h0)
    | (io_update_bits_pc[7:1] == 7'h7E ? useAltOnNaCtrs_1_126 : 4'h0)
    | ((&(io_update_bits_pc[7:1])) ? useAltOnNaCtrs_1_127 : 4'h0);
  wire         updateAltCorrect_1 = io_update_bits_meta[61] == updateTaken_1;
  wire         _GEN_73 =
    io_update_bits_meta[77]
    & (io_update_bits_meta[71:69] == 3'h4 | io_update_bits_meta[71:69] == 3'h3)
    & updateAltDiffers_1;
  wire         _newCtr_T_9 = (&updateUseAltCtr_1) & updateAltCorrect_1;
  wire         _newCtr_T_11 = updateUseAltCtr_1 == 4'h0 & ~updateAltCorrect_1;
  wire [3:0]   _newCtr_T_12 = 4'(updateUseAltCtr_1 + 4'h1);
  wire [3:0]   _newCtr_T_14 = 4'(updateUseAltCtr_1 - 4'h1);
  wire [9:0]   _totalSumAbs_T_3 = 10'(_GEN_3 + _GEN_4);
  wire [9:0]   _totalSumAbs_T_8 =
    $signed(_totalSumAbs_T_3) < 10'sh0 ? 10'(10'h0 - _totalSumAbs_T_3) : _totalSumAbs_T_3;
  wire [9:0]   _totalSumAbs_T_12 = 10'(_GEN_5 + _GEN_6);
  wire [9:0]   _totalSumAbs_T_17 =
    $signed(_totalSumAbs_T_12) < 10'sh0
      ? 10'(10'h0 - _totalSumAbs_T_12)
      : _totalSumAbs_T_12;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      s2_pc_seg_0_value <= 17'h0;
      s2_pc_seg_1_value <= 12'h0;
      s2_pc_seg_2_value <= 12'h0;
      s2_pc_seg_0_value_1 <= 17'h0;
      s2_pc_seg_1_value_1 <= 12'h0;
      s2_pc_seg_2_value_1 <= 12'h0;
      s2_pc_seg_0_value_2 <= 17'h0;
      s2_pc_seg_1_value_2 <= 12'h0;
      s2_pc_seg_2_value_2 <= 12'h0;
      s2_pc_seg_0_value_3 <= 17'h0;
      s2_pc_seg_1_value_3 <= 12'h0;
      s2_pc_seg_2_value_3 <= 12'h0;
      s3_pc_seg_0_value <= 17'h0;
      s3_pc_seg_1_value <= 12'h0;
      s3_pc_seg_2_value <= 12'h0;
      s3_pc_seg_0_value_1 <= 17'h0;
      s3_pc_seg_1_value_1 <= 12'h0;
      s3_pc_seg_2_value_1 <= 12'h0;
      s3_pc_seg_0_value_2 <= 17'h0;
      s3_pc_seg_1_value_2 <= 12'h0;
      s3_pc_seg_2_value_2 <= 12'h0;
      s3_pc_seg_0_value_3 <= 17'h0;
      s3_pc_seg_1_value_3 <= 12'h0;
      s3_pc_seg_2_value_3 <= 12'h0;
      bankTickCtrDistanceToTops_0 <= 7'h7F;
      bankTickCtrDistanceToTops_1 <= 7'h7F;
      bankTickCtrs_0 <= 7'h0;
      bankTickCtrs_1 <= 7'h0;
      useAltOnNaCtrs_0_0 <= 4'h8;
      useAltOnNaCtrs_0_1 <= 4'h8;
      useAltOnNaCtrs_0_2 <= 4'h8;
      useAltOnNaCtrs_0_3 <= 4'h8;
      useAltOnNaCtrs_0_4 <= 4'h8;
      useAltOnNaCtrs_0_5 <= 4'h8;
      useAltOnNaCtrs_0_6 <= 4'h8;
      useAltOnNaCtrs_0_7 <= 4'h8;
      useAltOnNaCtrs_0_8 <= 4'h8;
      useAltOnNaCtrs_0_9 <= 4'h8;
      useAltOnNaCtrs_0_10 <= 4'h8;
      useAltOnNaCtrs_0_11 <= 4'h8;
      useAltOnNaCtrs_0_12 <= 4'h8;
      useAltOnNaCtrs_0_13 <= 4'h8;
      useAltOnNaCtrs_0_14 <= 4'h8;
      useAltOnNaCtrs_0_15 <= 4'h8;
      useAltOnNaCtrs_0_16 <= 4'h8;
      useAltOnNaCtrs_0_17 <= 4'h8;
      useAltOnNaCtrs_0_18 <= 4'h8;
      useAltOnNaCtrs_0_19 <= 4'h8;
      useAltOnNaCtrs_0_20 <= 4'h8;
      useAltOnNaCtrs_0_21 <= 4'h8;
      useAltOnNaCtrs_0_22 <= 4'h8;
      useAltOnNaCtrs_0_23 <= 4'h8;
      useAltOnNaCtrs_0_24 <= 4'h8;
      useAltOnNaCtrs_0_25 <= 4'h8;
      useAltOnNaCtrs_0_26 <= 4'h8;
      useAltOnNaCtrs_0_27 <= 4'h8;
      useAltOnNaCtrs_0_28 <= 4'h8;
      useAltOnNaCtrs_0_29 <= 4'h8;
      useAltOnNaCtrs_0_30 <= 4'h8;
      useAltOnNaCtrs_0_31 <= 4'h8;
      useAltOnNaCtrs_0_32 <= 4'h8;
      useAltOnNaCtrs_0_33 <= 4'h8;
      useAltOnNaCtrs_0_34 <= 4'h8;
      useAltOnNaCtrs_0_35 <= 4'h8;
      useAltOnNaCtrs_0_36 <= 4'h8;
      useAltOnNaCtrs_0_37 <= 4'h8;
      useAltOnNaCtrs_0_38 <= 4'h8;
      useAltOnNaCtrs_0_39 <= 4'h8;
      useAltOnNaCtrs_0_40 <= 4'h8;
      useAltOnNaCtrs_0_41 <= 4'h8;
      useAltOnNaCtrs_0_42 <= 4'h8;
      useAltOnNaCtrs_0_43 <= 4'h8;
      useAltOnNaCtrs_0_44 <= 4'h8;
      useAltOnNaCtrs_0_45 <= 4'h8;
      useAltOnNaCtrs_0_46 <= 4'h8;
      useAltOnNaCtrs_0_47 <= 4'h8;
      useAltOnNaCtrs_0_48 <= 4'h8;
      useAltOnNaCtrs_0_49 <= 4'h8;
      useAltOnNaCtrs_0_50 <= 4'h8;
      useAltOnNaCtrs_0_51 <= 4'h8;
      useAltOnNaCtrs_0_52 <= 4'h8;
      useAltOnNaCtrs_0_53 <= 4'h8;
      useAltOnNaCtrs_0_54 <= 4'h8;
      useAltOnNaCtrs_0_55 <= 4'h8;
      useAltOnNaCtrs_0_56 <= 4'h8;
      useAltOnNaCtrs_0_57 <= 4'h8;
      useAltOnNaCtrs_0_58 <= 4'h8;
      useAltOnNaCtrs_0_59 <= 4'h8;
      useAltOnNaCtrs_0_60 <= 4'h8;
      useAltOnNaCtrs_0_61 <= 4'h8;
      useAltOnNaCtrs_0_62 <= 4'h8;
      useAltOnNaCtrs_0_63 <= 4'h8;
      useAltOnNaCtrs_0_64 <= 4'h8;
      useAltOnNaCtrs_0_65 <= 4'h8;
      useAltOnNaCtrs_0_66 <= 4'h8;
      useAltOnNaCtrs_0_67 <= 4'h8;
      useAltOnNaCtrs_0_68 <= 4'h8;
      useAltOnNaCtrs_0_69 <= 4'h8;
      useAltOnNaCtrs_0_70 <= 4'h8;
      useAltOnNaCtrs_0_71 <= 4'h8;
      useAltOnNaCtrs_0_72 <= 4'h8;
      useAltOnNaCtrs_0_73 <= 4'h8;
      useAltOnNaCtrs_0_74 <= 4'h8;
      useAltOnNaCtrs_0_75 <= 4'h8;
      useAltOnNaCtrs_0_76 <= 4'h8;
      useAltOnNaCtrs_0_77 <= 4'h8;
      useAltOnNaCtrs_0_78 <= 4'h8;
      useAltOnNaCtrs_0_79 <= 4'h8;
      useAltOnNaCtrs_0_80 <= 4'h8;
      useAltOnNaCtrs_0_81 <= 4'h8;
      useAltOnNaCtrs_0_82 <= 4'h8;
      useAltOnNaCtrs_0_83 <= 4'h8;
      useAltOnNaCtrs_0_84 <= 4'h8;
      useAltOnNaCtrs_0_85 <= 4'h8;
      useAltOnNaCtrs_0_86 <= 4'h8;
      useAltOnNaCtrs_0_87 <= 4'h8;
      useAltOnNaCtrs_0_88 <= 4'h8;
      useAltOnNaCtrs_0_89 <= 4'h8;
      useAltOnNaCtrs_0_90 <= 4'h8;
      useAltOnNaCtrs_0_91 <= 4'h8;
      useAltOnNaCtrs_0_92 <= 4'h8;
      useAltOnNaCtrs_0_93 <= 4'h8;
      useAltOnNaCtrs_0_94 <= 4'h8;
      useAltOnNaCtrs_0_95 <= 4'h8;
      useAltOnNaCtrs_0_96 <= 4'h8;
      useAltOnNaCtrs_0_97 <= 4'h8;
      useAltOnNaCtrs_0_98 <= 4'h8;
      useAltOnNaCtrs_0_99 <= 4'h8;
      useAltOnNaCtrs_0_100 <= 4'h8;
      useAltOnNaCtrs_0_101 <= 4'h8;
      useAltOnNaCtrs_0_102 <= 4'h8;
      useAltOnNaCtrs_0_103 <= 4'h8;
      useAltOnNaCtrs_0_104 <= 4'h8;
      useAltOnNaCtrs_0_105 <= 4'h8;
      useAltOnNaCtrs_0_106 <= 4'h8;
      useAltOnNaCtrs_0_107 <= 4'h8;
      useAltOnNaCtrs_0_108 <= 4'h8;
      useAltOnNaCtrs_0_109 <= 4'h8;
      useAltOnNaCtrs_0_110 <= 4'h8;
      useAltOnNaCtrs_0_111 <= 4'h8;
      useAltOnNaCtrs_0_112 <= 4'h8;
      useAltOnNaCtrs_0_113 <= 4'h8;
      useAltOnNaCtrs_0_114 <= 4'h8;
      useAltOnNaCtrs_0_115 <= 4'h8;
      useAltOnNaCtrs_0_116 <= 4'h8;
      useAltOnNaCtrs_0_117 <= 4'h8;
      useAltOnNaCtrs_0_118 <= 4'h8;
      useAltOnNaCtrs_0_119 <= 4'h8;
      useAltOnNaCtrs_0_120 <= 4'h8;
      useAltOnNaCtrs_0_121 <= 4'h8;
      useAltOnNaCtrs_0_122 <= 4'h8;
      useAltOnNaCtrs_0_123 <= 4'h8;
      useAltOnNaCtrs_0_124 <= 4'h8;
      useAltOnNaCtrs_0_125 <= 4'h8;
      useAltOnNaCtrs_0_126 <= 4'h8;
      useAltOnNaCtrs_0_127 <= 4'h8;
      useAltOnNaCtrs_1_0 <= 4'h8;
      useAltOnNaCtrs_1_1 <= 4'h8;
      useAltOnNaCtrs_1_2 <= 4'h8;
      useAltOnNaCtrs_1_3 <= 4'h8;
      useAltOnNaCtrs_1_4 <= 4'h8;
      useAltOnNaCtrs_1_5 <= 4'h8;
      useAltOnNaCtrs_1_6 <= 4'h8;
      useAltOnNaCtrs_1_7 <= 4'h8;
      useAltOnNaCtrs_1_8 <= 4'h8;
      useAltOnNaCtrs_1_9 <= 4'h8;
      useAltOnNaCtrs_1_10 <= 4'h8;
      useAltOnNaCtrs_1_11 <= 4'h8;
      useAltOnNaCtrs_1_12 <= 4'h8;
      useAltOnNaCtrs_1_13 <= 4'h8;
      useAltOnNaCtrs_1_14 <= 4'h8;
      useAltOnNaCtrs_1_15 <= 4'h8;
      useAltOnNaCtrs_1_16 <= 4'h8;
      useAltOnNaCtrs_1_17 <= 4'h8;
      useAltOnNaCtrs_1_18 <= 4'h8;
      useAltOnNaCtrs_1_19 <= 4'h8;
      useAltOnNaCtrs_1_20 <= 4'h8;
      useAltOnNaCtrs_1_21 <= 4'h8;
      useAltOnNaCtrs_1_22 <= 4'h8;
      useAltOnNaCtrs_1_23 <= 4'h8;
      useAltOnNaCtrs_1_24 <= 4'h8;
      useAltOnNaCtrs_1_25 <= 4'h8;
      useAltOnNaCtrs_1_26 <= 4'h8;
      useAltOnNaCtrs_1_27 <= 4'h8;
      useAltOnNaCtrs_1_28 <= 4'h8;
      useAltOnNaCtrs_1_29 <= 4'h8;
      useAltOnNaCtrs_1_30 <= 4'h8;
      useAltOnNaCtrs_1_31 <= 4'h8;
      useAltOnNaCtrs_1_32 <= 4'h8;
      useAltOnNaCtrs_1_33 <= 4'h8;
      useAltOnNaCtrs_1_34 <= 4'h8;
      useAltOnNaCtrs_1_35 <= 4'h8;
      useAltOnNaCtrs_1_36 <= 4'h8;
      useAltOnNaCtrs_1_37 <= 4'h8;
      useAltOnNaCtrs_1_38 <= 4'h8;
      useAltOnNaCtrs_1_39 <= 4'h8;
      useAltOnNaCtrs_1_40 <= 4'h8;
      useAltOnNaCtrs_1_41 <= 4'h8;
      useAltOnNaCtrs_1_42 <= 4'h8;
      useAltOnNaCtrs_1_43 <= 4'h8;
      useAltOnNaCtrs_1_44 <= 4'h8;
      useAltOnNaCtrs_1_45 <= 4'h8;
      useAltOnNaCtrs_1_46 <= 4'h8;
      useAltOnNaCtrs_1_47 <= 4'h8;
      useAltOnNaCtrs_1_48 <= 4'h8;
      useAltOnNaCtrs_1_49 <= 4'h8;
      useAltOnNaCtrs_1_50 <= 4'h8;
      useAltOnNaCtrs_1_51 <= 4'h8;
      useAltOnNaCtrs_1_52 <= 4'h8;
      useAltOnNaCtrs_1_53 <= 4'h8;
      useAltOnNaCtrs_1_54 <= 4'h8;
      useAltOnNaCtrs_1_55 <= 4'h8;
      useAltOnNaCtrs_1_56 <= 4'h8;
      useAltOnNaCtrs_1_57 <= 4'h8;
      useAltOnNaCtrs_1_58 <= 4'h8;
      useAltOnNaCtrs_1_59 <= 4'h8;
      useAltOnNaCtrs_1_60 <= 4'h8;
      useAltOnNaCtrs_1_61 <= 4'h8;
      useAltOnNaCtrs_1_62 <= 4'h8;
      useAltOnNaCtrs_1_63 <= 4'h8;
      useAltOnNaCtrs_1_64 <= 4'h8;
      useAltOnNaCtrs_1_65 <= 4'h8;
      useAltOnNaCtrs_1_66 <= 4'h8;
      useAltOnNaCtrs_1_67 <= 4'h8;
      useAltOnNaCtrs_1_68 <= 4'h8;
      useAltOnNaCtrs_1_69 <= 4'h8;
      useAltOnNaCtrs_1_70 <= 4'h8;
      useAltOnNaCtrs_1_71 <= 4'h8;
      useAltOnNaCtrs_1_72 <= 4'h8;
      useAltOnNaCtrs_1_73 <= 4'h8;
      useAltOnNaCtrs_1_74 <= 4'h8;
      useAltOnNaCtrs_1_75 <= 4'h8;
      useAltOnNaCtrs_1_76 <= 4'h8;
      useAltOnNaCtrs_1_77 <= 4'h8;
      useAltOnNaCtrs_1_78 <= 4'h8;
      useAltOnNaCtrs_1_79 <= 4'h8;
      useAltOnNaCtrs_1_80 <= 4'h8;
      useAltOnNaCtrs_1_81 <= 4'h8;
      useAltOnNaCtrs_1_82 <= 4'h8;
      useAltOnNaCtrs_1_83 <= 4'h8;
      useAltOnNaCtrs_1_84 <= 4'h8;
      useAltOnNaCtrs_1_85 <= 4'h8;
      useAltOnNaCtrs_1_86 <= 4'h8;
      useAltOnNaCtrs_1_87 <= 4'h8;
      useAltOnNaCtrs_1_88 <= 4'h8;
      useAltOnNaCtrs_1_89 <= 4'h8;
      useAltOnNaCtrs_1_90 <= 4'h8;
      useAltOnNaCtrs_1_91 <= 4'h8;
      useAltOnNaCtrs_1_92 <= 4'h8;
      useAltOnNaCtrs_1_93 <= 4'h8;
      useAltOnNaCtrs_1_94 <= 4'h8;
      useAltOnNaCtrs_1_95 <= 4'h8;
      useAltOnNaCtrs_1_96 <= 4'h8;
      useAltOnNaCtrs_1_97 <= 4'h8;
      useAltOnNaCtrs_1_98 <= 4'h8;
      useAltOnNaCtrs_1_99 <= 4'h8;
      useAltOnNaCtrs_1_100 <= 4'h8;
      useAltOnNaCtrs_1_101 <= 4'h8;
      useAltOnNaCtrs_1_102 <= 4'h8;
      useAltOnNaCtrs_1_103 <= 4'h8;
      useAltOnNaCtrs_1_104 <= 4'h8;
      useAltOnNaCtrs_1_105 <= 4'h8;
      useAltOnNaCtrs_1_106 <= 4'h8;
      useAltOnNaCtrs_1_107 <= 4'h8;
      useAltOnNaCtrs_1_108 <= 4'h8;
      useAltOnNaCtrs_1_109 <= 4'h8;
      useAltOnNaCtrs_1_110 <= 4'h8;
      useAltOnNaCtrs_1_111 <= 4'h8;
      useAltOnNaCtrs_1_112 <= 4'h8;
      useAltOnNaCtrs_1_113 <= 4'h8;
      useAltOnNaCtrs_1_114 <= 4'h8;
      useAltOnNaCtrs_1_115 <= 4'h8;
      useAltOnNaCtrs_1_116 <= 4'h8;
      useAltOnNaCtrs_1_117 <= 4'h8;
      useAltOnNaCtrs_1_118 <= 4'h8;
      useAltOnNaCtrs_1_119 <= 4'h8;
      useAltOnNaCtrs_1_120 <= 4'h8;
      useAltOnNaCtrs_1_121 <= 4'h8;
      useAltOnNaCtrs_1_122 <= 4'h8;
      useAltOnNaCtrs_1_123 <= 4'h8;
      useAltOnNaCtrs_1_124 <= 4'h8;
      useAltOnNaCtrs_1_125 <= 4'h8;
      useAltOnNaCtrs_1_126 <= 4'h8;
      useAltOnNaCtrs_1_127 <= 4'h8;
      scThresholds_0_ctr <= 5'h10;
      scThresholds_0_thres <= 8'h6;
      scThresholds_1_ctr <= 5'h10;
      scThresholds_1_thres <= 8'h6;
    end
    else begin
      if (debug_modified_debug_s2_pc_modified_0 & io_s1_fire_0)
        s2_pc_seg_0_value <= s1_pc_dup_0[40:24];
      if (debug_modified_debug_s2_pc_modified_1 & io_s1_fire_0)
        s2_pc_seg_1_value <= s1_pc_dup_0[23:12];
      if (debug_modified_debug_s2_pc_modified_2 & io_s1_fire_0)
        s2_pc_seg_2_value <= s1_pc_dup_0[11:0];
      if (debug_modified_debug_s2_pc_modified_1_0 & io_s1_fire_1)
        s2_pc_seg_0_value_1 <= s1_pc_dup_1[40:24];
      if (debug_modified_debug_s2_pc_modified_1_1 & io_s1_fire_1)
        s2_pc_seg_1_value_1 <= s1_pc_dup_1[23:12];
      if (debug_modified_debug_s2_pc_modified_1_2 & io_s1_fire_1)
        s2_pc_seg_2_value_1 <= s1_pc_dup_1[11:0];
      if (debug_modified_debug_s2_pc_modified_2_0 & io_s1_fire_2)
        s2_pc_seg_0_value_2 <= s1_pc_dup_2[40:24];
      if (debug_modified_debug_s2_pc_modified_2_1 & io_s1_fire_2)
        s2_pc_seg_1_value_2 <= s1_pc_dup_2[23:12];
      if (debug_modified_debug_s2_pc_modified_2_2 & io_s1_fire_2)
        s2_pc_seg_2_value_2 <= s1_pc_dup_2[11:0];
      if (debug_modified_debug_s2_pc_modified_3_0 & io_s1_fire_3)
        s2_pc_seg_0_value_3 <= s1_pc_dup_3[40:24];
      if (debug_modified_debug_s2_pc_modified_3_1 & io_s1_fire_3)
        s2_pc_seg_1_value_3 <= s1_pc_dup_3[23:12];
      if (debug_modified_debug_s2_pc_modified_3_2 & io_s1_fire_3)
        s2_pc_seg_2_value_3 <= s1_pc_dup_3[11:0];
      if (debug_modified_debug_s3_pc_modified_0 & io_s2_fire_0)
        s3_pc_seg_0_value <= s2_pc_seg_0_value;
      if (debug_modified_debug_s3_pc_modified_1 & io_s2_fire_0)
        s3_pc_seg_1_value <= s2_pc_seg_1_value;
      if (debug_modified_debug_s3_pc_modified_2 & io_s2_fire_0)
        s3_pc_seg_2_value <= s2_pc_seg_2_value;
      if (debug_modified_debug_s3_pc_modified_1_0 & io_s2_fire_1)
        s3_pc_seg_0_value_1 <= s2_pc_seg_0_value_1;
      if (debug_modified_debug_s3_pc_modified_1_1 & io_s2_fire_1)
        s3_pc_seg_1_value_1 <= s2_pc_seg_1_value_1;
      if (debug_modified_debug_s3_pc_modified_1_2 & io_s2_fire_1)
        s3_pc_seg_2_value_1 <= s2_pc_seg_2_value_1;
      if (debug_modified_debug_s3_pc_modified_2_0 & io_s2_fire_2)
        s3_pc_seg_0_value_2 <= s2_pc_seg_0_value_2;
      if (debug_modified_debug_s3_pc_modified_2_1 & io_s2_fire_2)
        s3_pc_seg_1_value_2 <= s2_pc_seg_1_value_2;
      if (debug_modified_debug_s3_pc_modified_2_2 & io_s2_fire_2)
        s3_pc_seg_2_value_2 <= s2_pc_seg_2_value_2;
      if (debug_modified_debug_s3_pc_modified_3_0 & io_s2_fire_3)
        s3_pc_seg_0_value_3 <= s2_pc_seg_0_value_3;
      if (debug_modified_debug_s3_pc_modified_3_1 & io_s2_fire_3)
        s3_pc_seg_1_value_3 <= s2_pc_seg_1_value_3;
      if (debug_modified_debug_s3_pc_modified_3_2 & io_s2_fire_3)
        s3_pc_seg_2_value_3 <= s2_pc_seg_2_value_3;
      if (needToAllocate) begin
        if (&bankTickCtrs_0) begin
          bankTickCtrDistanceToTops_0 <= 7'h7F;
          bankTickCtrs_0 <= 7'h0;
        end
        else if (tickInc) begin
          if (_GEN_58 >= bankTickCtrDistanceToTops_0 & tickInc) begin
            bankTickCtrDistanceToTops_0 <= 7'h0;
            bankTickCtrs_0 <= 7'h7F;
          end
          else begin
            bankTickCtrDistanceToTops_0 <= 7'(bankTickCtrDistanceToTops_0 - _GEN_58);
            bankTickCtrs_0 <= 7'(bankTickCtrs_0 + _GEN_58);
          end
        end
        else if (tickDec) begin
          if (_GEN_59 >= bankTickCtrs_0 & tickDec) begin
            bankTickCtrDistanceToTops_0 <= 7'h7F;
            bankTickCtrs_0 <= 7'h0;
          end
          else begin
            bankTickCtrDistanceToTops_0 <= 7'(bankTickCtrDistanceToTops_0 + _GEN_59);
            bankTickCtrs_0 <= 7'(bankTickCtrs_0 - _GEN_59);
          end
        end
      end
      if (needToAllocate_1) begin
        if (&bankTickCtrs_1) begin
          bankTickCtrDistanceToTops_1 <= 7'h7F;
          bankTickCtrs_1 <= 7'h0;
        end
        else if (tickInc_1) begin
          if (_GEN_68 >= bankTickCtrDistanceToTops_1 & tickInc_1) begin
            bankTickCtrDistanceToTops_1 <= 7'h0;
            bankTickCtrs_1 <= 7'h7F;
          end
          else begin
            bankTickCtrDistanceToTops_1 <= 7'(bankTickCtrDistanceToTops_1 - _GEN_68);
            bankTickCtrs_1 <= 7'(bankTickCtrs_1 + _GEN_68);
          end
        end
        else if (tickDec_1) begin
          if (_GEN_69 >= bankTickCtrs_1 & tickDec_1) begin
            bankTickCtrDistanceToTops_1 <= 7'h7F;
            bankTickCtrs_1 <= 7'h0;
          end
          else begin
            bankTickCtrDistanceToTops_1 <= 7'(bankTickCtrDistanceToTops_1 + _GEN_69);
            bankTickCtrs_1 <= 7'(bankTickCtrs_1 - _GEN_69);
          end
        end
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h0) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_0 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_0 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_0 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_0 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h1) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_1 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_1 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_1 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_1 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h2) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_2 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_2 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_2 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_2 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h3) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_3 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_3 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_3 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_3 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h4) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_4 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_4 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_4 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_4 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h5) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_5 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_5 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_5 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_5 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h6) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_6 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_6 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_6 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_6 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h7) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_7 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_7 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_7 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_7 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h8) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_8 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_8 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_8 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_8 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h9) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_9 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_9 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_9 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_9 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'hA) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_10 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_10 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_10 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_10 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'hB) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_11 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_11 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_11 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_11 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'hC) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_12 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_12 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_12 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_12 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'hD) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_13 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_13 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_13 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_13 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'hE) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_14 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_14 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_14 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_14 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'hF) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_15 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_15 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_15 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_15 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h10) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_16 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_16 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_16 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_16 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h11) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_17 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_17 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_17 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_17 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h12) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_18 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_18 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_18 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_18 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h13) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_19 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_19 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_19 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_19 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h14) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_20 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_20 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_20 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_20 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h15) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_21 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_21 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_21 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_21 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h16) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_22 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_22 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_22 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_22 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h17) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_23 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_23 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_23 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_23 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h18) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_24 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_24 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_24 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_24 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h19) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_25 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_25 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_25 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_25 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h1A) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_26 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_26 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_26 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_26 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h1B) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_27 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_27 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_27 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_27 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h1C) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_28 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_28 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_28 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_28 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h1D) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_29 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_29 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_29 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_29 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h1E) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_30 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_30 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_30 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_30 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h1F) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_31 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_31 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_31 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_31 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h20) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_32 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_32 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_32 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_32 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h21) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_33 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_33 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_33 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_33 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h22) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_34 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_34 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_34 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_34 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h23) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_35 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_35 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_35 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_35 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h24) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_36 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_36 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_36 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_36 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h25) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_37 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_37 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_37 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_37 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h26) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_38 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_38 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_38 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_38 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h27) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_39 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_39 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_39 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_39 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h28) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_40 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_40 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_40 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_40 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h29) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_41 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_41 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_41 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_41 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h2A) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_42 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_42 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_42 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_42 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h2B) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_43 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_43 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_43 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_43 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h2C) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_44 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_44 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_44 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_44 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h2D) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_45 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_45 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_45 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_45 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h2E) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_46 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_46 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_46 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_46 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h2F) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_47 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_47 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_47 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_47 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h30) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_48 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_48 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_48 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_48 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h31) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_49 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_49 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_49 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_49 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h32) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_50 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_50 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_50 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_50 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h33) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_51 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_51 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_51 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_51 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h34) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_52 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_52 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_52 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_52 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h35) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_53 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_53 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_53 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_53 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h36) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_54 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_54 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_54 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_54 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h37) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_55 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_55 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_55 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_55 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h38) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_56 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_56 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_56 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_56 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h39) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_57 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_57 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_57 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_57 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h3A) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_58 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_58 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_58 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_58 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h3B) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_59 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_59 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_59 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_59 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h3C) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_60 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_60 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_60 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_60 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h3D) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_61 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_61 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_61 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_61 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h3E) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_62 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_62 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_62 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_62 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h3F) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_63 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_63 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_63 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_63 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h40) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_64 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_64 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_64 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_64 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h41) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_65 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_65 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_65 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_65 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h42) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_66 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_66 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_66 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_66 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h43) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_67 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_67 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_67 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_67 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h44) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_68 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_68 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_68 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_68 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h45) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_69 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_69 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_69 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_69 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h46) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_70 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_70 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_70 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_70 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h47) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_71 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_71 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_71 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_71 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h48) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_72 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_72 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_72 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_72 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h49) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_73 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_73 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_73 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_73 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h4A) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_74 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_74 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_74 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_74 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h4B) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_75 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_75 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_75 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_75 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h4C) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_76 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_76 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_76 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_76 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h4D) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_77 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_77 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_77 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_77 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h4E) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_78 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_78 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_78 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_78 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h4F) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_79 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_79 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_79 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_79 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h50) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_80 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_80 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_80 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_80 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h51) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_81 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_81 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_81 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_81 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h52) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_82 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_82 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_82 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_82 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h53) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_83 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_83 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_83 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_83 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h54) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_84 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_84 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_84 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_84 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h55) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_85 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_85 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_85 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_85 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h56) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_86 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_86 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_86 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_86 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h57) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_87 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_87 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_87 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_87 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h58) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_88 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_88 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_88 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_88 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h59) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_89 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_89 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_89 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_89 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h5A) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_90 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_90 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_90 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_90 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h5B) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_91 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_91 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_91 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_91 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h5C) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_92 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_92 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_92 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_92 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h5D) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_93 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_93 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_93 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_93 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h5E) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_94 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_94 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_94 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_94 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h5F) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_95 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_95 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_95 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_95 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h60) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_96 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_96 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_96 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_96 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h61) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_97 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_97 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_97 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_97 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h62) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_98 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_98 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_98 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_98 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h63) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_99 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_99 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_99 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_99 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h64) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_100 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_100 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_100 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_100 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h65) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_101 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_101 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_101 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_101 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h66) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_102 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_102 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_102 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_102 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h67) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_103 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_103 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_103 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_103 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h68) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_104 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_104 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_104 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_104 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h69) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_105 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_105 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_105 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_105 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h6A) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_106 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_106 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_106 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_106 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h6B) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_107 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_107 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_107 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_107 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h6C) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_108 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_108 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_108 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_108 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h6D) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_109 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_109 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_109 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_109 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h6E) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_110 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_110 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_110 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_110 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h6F) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_111 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_111 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_111 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_111 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h70) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_112 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_112 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_112 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_112 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h71) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_113 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_113 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_113 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_113 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h72) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_114 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_114 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_114 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_114 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h73) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_115 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_115 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_115 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_115 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h74) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_116 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_116 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_116 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_116 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h75) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_117 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_117 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_117 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_117 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h76) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_118 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_118 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_118 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_118 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h77) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_119 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_119 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_119 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_119 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h78) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_120 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_120 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_120 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_120 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h79) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_121 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_121 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_121 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_121 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h7A) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_122 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_122 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_122 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_122 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h7B) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_123 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_123 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_123 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_123 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h7C) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_124 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_124 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_124 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_124 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h7D) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_125 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_125 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_125 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_125 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & io_update_bits_pc[7:1] == 7'h7E) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_126 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_126 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_126 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_126 <= _newCtr_T_5;
      end
      if (updateValids_0 & _GEN_72 & (&(io_update_bits_pc[7:1]))) begin
        if (_newCtr_T)
          useAltOnNaCtrs_0_127 <= 4'hF;
        else if (_newCtr_T_2)
          useAltOnNaCtrs_0_127 <= 4'h0;
        else if (updateAltCorrect)
          useAltOnNaCtrs_0_127 <= _newCtr_T_3;
        else
          useAltOnNaCtrs_0_127 <= _newCtr_T_5;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h0) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_0 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_0 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_0 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_0 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h1) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_1 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_1 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_1 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_1 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h2) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_2 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_2 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_2 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_2 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h3) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_3 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_3 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_3 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_3 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h4) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_4 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_4 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_4 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_4 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h5) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_5 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_5 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_5 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_5 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h6) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_6 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_6 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_6 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_6 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h7) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_7 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_7 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_7 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_7 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h8) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_8 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_8 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_8 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_8 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h9) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_9 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_9 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_9 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_9 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'hA) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_10 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_10 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_10 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_10 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'hB) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_11 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_11 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_11 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_11 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'hC) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_12 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_12 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_12 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_12 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'hD) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_13 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_13 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_13 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_13 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'hE) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_14 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_14 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_14 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_14 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'hF) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_15 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_15 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_15 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_15 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h10) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_16 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_16 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_16 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_16 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h11) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_17 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_17 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_17 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_17 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h12) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_18 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_18 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_18 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_18 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h13) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_19 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_19 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_19 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_19 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h14) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_20 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_20 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_20 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_20 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h15) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_21 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_21 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_21 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_21 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h16) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_22 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_22 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_22 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_22 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h17) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_23 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_23 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_23 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_23 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h18) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_24 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_24 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_24 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_24 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h19) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_25 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_25 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_25 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_25 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h1A) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_26 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_26 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_26 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_26 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h1B) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_27 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_27 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_27 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_27 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h1C) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_28 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_28 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_28 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_28 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h1D) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_29 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_29 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_29 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_29 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h1E) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_30 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_30 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_30 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_30 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h1F) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_31 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_31 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_31 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_31 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h20) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_32 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_32 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_32 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_32 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h21) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_33 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_33 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_33 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_33 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h22) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_34 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_34 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_34 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_34 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h23) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_35 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_35 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_35 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_35 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h24) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_36 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_36 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_36 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_36 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h25) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_37 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_37 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_37 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_37 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h26) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_38 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_38 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_38 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_38 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h27) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_39 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_39 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_39 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_39 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h28) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_40 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_40 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_40 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_40 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h29) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_41 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_41 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_41 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_41 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h2A) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_42 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_42 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_42 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_42 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h2B) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_43 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_43 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_43 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_43 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h2C) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_44 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_44 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_44 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_44 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h2D) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_45 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_45 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_45 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_45 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h2E) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_46 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_46 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_46 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_46 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h2F) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_47 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_47 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_47 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_47 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h30) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_48 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_48 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_48 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_48 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h31) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_49 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_49 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_49 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_49 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h32) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_50 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_50 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_50 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_50 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h33) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_51 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_51 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_51 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_51 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h34) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_52 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_52 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_52 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_52 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h35) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_53 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_53 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_53 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_53 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h36) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_54 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_54 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_54 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_54 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h37) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_55 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_55 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_55 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_55 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h38) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_56 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_56 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_56 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_56 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h39) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_57 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_57 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_57 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_57 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h3A) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_58 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_58 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_58 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_58 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h3B) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_59 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_59 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_59 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_59 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h3C) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_60 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_60 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_60 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_60 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h3D) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_61 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_61 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_61 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_61 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h3E) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_62 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_62 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_62 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_62 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h3F) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_63 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_63 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_63 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_63 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h40) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_64 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_64 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_64 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_64 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h41) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_65 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_65 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_65 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_65 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h42) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_66 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_66 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_66 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_66 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h43) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_67 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_67 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_67 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_67 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h44) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_68 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_68 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_68 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_68 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h45) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_69 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_69 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_69 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_69 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h46) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_70 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_70 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_70 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_70 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h47) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_71 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_71 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_71 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_71 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h48) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_72 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_72 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_72 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_72 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h49) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_73 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_73 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_73 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_73 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h4A) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_74 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_74 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_74 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_74 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h4B) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_75 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_75 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_75 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_75 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h4C) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_76 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_76 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_76 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_76 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h4D) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_77 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_77 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_77 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_77 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h4E) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_78 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_78 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_78 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_78 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h4F) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_79 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_79 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_79 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_79 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h50) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_80 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_80 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_80 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_80 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h51) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_81 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_81 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_81 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_81 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h52) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_82 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_82 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_82 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_82 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h53) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_83 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_83 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_83 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_83 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h54) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_84 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_84 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_84 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_84 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h55) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_85 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_85 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_85 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_85 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h56) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_86 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_86 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_86 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_86 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h57) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_87 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_87 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_87 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_87 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h58) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_88 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_88 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_88 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_88 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h59) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_89 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_89 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_89 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_89 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h5A) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_90 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_90 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_90 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_90 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h5B) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_91 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_91 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_91 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_91 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h5C) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_92 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_92 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_92 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_92 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h5D) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_93 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_93 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_93 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_93 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h5E) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_94 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_94 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_94 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_94 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h5F) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_95 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_95 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_95 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_95 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h60) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_96 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_96 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_96 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_96 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h61) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_97 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_97 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_97 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_97 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h62) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_98 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_98 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_98 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_98 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h63) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_99 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_99 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_99 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_99 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h64) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_100 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_100 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_100 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_100 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h65) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_101 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_101 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_101 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_101 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h66) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_102 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_102 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_102 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_102 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h67) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_103 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_103 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_103 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_103 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h68) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_104 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_104 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_104 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_104 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h69) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_105 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_105 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_105 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_105 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h6A) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_106 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_106 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_106 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_106 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h6B) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_107 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_107 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_107 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_107 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h6C) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_108 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_108 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_108 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_108 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h6D) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_109 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_109 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_109 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_109 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h6E) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_110 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_110 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_110 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_110 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h6F) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_111 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_111 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_111 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_111 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h70) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_112 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_112 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_112 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_112 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h71) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_113 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_113 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_113 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_113 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h72) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_114 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_114 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_114 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_114 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h73) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_115 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_115 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_115 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_115 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h74) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_116 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_116 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_116 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_116 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h75) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_117 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_117 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_117 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_117 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h76) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_118 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_118 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_118 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_118 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h77) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_119 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_119 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_119 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_119 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h78) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_120 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_120 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_120 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_120 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h79) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_121 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_121 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_121 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_121 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h7A) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_122 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_122 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_122 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_122 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h7B) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_123 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_123 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_123 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_123 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h7C) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_124 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_124 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_124 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_124 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h7D) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_125 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_125 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_125 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_125 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & io_update_bits_pc[7:1] == 7'h7E) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_126 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_126 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_126 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_126 <= _newCtr_T_14;
      end
      if (updateValids_1 & _GEN_73 & (&(io_update_bits_pc[7:1]))) begin
        if (_newCtr_T_9)
          useAltOnNaCtrs_1_127 <= 4'hF;
        else if (_newCtr_T_11)
          useAltOnNaCtrs_1_127 <= 4'h0;
        else if (updateAltCorrect_1)
          useAltOnNaCtrs_1_127 <= _newCtr_T_12;
        else
          useAltOnNaCtrs_1_127 <= _newCtr_T_14;
      end
      if (_GEN & io_update_bits_meta[48] != tagePred
          & _totalSumAbs_T_8 >= {2'h0, 8'(scThresholds_0_thres - 8'h4)}
          & _totalSumAbs_T_8 <= {2'h0, 8'(scThresholds_0_thres - 8'h2)}) begin
        if ((&newThres_newCtr) | _newThres_res_ctr_T_4)
          scThresholds_0_ctr <= 5'h10;
        else if (_newThres_newCtr_T)
          scThresholds_0_ctr <= 5'h1F;
        else if (_newThres_newCtr_T_2)
          scThresholds_0_ctr <= 5'h0;
        else if (_GEN_70)
          scThresholds_0_ctr <= _newThres_newCtr_T_5;
        else
          scThresholds_0_ctr <= _newThres_newCtr_T_3;
        if ((&newThres_newCtr) & scThresholds_0_thres < 8'h20)
          scThresholds_0_thres <= 8'(scThresholds_0_thres + 8'h2);
        else if (_newThres_res_ctr_T_4 & scThresholds_0_thres > 8'h5)
          scThresholds_0_thres <= 8'(scThresholds_0_thres - 8'h2);
      end
      if (_GEN_1 & io_update_bits_meta[49] != tagePred_1
          & _totalSumAbs_T_17 >= {2'h0, 8'(scThresholds_1_thres - 8'h4)}
          & _totalSumAbs_T_17 <= {2'h0, 8'(scThresholds_1_thres - 8'h2)}) begin
        if ((&newThres_newCtr_1) | _newThres_res_ctr_T_11)
          scThresholds_1_ctr <= 5'h10;
        else if (_newThres_newCtr_T_9)
          scThresholds_1_ctr <= 5'h1F;
        else if (_newThres_newCtr_T_11)
          scThresholds_1_ctr <= 5'h0;
        else if (_GEN_71)
          scThresholds_1_ctr <= _newThres_newCtr_T_14;
        else
          scThresholds_1_ctr <= _newThres_newCtr_T_12;
        if ((&newThres_newCtr_1) & scThresholds_1_thres < 8'h20)
          scThresholds_1_thres <= 8'(scThresholds_1_thres + 8'h2);
        else if (_newThres_res_ctr_T_11 & scThresholds_1_thres > 8'h5)
          scThresholds_1_thres <= 8'(scThresholds_1_thres - 8'h2);
      end
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:219];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [7:0] i = 8'h0; i < 8'hDC; i += 8'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        s1_pc_dup_0 = {_RANDOM[8'h0], _RANDOM[8'h1][8:0]};
        s1_pc_dup_1 = {_RANDOM[8'h1][31:9], _RANDOM[8'h2][17:0]};
        s1_pc_dup_2 = {_RANDOM[8'h2][31:18], _RANDOM[8'h3][26:0]};
        s1_pc_dup_3 = {_RANDOM[8'h3][31:27], _RANDOM[8'h4], _RANDOM[8'h5][3:0]};
        s2_pc_seg_0_value = _RANDOM[8'h5][20:4];
        s2_pc_seg_1_value = {_RANDOM[8'h5][31:21], _RANDOM[8'h6][0]};
        s2_pc_seg_2_value = _RANDOM[8'h6][12:1];
        s2_pc_seg_0_value_1 = _RANDOM[8'h6][29:13];
        s2_pc_seg_1_value_1 = {_RANDOM[8'h6][31:30], _RANDOM[8'h7][9:0]};
        s2_pc_seg_2_value_1 = _RANDOM[8'h7][21:10];
        s2_pc_seg_0_value_2 = {_RANDOM[8'h7][31:22], _RANDOM[8'h8][6:0]};
        s2_pc_seg_1_value_2 = _RANDOM[8'h8][18:7];
        s2_pc_seg_2_value_2 = _RANDOM[8'h8][30:19];
        s2_pc_seg_0_value_3 = {_RANDOM[8'h8][31], _RANDOM[8'h9][15:0]};
        s2_pc_seg_1_value_3 = _RANDOM[8'h9][27:16];
        s2_pc_seg_2_value_3 = {_RANDOM[8'h9][31:28], _RANDOM[8'hA][7:0]};
        s3_pc_seg_0_value = _RANDOM[8'hA][24:8];
        s3_pc_seg_1_value = {_RANDOM[8'hA][31:25], _RANDOM[8'hB][4:0]};
        s3_pc_seg_2_value = _RANDOM[8'hB][16:5];
        s3_pc_seg_0_value_1 = {_RANDOM[8'hB][31:17], _RANDOM[8'hC][1:0]};
        s3_pc_seg_1_value_1 = _RANDOM[8'hC][13:2];
        s3_pc_seg_2_value_1 = _RANDOM[8'hC][25:14];
        s3_pc_seg_0_value_2 = {_RANDOM[8'hC][31:26], _RANDOM[8'hD][10:0]};
        s3_pc_seg_1_value_2 = _RANDOM[8'hD][22:11];
        s3_pc_seg_2_value_2 = {_RANDOM[8'hD][31:23], _RANDOM[8'hE][2:0]};
        s3_pc_seg_0_value_3 = _RANDOM[8'hE][19:3];
        s3_pc_seg_1_value_3 = _RANDOM[8'hE][31:20];
        s3_pc_seg_2_value_3 = _RANDOM[8'hF][11:0];
        REG = _RANDOM[8'hF][12];
        REG_1 = _RANDOM[8'hF][13];
        bankTickCtrDistanceToTops_0 = _RANDOM[8'hF][20:14];
        bankTickCtrDistanceToTops_1 = _RANDOM[8'hF][27:21];
        bankTickCtrs_0 = {_RANDOM[8'hF][31:28], _RANDOM[8'h10][2:0]};
        bankTickCtrs_1 = _RANDOM[8'h10][9:3];
        useAltOnNaCtrs_0_0 = _RANDOM[8'h10][13:10];
        useAltOnNaCtrs_0_1 = _RANDOM[8'h10][17:14];
        useAltOnNaCtrs_0_2 = _RANDOM[8'h10][21:18];
        useAltOnNaCtrs_0_3 = _RANDOM[8'h10][25:22];
        useAltOnNaCtrs_0_4 = _RANDOM[8'h10][29:26];
        useAltOnNaCtrs_0_5 = {_RANDOM[8'h10][31:30], _RANDOM[8'h11][1:0]};
        useAltOnNaCtrs_0_6 = _RANDOM[8'h11][5:2];
        useAltOnNaCtrs_0_7 = _RANDOM[8'h11][9:6];
        useAltOnNaCtrs_0_8 = _RANDOM[8'h11][13:10];
        useAltOnNaCtrs_0_9 = _RANDOM[8'h11][17:14];
        useAltOnNaCtrs_0_10 = _RANDOM[8'h11][21:18];
        useAltOnNaCtrs_0_11 = _RANDOM[8'h11][25:22];
        useAltOnNaCtrs_0_12 = _RANDOM[8'h11][29:26];
        useAltOnNaCtrs_0_13 = {_RANDOM[8'h11][31:30], _RANDOM[8'h12][1:0]};
        useAltOnNaCtrs_0_14 = _RANDOM[8'h12][5:2];
        useAltOnNaCtrs_0_15 = _RANDOM[8'h12][9:6];
        useAltOnNaCtrs_0_16 = _RANDOM[8'h12][13:10];
        useAltOnNaCtrs_0_17 = _RANDOM[8'h12][17:14];
        useAltOnNaCtrs_0_18 = _RANDOM[8'h12][21:18];
        useAltOnNaCtrs_0_19 = _RANDOM[8'h12][25:22];
        useAltOnNaCtrs_0_20 = _RANDOM[8'h12][29:26];
        useAltOnNaCtrs_0_21 = {_RANDOM[8'h12][31:30], _RANDOM[8'h13][1:0]};
        useAltOnNaCtrs_0_22 = _RANDOM[8'h13][5:2];
        useAltOnNaCtrs_0_23 = _RANDOM[8'h13][9:6];
        useAltOnNaCtrs_0_24 = _RANDOM[8'h13][13:10];
        useAltOnNaCtrs_0_25 = _RANDOM[8'h13][17:14];
        useAltOnNaCtrs_0_26 = _RANDOM[8'h13][21:18];
        useAltOnNaCtrs_0_27 = _RANDOM[8'h13][25:22];
        useAltOnNaCtrs_0_28 = _RANDOM[8'h13][29:26];
        useAltOnNaCtrs_0_29 = {_RANDOM[8'h13][31:30], _RANDOM[8'h14][1:0]};
        useAltOnNaCtrs_0_30 = _RANDOM[8'h14][5:2];
        useAltOnNaCtrs_0_31 = _RANDOM[8'h14][9:6];
        useAltOnNaCtrs_0_32 = _RANDOM[8'h14][13:10];
        useAltOnNaCtrs_0_33 = _RANDOM[8'h14][17:14];
        useAltOnNaCtrs_0_34 = _RANDOM[8'h14][21:18];
        useAltOnNaCtrs_0_35 = _RANDOM[8'h14][25:22];
        useAltOnNaCtrs_0_36 = _RANDOM[8'h14][29:26];
        useAltOnNaCtrs_0_37 = {_RANDOM[8'h14][31:30], _RANDOM[8'h15][1:0]};
        useAltOnNaCtrs_0_38 = _RANDOM[8'h15][5:2];
        useAltOnNaCtrs_0_39 = _RANDOM[8'h15][9:6];
        useAltOnNaCtrs_0_40 = _RANDOM[8'h15][13:10];
        useAltOnNaCtrs_0_41 = _RANDOM[8'h15][17:14];
        useAltOnNaCtrs_0_42 = _RANDOM[8'h15][21:18];
        useAltOnNaCtrs_0_43 = _RANDOM[8'h15][25:22];
        useAltOnNaCtrs_0_44 = _RANDOM[8'h15][29:26];
        useAltOnNaCtrs_0_45 = {_RANDOM[8'h15][31:30], _RANDOM[8'h16][1:0]};
        useAltOnNaCtrs_0_46 = _RANDOM[8'h16][5:2];
        useAltOnNaCtrs_0_47 = _RANDOM[8'h16][9:6];
        useAltOnNaCtrs_0_48 = _RANDOM[8'h16][13:10];
        useAltOnNaCtrs_0_49 = _RANDOM[8'h16][17:14];
        useAltOnNaCtrs_0_50 = _RANDOM[8'h16][21:18];
        useAltOnNaCtrs_0_51 = _RANDOM[8'h16][25:22];
        useAltOnNaCtrs_0_52 = _RANDOM[8'h16][29:26];
        useAltOnNaCtrs_0_53 = {_RANDOM[8'h16][31:30], _RANDOM[8'h17][1:0]};
        useAltOnNaCtrs_0_54 = _RANDOM[8'h17][5:2];
        useAltOnNaCtrs_0_55 = _RANDOM[8'h17][9:6];
        useAltOnNaCtrs_0_56 = _RANDOM[8'h17][13:10];
        useAltOnNaCtrs_0_57 = _RANDOM[8'h17][17:14];
        useAltOnNaCtrs_0_58 = _RANDOM[8'h17][21:18];
        useAltOnNaCtrs_0_59 = _RANDOM[8'h17][25:22];
        useAltOnNaCtrs_0_60 = _RANDOM[8'h17][29:26];
        useAltOnNaCtrs_0_61 = {_RANDOM[8'h17][31:30], _RANDOM[8'h18][1:0]};
        useAltOnNaCtrs_0_62 = _RANDOM[8'h18][5:2];
        useAltOnNaCtrs_0_63 = _RANDOM[8'h18][9:6];
        useAltOnNaCtrs_0_64 = _RANDOM[8'h18][13:10];
        useAltOnNaCtrs_0_65 = _RANDOM[8'h18][17:14];
        useAltOnNaCtrs_0_66 = _RANDOM[8'h18][21:18];
        useAltOnNaCtrs_0_67 = _RANDOM[8'h18][25:22];
        useAltOnNaCtrs_0_68 = _RANDOM[8'h18][29:26];
        useAltOnNaCtrs_0_69 = {_RANDOM[8'h18][31:30], _RANDOM[8'h19][1:0]};
        useAltOnNaCtrs_0_70 = _RANDOM[8'h19][5:2];
        useAltOnNaCtrs_0_71 = _RANDOM[8'h19][9:6];
        useAltOnNaCtrs_0_72 = _RANDOM[8'h19][13:10];
        useAltOnNaCtrs_0_73 = _RANDOM[8'h19][17:14];
        useAltOnNaCtrs_0_74 = _RANDOM[8'h19][21:18];
        useAltOnNaCtrs_0_75 = _RANDOM[8'h19][25:22];
        useAltOnNaCtrs_0_76 = _RANDOM[8'h19][29:26];
        useAltOnNaCtrs_0_77 = {_RANDOM[8'h19][31:30], _RANDOM[8'h1A][1:0]};
        useAltOnNaCtrs_0_78 = _RANDOM[8'h1A][5:2];
        useAltOnNaCtrs_0_79 = _RANDOM[8'h1A][9:6];
        useAltOnNaCtrs_0_80 = _RANDOM[8'h1A][13:10];
        useAltOnNaCtrs_0_81 = _RANDOM[8'h1A][17:14];
        useAltOnNaCtrs_0_82 = _RANDOM[8'h1A][21:18];
        useAltOnNaCtrs_0_83 = _RANDOM[8'h1A][25:22];
        useAltOnNaCtrs_0_84 = _RANDOM[8'h1A][29:26];
        useAltOnNaCtrs_0_85 = {_RANDOM[8'h1A][31:30], _RANDOM[8'h1B][1:0]};
        useAltOnNaCtrs_0_86 = _RANDOM[8'h1B][5:2];
        useAltOnNaCtrs_0_87 = _RANDOM[8'h1B][9:6];
        useAltOnNaCtrs_0_88 = _RANDOM[8'h1B][13:10];
        useAltOnNaCtrs_0_89 = _RANDOM[8'h1B][17:14];
        useAltOnNaCtrs_0_90 = _RANDOM[8'h1B][21:18];
        useAltOnNaCtrs_0_91 = _RANDOM[8'h1B][25:22];
        useAltOnNaCtrs_0_92 = _RANDOM[8'h1B][29:26];
        useAltOnNaCtrs_0_93 = {_RANDOM[8'h1B][31:30], _RANDOM[8'h1C][1:0]};
        useAltOnNaCtrs_0_94 = _RANDOM[8'h1C][5:2];
        useAltOnNaCtrs_0_95 = _RANDOM[8'h1C][9:6];
        useAltOnNaCtrs_0_96 = _RANDOM[8'h1C][13:10];
        useAltOnNaCtrs_0_97 = _RANDOM[8'h1C][17:14];
        useAltOnNaCtrs_0_98 = _RANDOM[8'h1C][21:18];
        useAltOnNaCtrs_0_99 = _RANDOM[8'h1C][25:22];
        useAltOnNaCtrs_0_100 = _RANDOM[8'h1C][29:26];
        useAltOnNaCtrs_0_101 = {_RANDOM[8'h1C][31:30], _RANDOM[8'h1D][1:0]};
        useAltOnNaCtrs_0_102 = _RANDOM[8'h1D][5:2];
        useAltOnNaCtrs_0_103 = _RANDOM[8'h1D][9:6];
        useAltOnNaCtrs_0_104 = _RANDOM[8'h1D][13:10];
        useAltOnNaCtrs_0_105 = _RANDOM[8'h1D][17:14];
        useAltOnNaCtrs_0_106 = _RANDOM[8'h1D][21:18];
        useAltOnNaCtrs_0_107 = _RANDOM[8'h1D][25:22];
        useAltOnNaCtrs_0_108 = _RANDOM[8'h1D][29:26];
        useAltOnNaCtrs_0_109 = {_RANDOM[8'h1D][31:30], _RANDOM[8'h1E][1:0]};
        useAltOnNaCtrs_0_110 = _RANDOM[8'h1E][5:2];
        useAltOnNaCtrs_0_111 = _RANDOM[8'h1E][9:6];
        useAltOnNaCtrs_0_112 = _RANDOM[8'h1E][13:10];
        useAltOnNaCtrs_0_113 = _RANDOM[8'h1E][17:14];
        useAltOnNaCtrs_0_114 = _RANDOM[8'h1E][21:18];
        useAltOnNaCtrs_0_115 = _RANDOM[8'h1E][25:22];
        useAltOnNaCtrs_0_116 = _RANDOM[8'h1E][29:26];
        useAltOnNaCtrs_0_117 = {_RANDOM[8'h1E][31:30], _RANDOM[8'h1F][1:0]};
        useAltOnNaCtrs_0_118 = _RANDOM[8'h1F][5:2];
        useAltOnNaCtrs_0_119 = _RANDOM[8'h1F][9:6];
        useAltOnNaCtrs_0_120 = _RANDOM[8'h1F][13:10];
        useAltOnNaCtrs_0_121 = _RANDOM[8'h1F][17:14];
        useAltOnNaCtrs_0_122 = _RANDOM[8'h1F][21:18];
        useAltOnNaCtrs_0_123 = _RANDOM[8'h1F][25:22];
        useAltOnNaCtrs_0_124 = _RANDOM[8'h1F][29:26];
        useAltOnNaCtrs_0_125 = {_RANDOM[8'h1F][31:30], _RANDOM[8'h20][1:0]};
        useAltOnNaCtrs_0_126 = _RANDOM[8'h20][5:2];
        useAltOnNaCtrs_0_127 = _RANDOM[8'h20][9:6];
        useAltOnNaCtrs_1_0 = _RANDOM[8'h20][13:10];
        useAltOnNaCtrs_1_1 = _RANDOM[8'h20][17:14];
        useAltOnNaCtrs_1_2 = _RANDOM[8'h20][21:18];
        useAltOnNaCtrs_1_3 = _RANDOM[8'h20][25:22];
        useAltOnNaCtrs_1_4 = _RANDOM[8'h20][29:26];
        useAltOnNaCtrs_1_5 = {_RANDOM[8'h20][31:30], _RANDOM[8'h21][1:0]};
        useAltOnNaCtrs_1_6 = _RANDOM[8'h21][5:2];
        useAltOnNaCtrs_1_7 = _RANDOM[8'h21][9:6];
        useAltOnNaCtrs_1_8 = _RANDOM[8'h21][13:10];
        useAltOnNaCtrs_1_9 = _RANDOM[8'h21][17:14];
        useAltOnNaCtrs_1_10 = _RANDOM[8'h21][21:18];
        useAltOnNaCtrs_1_11 = _RANDOM[8'h21][25:22];
        useAltOnNaCtrs_1_12 = _RANDOM[8'h21][29:26];
        useAltOnNaCtrs_1_13 = {_RANDOM[8'h21][31:30], _RANDOM[8'h22][1:0]};
        useAltOnNaCtrs_1_14 = _RANDOM[8'h22][5:2];
        useAltOnNaCtrs_1_15 = _RANDOM[8'h22][9:6];
        useAltOnNaCtrs_1_16 = _RANDOM[8'h22][13:10];
        useAltOnNaCtrs_1_17 = _RANDOM[8'h22][17:14];
        useAltOnNaCtrs_1_18 = _RANDOM[8'h22][21:18];
        useAltOnNaCtrs_1_19 = _RANDOM[8'h22][25:22];
        useAltOnNaCtrs_1_20 = _RANDOM[8'h22][29:26];
        useAltOnNaCtrs_1_21 = {_RANDOM[8'h22][31:30], _RANDOM[8'h23][1:0]};
        useAltOnNaCtrs_1_22 = _RANDOM[8'h23][5:2];
        useAltOnNaCtrs_1_23 = _RANDOM[8'h23][9:6];
        useAltOnNaCtrs_1_24 = _RANDOM[8'h23][13:10];
        useAltOnNaCtrs_1_25 = _RANDOM[8'h23][17:14];
        useAltOnNaCtrs_1_26 = _RANDOM[8'h23][21:18];
        useAltOnNaCtrs_1_27 = _RANDOM[8'h23][25:22];
        useAltOnNaCtrs_1_28 = _RANDOM[8'h23][29:26];
        useAltOnNaCtrs_1_29 = {_RANDOM[8'h23][31:30], _RANDOM[8'h24][1:0]};
        useAltOnNaCtrs_1_30 = _RANDOM[8'h24][5:2];
        useAltOnNaCtrs_1_31 = _RANDOM[8'h24][9:6];
        useAltOnNaCtrs_1_32 = _RANDOM[8'h24][13:10];
        useAltOnNaCtrs_1_33 = _RANDOM[8'h24][17:14];
        useAltOnNaCtrs_1_34 = _RANDOM[8'h24][21:18];
        useAltOnNaCtrs_1_35 = _RANDOM[8'h24][25:22];
        useAltOnNaCtrs_1_36 = _RANDOM[8'h24][29:26];
        useAltOnNaCtrs_1_37 = {_RANDOM[8'h24][31:30], _RANDOM[8'h25][1:0]};
        useAltOnNaCtrs_1_38 = _RANDOM[8'h25][5:2];
        useAltOnNaCtrs_1_39 = _RANDOM[8'h25][9:6];
        useAltOnNaCtrs_1_40 = _RANDOM[8'h25][13:10];
        useAltOnNaCtrs_1_41 = _RANDOM[8'h25][17:14];
        useAltOnNaCtrs_1_42 = _RANDOM[8'h25][21:18];
        useAltOnNaCtrs_1_43 = _RANDOM[8'h25][25:22];
        useAltOnNaCtrs_1_44 = _RANDOM[8'h25][29:26];
        useAltOnNaCtrs_1_45 = {_RANDOM[8'h25][31:30], _RANDOM[8'h26][1:0]};
        useAltOnNaCtrs_1_46 = _RANDOM[8'h26][5:2];
        useAltOnNaCtrs_1_47 = _RANDOM[8'h26][9:6];
        useAltOnNaCtrs_1_48 = _RANDOM[8'h26][13:10];
        useAltOnNaCtrs_1_49 = _RANDOM[8'h26][17:14];
        useAltOnNaCtrs_1_50 = _RANDOM[8'h26][21:18];
        useAltOnNaCtrs_1_51 = _RANDOM[8'h26][25:22];
        useAltOnNaCtrs_1_52 = _RANDOM[8'h26][29:26];
        useAltOnNaCtrs_1_53 = {_RANDOM[8'h26][31:30], _RANDOM[8'h27][1:0]};
        useAltOnNaCtrs_1_54 = _RANDOM[8'h27][5:2];
        useAltOnNaCtrs_1_55 = _RANDOM[8'h27][9:6];
        useAltOnNaCtrs_1_56 = _RANDOM[8'h27][13:10];
        useAltOnNaCtrs_1_57 = _RANDOM[8'h27][17:14];
        useAltOnNaCtrs_1_58 = _RANDOM[8'h27][21:18];
        useAltOnNaCtrs_1_59 = _RANDOM[8'h27][25:22];
        useAltOnNaCtrs_1_60 = _RANDOM[8'h27][29:26];
        useAltOnNaCtrs_1_61 = {_RANDOM[8'h27][31:30], _RANDOM[8'h28][1:0]};
        useAltOnNaCtrs_1_62 = _RANDOM[8'h28][5:2];
        useAltOnNaCtrs_1_63 = _RANDOM[8'h28][9:6];
        useAltOnNaCtrs_1_64 = _RANDOM[8'h28][13:10];
        useAltOnNaCtrs_1_65 = _RANDOM[8'h28][17:14];
        useAltOnNaCtrs_1_66 = _RANDOM[8'h28][21:18];
        useAltOnNaCtrs_1_67 = _RANDOM[8'h28][25:22];
        useAltOnNaCtrs_1_68 = _RANDOM[8'h28][29:26];
        useAltOnNaCtrs_1_69 = {_RANDOM[8'h28][31:30], _RANDOM[8'h29][1:0]};
        useAltOnNaCtrs_1_70 = _RANDOM[8'h29][5:2];
        useAltOnNaCtrs_1_71 = _RANDOM[8'h29][9:6];
        useAltOnNaCtrs_1_72 = _RANDOM[8'h29][13:10];
        useAltOnNaCtrs_1_73 = _RANDOM[8'h29][17:14];
        useAltOnNaCtrs_1_74 = _RANDOM[8'h29][21:18];
        useAltOnNaCtrs_1_75 = _RANDOM[8'h29][25:22];
        useAltOnNaCtrs_1_76 = _RANDOM[8'h29][29:26];
        useAltOnNaCtrs_1_77 = {_RANDOM[8'h29][31:30], _RANDOM[8'h2A][1:0]};
        useAltOnNaCtrs_1_78 = _RANDOM[8'h2A][5:2];
        useAltOnNaCtrs_1_79 = _RANDOM[8'h2A][9:6];
        useAltOnNaCtrs_1_80 = _RANDOM[8'h2A][13:10];
        useAltOnNaCtrs_1_81 = _RANDOM[8'h2A][17:14];
        useAltOnNaCtrs_1_82 = _RANDOM[8'h2A][21:18];
        useAltOnNaCtrs_1_83 = _RANDOM[8'h2A][25:22];
        useAltOnNaCtrs_1_84 = _RANDOM[8'h2A][29:26];
        useAltOnNaCtrs_1_85 = {_RANDOM[8'h2A][31:30], _RANDOM[8'h2B][1:0]};
        useAltOnNaCtrs_1_86 = _RANDOM[8'h2B][5:2];
        useAltOnNaCtrs_1_87 = _RANDOM[8'h2B][9:6];
        useAltOnNaCtrs_1_88 = _RANDOM[8'h2B][13:10];
        useAltOnNaCtrs_1_89 = _RANDOM[8'h2B][17:14];
        useAltOnNaCtrs_1_90 = _RANDOM[8'h2B][21:18];
        useAltOnNaCtrs_1_91 = _RANDOM[8'h2B][25:22];
        useAltOnNaCtrs_1_92 = _RANDOM[8'h2B][29:26];
        useAltOnNaCtrs_1_93 = {_RANDOM[8'h2B][31:30], _RANDOM[8'h2C][1:0]};
        useAltOnNaCtrs_1_94 = _RANDOM[8'h2C][5:2];
        useAltOnNaCtrs_1_95 = _RANDOM[8'h2C][9:6];
        useAltOnNaCtrs_1_96 = _RANDOM[8'h2C][13:10];
        useAltOnNaCtrs_1_97 = _RANDOM[8'h2C][17:14];
        useAltOnNaCtrs_1_98 = _RANDOM[8'h2C][21:18];
        useAltOnNaCtrs_1_99 = _RANDOM[8'h2C][25:22];
        useAltOnNaCtrs_1_100 = _RANDOM[8'h2C][29:26];
        useAltOnNaCtrs_1_101 = {_RANDOM[8'h2C][31:30], _RANDOM[8'h2D][1:0]};
        useAltOnNaCtrs_1_102 = _RANDOM[8'h2D][5:2];
        useAltOnNaCtrs_1_103 = _RANDOM[8'h2D][9:6];
        useAltOnNaCtrs_1_104 = _RANDOM[8'h2D][13:10];
        useAltOnNaCtrs_1_105 = _RANDOM[8'h2D][17:14];
        useAltOnNaCtrs_1_106 = _RANDOM[8'h2D][21:18];
        useAltOnNaCtrs_1_107 = _RANDOM[8'h2D][25:22];
        useAltOnNaCtrs_1_108 = _RANDOM[8'h2D][29:26];
        useAltOnNaCtrs_1_109 = {_RANDOM[8'h2D][31:30], _RANDOM[8'h2E][1:0]};
        useAltOnNaCtrs_1_110 = _RANDOM[8'h2E][5:2];
        useAltOnNaCtrs_1_111 = _RANDOM[8'h2E][9:6];
        useAltOnNaCtrs_1_112 = _RANDOM[8'h2E][13:10];
        useAltOnNaCtrs_1_113 = _RANDOM[8'h2E][17:14];
        useAltOnNaCtrs_1_114 = _RANDOM[8'h2E][21:18];
        useAltOnNaCtrs_1_115 = _RANDOM[8'h2E][25:22];
        useAltOnNaCtrs_1_116 = _RANDOM[8'h2E][29:26];
        useAltOnNaCtrs_1_117 = {_RANDOM[8'h2E][31:30], _RANDOM[8'h2F][1:0]};
        useAltOnNaCtrs_1_118 = _RANDOM[8'h2F][5:2];
        useAltOnNaCtrs_1_119 = _RANDOM[8'h2F][9:6];
        useAltOnNaCtrs_1_120 = _RANDOM[8'h2F][13:10];
        useAltOnNaCtrs_1_121 = _RANDOM[8'h2F][17:14];
        useAltOnNaCtrs_1_122 = _RANDOM[8'h2F][21:18];
        useAltOnNaCtrs_1_123 = _RANDOM[8'h2F][25:22];
        useAltOnNaCtrs_1_124 = _RANDOM[8'h2F][29:26];
        useAltOnNaCtrs_1_125 = {_RANDOM[8'h2F][31:30], _RANDOM[8'h30][1:0]};
        useAltOnNaCtrs_1_126 = _RANDOM[8'h30][5:2];
        useAltOnNaCtrs_1_127 = _RANDOM[8'h30][9:6];
        s2_provideds_0 = _RANDOM[8'h32][28];
        s2_provideds_1 = _RANDOM[8'h32][29];
        s2_providers_0 = _RANDOM[8'h32][31:30];
        s2_providers_1 = _RANDOM[8'h33][1:0];
        s2_providerResps_0_ctr = _RANDOM[8'h33][4:2];
        s2_providerResps_0_u = _RANDOM[8'h33][5];
        s2_providerResps_1_ctr = _RANDOM[8'h33][9:7];
        s2_providerResps_1_u = _RANDOM[8'h33][10];
        s2_altUsed_0 = _RANDOM[8'h33][12];
        s2_altUsed_1 = _RANDOM[8'h33][13];
        s2_tageTakens_dup_0_0 = _RANDOM[8'h33][14];
        s2_tageTakens_dup_0_1 = _RANDOM[8'h33][15];
        s2_tageTakens_dup_1_0 = _RANDOM[8'h33][16];
        s2_tageTakens_dup_1_1 = _RANDOM[8'h33][17];
        s2_tageTakens_dup_2_0 = _RANDOM[8'h33][18];
        s2_tageTakens_dup_2_1 = _RANDOM[8'h33][19];
        s2_tageTakens_dup_3_0 = _RANDOM[8'h33][20];
        s2_tageTakens_dup_3_1 = _RANDOM[8'h33][21];
        s2_basecnts_0 = _RANDOM[8'h33][23:22];
        s2_basecnts_1 = _RANDOM[8'h33][25:24];
        resp_meta_providers_0_valid_r = _RANDOM[8'h33][28];
        resp_meta_providers_0_bits_r = _RANDOM[8'h33][30:29];
        resp_meta_providerResps_0_r_ctr = {_RANDOM[8'h33][31], _RANDOM[8'h34][1:0]};
        resp_meta_providerResps_0_r_u = _RANDOM[8'h34][2];
        allocatableSlots = _RANDOM[8'h34][7:4];
        resp_meta_allocates_0_r = _RANDOM[8'h34][11:8];
        resp_meta_altUsed_0_r = _RANDOM[8'h34][12];
        resp_meta_basecnts_0_r = _RANDOM[8'h34][14:13];
        tage_enable_dup_REG = _RANDOM[8'h34][15];
        resp_meta_providers_1_valid_r = _RANDOM[8'h34][16];
        resp_meta_providers_1_bits_r = _RANDOM[8'h34][18:17];
        resp_meta_providerResps_1_r_ctr = _RANDOM[8'h34][21:19];
        resp_meta_providerResps_1_r_u = _RANDOM[8'h34][22];
        allocatableSlots_1 = _RANDOM[8'h34][27:24];
        resp_meta_allocates_1_r = _RANDOM[8'h34][31:28];
        resp_meta_altUsed_1_r = _RANDOM[8'h35][0];
        resp_meta_basecnts_1_r = _RANDOM[8'h35][2:1];
        tage_enable_dup_REG_1 = _RANDOM[8'h35][3];
        tables_0_io_update_reset_u_0_REG = _RANDOM[8'h35][4];
        tables_0_io_update_mask_0_REG = _RANDOM[8'h35][5];
        tables_0_io_update_takens_0_r = _RANDOM[8'h35][6];
        tables_0_io_update_alloc_0_r = _RANDOM[8'h35][7];
        tables_0_io_update_oldCtrs_0_r = _RANDOM[8'h35][10:8];
        tables_0_io_update_uMask_0_r = _RANDOM[8'h35][11];
        tables_0_io_update_us_0_r = _RANDOM[8'h35][12];
        tables_1_io_update_reset_u_0_REG = _RANDOM[8'h3E][22];
        tables_1_io_update_mask_0_REG = _RANDOM[8'h3E][23];
        tables_1_io_update_takens_0_r = _RANDOM[8'h3E][24];
        tables_1_io_update_alloc_0_r = _RANDOM[8'h3E][25];
        tables_1_io_update_oldCtrs_0_r = _RANDOM[8'h3E][28:26];
        tables_1_io_update_uMask_0_r = _RANDOM[8'h3E][29];
        tables_1_io_update_us_0_r = _RANDOM[8'h3E][30];
        tables_2_io_update_reset_u_0_REG = _RANDOM[8'h48][8];
        tables_2_io_update_mask_0_REG = _RANDOM[8'h48][9];
        tables_2_io_update_takens_0_r = _RANDOM[8'h48][10];
        tables_2_io_update_alloc_0_r = _RANDOM[8'h48][11];
        tables_2_io_update_oldCtrs_0_r = _RANDOM[8'h48][14:12];
        tables_2_io_update_uMask_0_r = _RANDOM[8'h48][15];
        tables_2_io_update_us_0_r = _RANDOM[8'h48][16];
        tables_3_io_update_reset_u_0_REG = _RANDOM[8'h51][26];
        tables_3_io_update_mask_0_REG = _RANDOM[8'h51][27];
        tables_3_io_update_takens_0_r = _RANDOM[8'h51][28];
        tables_3_io_update_alloc_0_r = _RANDOM[8'h51][29];
        tables_3_io_update_oldCtrs_0_r = {_RANDOM[8'h51][31:30], _RANDOM[8'h52][0]};
        tables_3_io_update_uMask_0_r = _RANDOM[8'h52][1];
        tables_3_io_update_us_0_r = _RANDOM[8'h52][2];
        tables_0_io_update_reset_u_1_REG = _RANDOM[8'h5B][12];
        tables_0_io_update_mask_1_REG = _RANDOM[8'h5B][13];
        tables_0_io_update_takens_1_r = _RANDOM[8'h5B][14];
        tables_0_io_update_alloc_1_r = _RANDOM[8'h5B][15];
        tables_0_io_update_oldCtrs_1_r = _RANDOM[8'h5B][18:16];
        tables_0_io_update_uMask_1_r = _RANDOM[8'h5B][19];
        tables_0_io_update_us_1_r = _RANDOM[8'h5B][20];
        tables_0_io_update_pc_r_1 = {_RANDOM[8'h5B][31:21], _RANDOM[8'h5C][29:0]};
        tables_0_io_update_ghist_r_1 =
          {_RANDOM[8'h5C][31:30],
           _RANDOM[8'h5D],
           _RANDOM[8'h5E],
           _RANDOM[8'h5F],
           _RANDOM[8'h60],
           _RANDOM[8'h61],
           _RANDOM[8'h62],
           _RANDOM[8'h63],
           _RANDOM[8'h64][29:0]};
        tables_1_io_update_reset_u_1_REG = _RANDOM[8'h64][30];
        tables_1_io_update_mask_1_REG = _RANDOM[8'h64][31];
        tables_1_io_update_takens_1_r = _RANDOM[8'h65][0];
        tables_1_io_update_alloc_1_r = _RANDOM[8'h65][1];
        tables_1_io_update_oldCtrs_1_r = _RANDOM[8'h65][4:2];
        tables_1_io_update_uMask_1_r = _RANDOM[8'h65][5];
        tables_1_io_update_us_1_r = _RANDOM[8'h65][6];
        tables_1_io_update_pc_r_1 = {_RANDOM[8'h65][31:7], _RANDOM[8'h66][15:0]};
        tables_1_io_update_ghist_r_1 =
          {_RANDOM[8'h66][31:16],
           _RANDOM[8'h67],
           _RANDOM[8'h68],
           _RANDOM[8'h69],
           _RANDOM[8'h6A],
           _RANDOM[8'h6B],
           _RANDOM[8'h6C],
           _RANDOM[8'h6D],
           _RANDOM[8'h6E][15:0]};
        tables_2_io_update_reset_u_1_REG = _RANDOM[8'h6E][16];
        tables_2_io_update_mask_1_REG = _RANDOM[8'h6E][17];
        tables_2_io_update_takens_1_r = _RANDOM[8'h6E][18];
        tables_2_io_update_alloc_1_r = _RANDOM[8'h6E][19];
        tables_2_io_update_oldCtrs_1_r = _RANDOM[8'h6E][22:20];
        tables_2_io_update_uMask_1_r = _RANDOM[8'h6E][23];
        tables_2_io_update_us_1_r = _RANDOM[8'h6E][24];
        tables_2_io_update_pc_r_1 =
          {_RANDOM[8'h6E][31:25], _RANDOM[8'h6F], _RANDOM[8'h70][1:0]};
        tables_2_io_update_ghist_r_1 =
          {_RANDOM[8'h70][31:2],
           _RANDOM[8'h71],
           _RANDOM[8'h72],
           _RANDOM[8'h73],
           _RANDOM[8'h74],
           _RANDOM[8'h75],
           _RANDOM[8'h76],
           _RANDOM[8'h77],
           _RANDOM[8'h78][1:0]};
        tables_3_io_update_reset_u_1_REG = _RANDOM[8'h78][2];
        tables_3_io_update_mask_1_REG = _RANDOM[8'h78][3];
        tables_3_io_update_takens_1_r = _RANDOM[8'h78][4];
        tables_3_io_update_alloc_1_r = _RANDOM[8'h78][5];
        tables_3_io_update_oldCtrs_1_r = _RANDOM[8'h78][8:6];
        tables_3_io_update_uMask_1_r = _RANDOM[8'h78][9];
        tables_3_io_update_us_1_r = _RANDOM[8'h78][10];
        tables_3_io_update_pc_r_1 = {_RANDOM[8'h78][31:11], _RANDOM[8'h79][19:0]};
        tables_3_io_update_ghist_r_1 =
          {_RANDOM[8'h79][31:20],
           _RANDOM[8'h7A],
           _RANDOM[8'h7B],
           _RANDOM[8'h7C],
           _RANDOM[8'h7D],
           _RANDOM[8'h7E],
           _RANDOM[8'h7F],
           _RANDOM[8'h80],
           _RANDOM[8'h81][19:0]};
        REG_2_0 = _RANDOM[8'h81][20];
        REG_2_1 = _RANDOM[8'h81][21];
        r_0 = _RANDOM[8'h81][23:22];
        r_1 = _RANDOM[8'h81][25:24];
        bt_io_update_pc_r = {_RANDOM[8'h81][31:26], _RANDOM[8'h82], _RANDOM[8'h83][2:0]};
        r_1_0 = _RANDOM[8'h83][3];
        r_1_1 = _RANDOM[8'h83][4];
        scThresholds_0_ctr = _RANDOM[8'h84][25:21];
        scThresholds_0_thres = {_RANDOM[8'h84][31:26], _RANDOM[8'h85][1:0]};
        scThresholds_1_ctr = _RANDOM[8'h85][6:2];
        scThresholds_1_thres = _RANDOM[8'h85][14:7];
        s2_scTableSums_0 = _RANDOM[8'h85][23:15];
        s2_scTableSums_1 = {_RANDOM[8'h85][31:24], _RANDOM[8'h86][0]};
        s2_tagePrvdCtrCentered_r = _RANDOM[8'h86][3:1];
        s2_scResps_r_0_ctrs_0_0 = _RANDOM[8'h86][9:4];
        s2_scResps_r_0_ctrs_0_1 = _RANDOM[8'h86][15:10];
        s2_scResps_r_1_ctrs_0_0 = {_RANDOM[8'h86][31:28], _RANDOM[8'h87][1:0]};
        s2_scResps_r_1_ctrs_0_1 = _RANDOM[8'h87][7:2];
        s2_scResps_r_2_ctrs_0_0 = _RANDOM[8'h87][25:20];
        s2_scResps_r_2_ctrs_0_1 = _RANDOM[8'h87][31:26];
        s2_scResps_r_3_ctrs_0_0 = _RANDOM[8'h88][17:12];
        s2_scResps_r_3_ctrs_0_1 = _RANDOM[8'h88][23:18];
        resp_meta_scMeta_scPreds_0_r = _RANDOM[8'h89][6];
        r_2_0 = _RANDOM[8'h89][12:7];
        r_2_1 = _RANDOM[8'h89][18:13];
        r_2_2 = _RANDOM[8'h89][24:19];
        r_2_3 = _RANDOM[8'h89][30:25];
        s3_pred_dup_0 = _RANDOM[8'h89][31];
        s3_pred_dup_1 = _RANDOM[8'h8A][0];
        s3_pred_dup_2 = _RANDOM[8'h8A][1];
        s3_pred_dup_3 = _RANDOM[8'h8A][2];
        sc_enable_dup_REG = _RANDOM[8'h8A][3];
        s2_scTableSums_1_0 = _RANDOM[8'h8A][12:4];
        s2_scTableSums_1_1 = _RANDOM[8'h8A][21:13];
        s2_tagePrvdCtrCentered_r_1 = _RANDOM[8'h8A][24:22];
        s2_scResps_r_1_0_ctrs_1_0 = _RANDOM[8'h8B][10:5];
        s2_scResps_r_1_0_ctrs_1_1 = _RANDOM[8'h8B][16:11];
        s2_scResps_r_1_1_ctrs_1_0 = {_RANDOM[8'h8B][31:29], _RANDOM[8'h8C][2:0]};
        s2_scResps_r_1_1_ctrs_1_1 = _RANDOM[8'h8C][8:3];
        s2_scResps_r_1_2_ctrs_1_0 = _RANDOM[8'h8C][26:21];
        s2_scResps_r_1_2_ctrs_1_1 = {_RANDOM[8'h8C][31:27], _RANDOM[8'h8D][0]};
        s2_scResps_r_1_3_ctrs_1_0 = _RANDOM[8'h8D][18:13];
        s2_scResps_r_1_3_ctrs_1_1 = _RANDOM[8'h8D][24:19];
        resp_meta_scMeta_scPreds_1_r = _RANDOM[8'h8D][27];
        r_3_0 = {_RANDOM[8'h8D][31:28], _RANDOM[8'h8E][1:0]};
        r_3_1 = _RANDOM[8'h8E][7:2];
        r_3_2 = _RANDOM[8'h8E][13:8];
        r_3_3 = _RANDOM[8'h8E][19:14];
        s3_pred_dup_0_1 = _RANDOM[8'h8E][20];
        s3_pred_dup_1_1 = _RANDOM[8'h8E][21];
        s3_pred_dup_2_1 = _RANDOM[8'h8E][22];
        s3_pred_dup_3_1 = _RANDOM[8'h8E][23];
        sc_enable_dup_REG_1 = _RANDOM[8'h8E][24];
        scTables_0_io_update_mask_0_REG = _RANDOM[8'h8E][25];
        scTables_0_io_update_tagePreds_0_r = _RANDOM[8'h8E][26];
        scTables_0_io_update_takens_0_r = _RANDOM[8'h8E][27];
        scTables_0_io_update_oldCtrs_0_r = {_RANDOM[8'h8E][31:28], _RANDOM[8'h8F][1:0]};
        scTables_1_io_update_mask_0_REG = _RANDOM[8'h98][11];
        scTables_1_io_update_tagePreds_0_r = _RANDOM[8'h98][12];
        scTables_1_io_update_takens_0_r = _RANDOM[8'h98][13];
        scTables_1_io_update_oldCtrs_0_r = _RANDOM[8'h98][19:14];
        scTables_2_io_update_mask_0_REG = _RANDOM[8'hA1][29];
        scTables_2_io_update_tagePreds_0_r = _RANDOM[8'hA1][30];
        scTables_2_io_update_takens_0_r = _RANDOM[8'hA1][31];
        scTables_2_io_update_oldCtrs_0_r = _RANDOM[8'hA2][5:0];
        scTables_3_io_update_mask_0_REG = _RANDOM[8'hAB][15];
        scTables_3_io_update_tagePreds_0_r = _RANDOM[8'hAB][16];
        scTables_3_io_update_takens_0_r = _RANDOM[8'hAB][17];
        scTables_3_io_update_oldCtrs_0_r = _RANDOM[8'hAB][23:18];
        scTables_0_io_update_mask_1_REG = _RANDOM[8'hB5][1];
        scTables_0_io_update_tagePreds_1_r = _RANDOM[8'hB5][2];
        scTables_0_io_update_takens_1_r = _RANDOM[8'hB5][3];
        scTables_0_io_update_oldCtrs_1_r = _RANDOM[8'hB5][9:4];
        scTables_0_io_update_pc_r_1 = {_RANDOM[8'hB5][31:10], _RANDOM[8'hB6][18:0]};
        scTables_1_io_update_mask_1_REG = _RANDOM[8'hBE][19];
        scTables_1_io_update_tagePreds_1_r = _RANDOM[8'hBE][20];
        scTables_1_io_update_takens_1_r = _RANDOM[8'hBE][21];
        scTables_1_io_update_oldCtrs_1_r = _RANDOM[8'hBE][27:22];
        scTables_1_io_update_pc_r_1 =
          {_RANDOM[8'hBE][31:28], _RANDOM[8'hBF], _RANDOM[8'hC0][4:0]};
        scTables_1_io_update_ghist_r_1 =
          {_RANDOM[8'hC0][31:5],
           _RANDOM[8'hC1],
           _RANDOM[8'hC2],
           _RANDOM[8'hC3],
           _RANDOM[8'hC4],
           _RANDOM[8'hC5],
           _RANDOM[8'hC6],
           _RANDOM[8'hC7],
           _RANDOM[8'hC8][4:0]};
        scTables_2_io_update_mask_1_REG = _RANDOM[8'hC8][5];
        scTables_2_io_update_tagePreds_1_r = _RANDOM[8'hC8][6];
        scTables_2_io_update_takens_1_r = _RANDOM[8'hC8][7];
        scTables_2_io_update_oldCtrs_1_r = _RANDOM[8'hC8][13:8];
        scTables_2_io_update_pc_r_1 = {_RANDOM[8'hC8][31:14], _RANDOM[8'hC9][22:0]};
        scTables_2_io_update_ghist_r_1 =
          {_RANDOM[8'hC9][31:23],
           _RANDOM[8'hCA],
           _RANDOM[8'hCB],
           _RANDOM[8'hCC],
           _RANDOM[8'hCD],
           _RANDOM[8'hCE],
           _RANDOM[8'hCF],
           _RANDOM[8'hD0],
           _RANDOM[8'hD1][22:0]};
        scTables_3_io_update_mask_1_REG = _RANDOM[8'hD1][23];
        scTables_3_io_update_tagePreds_1_r = _RANDOM[8'hD1][24];
        scTables_3_io_update_takens_1_r = _RANDOM[8'hD1][25];
        scTables_3_io_update_oldCtrs_1_r = _RANDOM[8'hD1][31:26];
        scTables_3_io_update_pc_r_1 = {_RANDOM[8'hD2], _RANDOM[8'hD3][8:0]};
        scTables_3_io_update_ghist_r_1 =
          {_RANDOM[8'hD3][31:9],
           _RANDOM[8'hD4],
           _RANDOM[8'hD5],
           _RANDOM[8'hD6],
           _RANDOM[8'hD7],
           _RANDOM[8'hD8],
           _RANDOM[8'hD9],
           _RANDOM[8'hDA],
           _RANDOM[8'hDB][8:0]};
        io_perf_0_value_REG = _RANDOM[8'hDB][10:9];
        io_perf_0_value_REG_1 = _RANDOM[8'hDB][12:11];
        io_perf_1_value_REG = _RANDOM[8'hDB][14:13];
        io_perf_1_value_REG_1 = _RANDOM[8'hDB][16:15];
        io_perf_2_value_REG = _RANDOM[8'hDB][18:17];
        io_perf_2_value_REG_1 = _RANDOM[8'hDB][20:19];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        s2_pc_seg_0_value = 17'h0;
        s2_pc_seg_1_value = 12'h0;
        s2_pc_seg_2_value = 12'h0;
        s2_pc_seg_0_value_1 = 17'h0;
        s2_pc_seg_1_value_1 = 12'h0;
        s2_pc_seg_2_value_1 = 12'h0;
        s2_pc_seg_0_value_2 = 17'h0;
        s2_pc_seg_1_value_2 = 12'h0;
        s2_pc_seg_2_value_2 = 12'h0;
        s2_pc_seg_0_value_3 = 17'h0;
        s2_pc_seg_1_value_3 = 12'h0;
        s2_pc_seg_2_value_3 = 12'h0;
        s3_pc_seg_0_value = 17'h0;
        s3_pc_seg_1_value = 12'h0;
        s3_pc_seg_2_value = 12'h0;
        s3_pc_seg_0_value_1 = 17'h0;
        s3_pc_seg_1_value_1 = 12'h0;
        s3_pc_seg_2_value_1 = 12'h0;
        s3_pc_seg_0_value_2 = 17'h0;
        s3_pc_seg_1_value_2 = 12'h0;
        s3_pc_seg_2_value_2 = 12'h0;
        s3_pc_seg_0_value_3 = 17'h0;
        s3_pc_seg_1_value_3 = 12'h0;
        s3_pc_seg_2_value_3 = 12'h0;
        bankTickCtrDistanceToTops_0 = 7'h7F;
        bankTickCtrDistanceToTops_1 = 7'h7F;
        bankTickCtrs_0 = 7'h0;
        bankTickCtrs_1 = 7'h0;
        useAltOnNaCtrs_0_0 = 4'h8;
        useAltOnNaCtrs_0_1 = 4'h8;
        useAltOnNaCtrs_0_2 = 4'h8;
        useAltOnNaCtrs_0_3 = 4'h8;
        useAltOnNaCtrs_0_4 = 4'h8;
        useAltOnNaCtrs_0_5 = 4'h8;
        useAltOnNaCtrs_0_6 = 4'h8;
        useAltOnNaCtrs_0_7 = 4'h8;
        useAltOnNaCtrs_0_8 = 4'h8;
        useAltOnNaCtrs_0_9 = 4'h8;
        useAltOnNaCtrs_0_10 = 4'h8;
        useAltOnNaCtrs_0_11 = 4'h8;
        useAltOnNaCtrs_0_12 = 4'h8;
        useAltOnNaCtrs_0_13 = 4'h8;
        useAltOnNaCtrs_0_14 = 4'h8;
        useAltOnNaCtrs_0_15 = 4'h8;
        useAltOnNaCtrs_0_16 = 4'h8;
        useAltOnNaCtrs_0_17 = 4'h8;
        useAltOnNaCtrs_0_18 = 4'h8;
        useAltOnNaCtrs_0_19 = 4'h8;
        useAltOnNaCtrs_0_20 = 4'h8;
        useAltOnNaCtrs_0_21 = 4'h8;
        useAltOnNaCtrs_0_22 = 4'h8;
        useAltOnNaCtrs_0_23 = 4'h8;
        useAltOnNaCtrs_0_24 = 4'h8;
        useAltOnNaCtrs_0_25 = 4'h8;
        useAltOnNaCtrs_0_26 = 4'h8;
        useAltOnNaCtrs_0_27 = 4'h8;
        useAltOnNaCtrs_0_28 = 4'h8;
        useAltOnNaCtrs_0_29 = 4'h8;
        useAltOnNaCtrs_0_30 = 4'h8;
        useAltOnNaCtrs_0_31 = 4'h8;
        useAltOnNaCtrs_0_32 = 4'h8;
        useAltOnNaCtrs_0_33 = 4'h8;
        useAltOnNaCtrs_0_34 = 4'h8;
        useAltOnNaCtrs_0_35 = 4'h8;
        useAltOnNaCtrs_0_36 = 4'h8;
        useAltOnNaCtrs_0_37 = 4'h8;
        useAltOnNaCtrs_0_38 = 4'h8;
        useAltOnNaCtrs_0_39 = 4'h8;
        useAltOnNaCtrs_0_40 = 4'h8;
        useAltOnNaCtrs_0_41 = 4'h8;
        useAltOnNaCtrs_0_42 = 4'h8;
        useAltOnNaCtrs_0_43 = 4'h8;
        useAltOnNaCtrs_0_44 = 4'h8;
        useAltOnNaCtrs_0_45 = 4'h8;
        useAltOnNaCtrs_0_46 = 4'h8;
        useAltOnNaCtrs_0_47 = 4'h8;
        useAltOnNaCtrs_0_48 = 4'h8;
        useAltOnNaCtrs_0_49 = 4'h8;
        useAltOnNaCtrs_0_50 = 4'h8;
        useAltOnNaCtrs_0_51 = 4'h8;
        useAltOnNaCtrs_0_52 = 4'h8;
        useAltOnNaCtrs_0_53 = 4'h8;
        useAltOnNaCtrs_0_54 = 4'h8;
        useAltOnNaCtrs_0_55 = 4'h8;
        useAltOnNaCtrs_0_56 = 4'h8;
        useAltOnNaCtrs_0_57 = 4'h8;
        useAltOnNaCtrs_0_58 = 4'h8;
        useAltOnNaCtrs_0_59 = 4'h8;
        useAltOnNaCtrs_0_60 = 4'h8;
        useAltOnNaCtrs_0_61 = 4'h8;
        useAltOnNaCtrs_0_62 = 4'h8;
        useAltOnNaCtrs_0_63 = 4'h8;
        useAltOnNaCtrs_0_64 = 4'h8;
        useAltOnNaCtrs_0_65 = 4'h8;
        useAltOnNaCtrs_0_66 = 4'h8;
        useAltOnNaCtrs_0_67 = 4'h8;
        useAltOnNaCtrs_0_68 = 4'h8;
        useAltOnNaCtrs_0_69 = 4'h8;
        useAltOnNaCtrs_0_70 = 4'h8;
        useAltOnNaCtrs_0_71 = 4'h8;
        useAltOnNaCtrs_0_72 = 4'h8;
        useAltOnNaCtrs_0_73 = 4'h8;
        useAltOnNaCtrs_0_74 = 4'h8;
        useAltOnNaCtrs_0_75 = 4'h8;
        useAltOnNaCtrs_0_76 = 4'h8;
        useAltOnNaCtrs_0_77 = 4'h8;
        useAltOnNaCtrs_0_78 = 4'h8;
        useAltOnNaCtrs_0_79 = 4'h8;
        useAltOnNaCtrs_0_80 = 4'h8;
        useAltOnNaCtrs_0_81 = 4'h8;
        useAltOnNaCtrs_0_82 = 4'h8;
        useAltOnNaCtrs_0_83 = 4'h8;
        useAltOnNaCtrs_0_84 = 4'h8;
        useAltOnNaCtrs_0_85 = 4'h8;
        useAltOnNaCtrs_0_86 = 4'h8;
        useAltOnNaCtrs_0_87 = 4'h8;
        useAltOnNaCtrs_0_88 = 4'h8;
        useAltOnNaCtrs_0_89 = 4'h8;
        useAltOnNaCtrs_0_90 = 4'h8;
        useAltOnNaCtrs_0_91 = 4'h8;
        useAltOnNaCtrs_0_92 = 4'h8;
        useAltOnNaCtrs_0_93 = 4'h8;
        useAltOnNaCtrs_0_94 = 4'h8;
        useAltOnNaCtrs_0_95 = 4'h8;
        useAltOnNaCtrs_0_96 = 4'h8;
        useAltOnNaCtrs_0_97 = 4'h8;
        useAltOnNaCtrs_0_98 = 4'h8;
        useAltOnNaCtrs_0_99 = 4'h8;
        useAltOnNaCtrs_0_100 = 4'h8;
        useAltOnNaCtrs_0_101 = 4'h8;
        useAltOnNaCtrs_0_102 = 4'h8;
        useAltOnNaCtrs_0_103 = 4'h8;
        useAltOnNaCtrs_0_104 = 4'h8;
        useAltOnNaCtrs_0_105 = 4'h8;
        useAltOnNaCtrs_0_106 = 4'h8;
        useAltOnNaCtrs_0_107 = 4'h8;
        useAltOnNaCtrs_0_108 = 4'h8;
        useAltOnNaCtrs_0_109 = 4'h8;
        useAltOnNaCtrs_0_110 = 4'h8;
        useAltOnNaCtrs_0_111 = 4'h8;
        useAltOnNaCtrs_0_112 = 4'h8;
        useAltOnNaCtrs_0_113 = 4'h8;
        useAltOnNaCtrs_0_114 = 4'h8;
        useAltOnNaCtrs_0_115 = 4'h8;
        useAltOnNaCtrs_0_116 = 4'h8;
        useAltOnNaCtrs_0_117 = 4'h8;
        useAltOnNaCtrs_0_118 = 4'h8;
        useAltOnNaCtrs_0_119 = 4'h8;
        useAltOnNaCtrs_0_120 = 4'h8;
        useAltOnNaCtrs_0_121 = 4'h8;
        useAltOnNaCtrs_0_122 = 4'h8;
        useAltOnNaCtrs_0_123 = 4'h8;
        useAltOnNaCtrs_0_124 = 4'h8;
        useAltOnNaCtrs_0_125 = 4'h8;
        useAltOnNaCtrs_0_126 = 4'h8;
        useAltOnNaCtrs_0_127 = 4'h8;
        useAltOnNaCtrs_1_0 = 4'h8;
        useAltOnNaCtrs_1_1 = 4'h8;
        useAltOnNaCtrs_1_2 = 4'h8;
        useAltOnNaCtrs_1_3 = 4'h8;
        useAltOnNaCtrs_1_4 = 4'h8;
        useAltOnNaCtrs_1_5 = 4'h8;
        useAltOnNaCtrs_1_6 = 4'h8;
        useAltOnNaCtrs_1_7 = 4'h8;
        useAltOnNaCtrs_1_8 = 4'h8;
        useAltOnNaCtrs_1_9 = 4'h8;
        useAltOnNaCtrs_1_10 = 4'h8;
        useAltOnNaCtrs_1_11 = 4'h8;
        useAltOnNaCtrs_1_12 = 4'h8;
        useAltOnNaCtrs_1_13 = 4'h8;
        useAltOnNaCtrs_1_14 = 4'h8;
        useAltOnNaCtrs_1_15 = 4'h8;
        useAltOnNaCtrs_1_16 = 4'h8;
        useAltOnNaCtrs_1_17 = 4'h8;
        useAltOnNaCtrs_1_18 = 4'h8;
        useAltOnNaCtrs_1_19 = 4'h8;
        useAltOnNaCtrs_1_20 = 4'h8;
        useAltOnNaCtrs_1_21 = 4'h8;
        useAltOnNaCtrs_1_22 = 4'h8;
        useAltOnNaCtrs_1_23 = 4'h8;
        useAltOnNaCtrs_1_24 = 4'h8;
        useAltOnNaCtrs_1_25 = 4'h8;
        useAltOnNaCtrs_1_26 = 4'h8;
        useAltOnNaCtrs_1_27 = 4'h8;
        useAltOnNaCtrs_1_28 = 4'h8;
        useAltOnNaCtrs_1_29 = 4'h8;
        useAltOnNaCtrs_1_30 = 4'h8;
        useAltOnNaCtrs_1_31 = 4'h8;
        useAltOnNaCtrs_1_32 = 4'h8;
        useAltOnNaCtrs_1_33 = 4'h8;
        useAltOnNaCtrs_1_34 = 4'h8;
        useAltOnNaCtrs_1_35 = 4'h8;
        useAltOnNaCtrs_1_36 = 4'h8;
        useAltOnNaCtrs_1_37 = 4'h8;
        useAltOnNaCtrs_1_38 = 4'h8;
        useAltOnNaCtrs_1_39 = 4'h8;
        useAltOnNaCtrs_1_40 = 4'h8;
        useAltOnNaCtrs_1_41 = 4'h8;
        useAltOnNaCtrs_1_42 = 4'h8;
        useAltOnNaCtrs_1_43 = 4'h8;
        useAltOnNaCtrs_1_44 = 4'h8;
        useAltOnNaCtrs_1_45 = 4'h8;
        useAltOnNaCtrs_1_46 = 4'h8;
        useAltOnNaCtrs_1_47 = 4'h8;
        useAltOnNaCtrs_1_48 = 4'h8;
        useAltOnNaCtrs_1_49 = 4'h8;
        useAltOnNaCtrs_1_50 = 4'h8;
        useAltOnNaCtrs_1_51 = 4'h8;
        useAltOnNaCtrs_1_52 = 4'h8;
        useAltOnNaCtrs_1_53 = 4'h8;
        useAltOnNaCtrs_1_54 = 4'h8;
        useAltOnNaCtrs_1_55 = 4'h8;
        useAltOnNaCtrs_1_56 = 4'h8;
        useAltOnNaCtrs_1_57 = 4'h8;
        useAltOnNaCtrs_1_58 = 4'h8;
        useAltOnNaCtrs_1_59 = 4'h8;
        useAltOnNaCtrs_1_60 = 4'h8;
        useAltOnNaCtrs_1_61 = 4'h8;
        useAltOnNaCtrs_1_62 = 4'h8;
        useAltOnNaCtrs_1_63 = 4'h8;
        useAltOnNaCtrs_1_64 = 4'h8;
        useAltOnNaCtrs_1_65 = 4'h8;
        useAltOnNaCtrs_1_66 = 4'h8;
        useAltOnNaCtrs_1_67 = 4'h8;
        useAltOnNaCtrs_1_68 = 4'h8;
        useAltOnNaCtrs_1_69 = 4'h8;
        useAltOnNaCtrs_1_70 = 4'h8;
        useAltOnNaCtrs_1_71 = 4'h8;
        useAltOnNaCtrs_1_72 = 4'h8;
        useAltOnNaCtrs_1_73 = 4'h8;
        useAltOnNaCtrs_1_74 = 4'h8;
        useAltOnNaCtrs_1_75 = 4'h8;
        useAltOnNaCtrs_1_76 = 4'h8;
        useAltOnNaCtrs_1_77 = 4'h8;
        useAltOnNaCtrs_1_78 = 4'h8;
        useAltOnNaCtrs_1_79 = 4'h8;
        useAltOnNaCtrs_1_80 = 4'h8;
        useAltOnNaCtrs_1_81 = 4'h8;
        useAltOnNaCtrs_1_82 = 4'h8;
        useAltOnNaCtrs_1_83 = 4'h8;
        useAltOnNaCtrs_1_84 = 4'h8;
        useAltOnNaCtrs_1_85 = 4'h8;
        useAltOnNaCtrs_1_86 = 4'h8;
        useAltOnNaCtrs_1_87 = 4'h8;
        useAltOnNaCtrs_1_88 = 4'h8;
        useAltOnNaCtrs_1_89 = 4'h8;
        useAltOnNaCtrs_1_90 = 4'h8;
        useAltOnNaCtrs_1_91 = 4'h8;
        useAltOnNaCtrs_1_92 = 4'h8;
        useAltOnNaCtrs_1_93 = 4'h8;
        useAltOnNaCtrs_1_94 = 4'h8;
        useAltOnNaCtrs_1_95 = 4'h8;
        useAltOnNaCtrs_1_96 = 4'h8;
        useAltOnNaCtrs_1_97 = 4'h8;
        useAltOnNaCtrs_1_98 = 4'h8;
        useAltOnNaCtrs_1_99 = 4'h8;
        useAltOnNaCtrs_1_100 = 4'h8;
        useAltOnNaCtrs_1_101 = 4'h8;
        useAltOnNaCtrs_1_102 = 4'h8;
        useAltOnNaCtrs_1_103 = 4'h8;
        useAltOnNaCtrs_1_104 = 4'h8;
        useAltOnNaCtrs_1_105 = 4'h8;
        useAltOnNaCtrs_1_106 = 4'h8;
        useAltOnNaCtrs_1_107 = 4'h8;
        useAltOnNaCtrs_1_108 = 4'h8;
        useAltOnNaCtrs_1_109 = 4'h8;
        useAltOnNaCtrs_1_110 = 4'h8;
        useAltOnNaCtrs_1_111 = 4'h8;
        useAltOnNaCtrs_1_112 = 4'h8;
        useAltOnNaCtrs_1_113 = 4'h8;
        useAltOnNaCtrs_1_114 = 4'h8;
        useAltOnNaCtrs_1_115 = 4'h8;
        useAltOnNaCtrs_1_116 = 4'h8;
        useAltOnNaCtrs_1_117 = 4'h8;
        useAltOnNaCtrs_1_118 = 4'h8;
        useAltOnNaCtrs_1_119 = 4'h8;
        useAltOnNaCtrs_1_120 = 4'h8;
        useAltOnNaCtrs_1_121 = 4'h8;
        useAltOnNaCtrs_1_122 = 4'h8;
        useAltOnNaCtrs_1_123 = 4'h8;
        useAltOnNaCtrs_1_124 = 4'h8;
        useAltOnNaCtrs_1_125 = 4'h8;
        useAltOnNaCtrs_1_126 = 4'h8;
        useAltOnNaCtrs_1_127 = 4'h8;
        scThresholds_0_ctr = 5'h10;
        scThresholds_0_thres = 8'h6;
        scThresholds_1_ctr = 5'h10;
        scThresholds_1_thres = 8'h6;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DelayNWithValid reset_vector_pipMod (
    .clock       (clock),
    .io_in_bits  (io_reset_vector),
    .io_in_valid (reset),
    .io_out_bits (_reset_vector_pipMod_io_out_bits)
  );
  TageTable tables_0 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_ready                                (_tables_0_io_req_ready),
    .io_req_valid                                (io_s0_fire_1),
    .io_req_bits_pc                              (io_in_bits_s0_pc_1),
    .io_req_bits_folded_hist_hist_14_folded_hist
      (io_in_bits_folded_hist_1_hist_14_folded_hist),
    .io_req_bits_folded_hist_hist_7_folded_hist
      (io_in_bits_folded_hist_1_hist_7_folded_hist),
    .io_resps_0_valid                            (_tables_0_io_resps_0_valid),
    .io_resps_0_bits_ctr                         (_tables_0_io_resps_0_bits_ctr),
    .io_resps_0_bits_u                           (_tables_0_io_resps_0_bits_u),
    .io_resps_0_bits_unconf                      (_tables_0_io_resps_0_bits_unconf),
    .io_resps_1_valid                            (_tables_0_io_resps_1_valid),
    .io_resps_1_bits_ctr                         (_tables_0_io_resps_1_bits_ctr),
    .io_resps_1_bits_u                           (_tables_0_io_resps_1_bits_u),
    .io_resps_1_bits_unconf                      (_tables_0_io_resps_1_bits_unconf),
    .io_update_pc                                (tables_0_io_update_pc_r_1),
    .io_update_ghist                             (tables_0_io_update_ghist_r_1),
    .io_update_mask_0                            (tables_0_io_update_mask_0_REG),
    .io_update_mask_1                            (tables_0_io_update_mask_1_REG),
    .io_update_takens_0                          (tables_0_io_update_takens_0_r),
    .io_update_takens_1                          (tables_0_io_update_takens_1_r),
    .io_update_alloc_0                           (tables_0_io_update_alloc_0_r),
    .io_update_alloc_1                           (tables_0_io_update_alloc_1_r),
    .io_update_oldCtrs_0                         (tables_0_io_update_oldCtrs_0_r),
    .io_update_oldCtrs_1                         (tables_0_io_update_oldCtrs_1_r),
    .io_update_uMask_0                           (tables_0_io_update_uMask_0_r),
    .io_update_uMask_1                           (tables_0_io_update_uMask_1_r),
    .io_update_us_0                              (tables_0_io_update_us_0_r),
    .io_update_us_1                              (tables_0_io_update_us_1_r),
    .io_update_reset_u_0                         (tables_0_io_update_reset_u_0_REG),
    .io_update_reset_u_1                         (tables_0_io_update_reset_u_1_REG)
  );
  TageTable_1 tables_1 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_ready                                (_tables_1_io_req_ready),
    .io_req_valid                                (io_s0_fire_1),
    .io_req_bits_pc                              (io_in_bits_s0_pc_1),
    .io_req_bits_folded_hist_hist_15_folded_hist
      (io_in_bits_folded_hist_1_hist_15_folded_hist),
    .io_req_bits_folded_hist_hist_4_folded_hist
      (io_in_bits_folded_hist_1_hist_4_folded_hist),
    .io_req_bits_folded_hist_hist_1_folded_hist
      (io_in_bits_folded_hist_1_hist_1_folded_hist),
    .io_resps_0_valid                            (_tables_1_io_resps_0_valid),
    .io_resps_0_bits_ctr                         (_tables_1_io_resps_0_bits_ctr),
    .io_resps_0_bits_u                           (_tables_1_io_resps_0_bits_u),
    .io_resps_0_bits_unconf                      (_tables_1_io_resps_0_bits_unconf),
    .io_resps_1_valid                            (_tables_1_io_resps_1_valid),
    .io_resps_1_bits_ctr                         (_tables_1_io_resps_1_bits_ctr),
    .io_resps_1_bits_u                           (_tables_1_io_resps_1_bits_u),
    .io_resps_1_bits_unconf                      (_tables_1_io_resps_1_bits_unconf),
    .io_update_pc                                (tables_1_io_update_pc_r_1),
    .io_update_ghist                             (tables_1_io_update_ghist_r_1),
    .io_update_mask_0                            (tables_1_io_update_mask_0_REG),
    .io_update_mask_1                            (tables_1_io_update_mask_1_REG),
    .io_update_takens_0                          (tables_1_io_update_takens_0_r),
    .io_update_takens_1                          (tables_1_io_update_takens_1_r),
    .io_update_alloc_0                           (tables_1_io_update_alloc_0_r),
    .io_update_alloc_1                           (tables_1_io_update_alloc_1_r),
    .io_update_oldCtrs_0                         (tables_1_io_update_oldCtrs_0_r),
    .io_update_oldCtrs_1                         (tables_1_io_update_oldCtrs_1_r),
    .io_update_uMask_0                           (tables_1_io_update_uMask_0_r),
    .io_update_uMask_1                           (tables_1_io_update_uMask_1_r),
    .io_update_us_0                              (tables_1_io_update_us_0_r),
    .io_update_us_1                              (tables_1_io_update_us_1_r),
    .io_update_reset_u_0                         (tables_1_io_update_reset_u_0_REG),
    .io_update_reset_u_1                         (tables_1_io_update_reset_u_1_REG)
  );
  TageTable_2 tables_2 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_ready                                (_tables_2_io_req_ready),
    .io_req_valid                                (io_s0_fire_1),
    .io_req_bits_pc                              (io_in_bits_s0_pc_1),
    .io_req_bits_folded_hist_hist_17_folded_hist
      (io_in_bits_folded_hist_1_hist_17_folded_hist),
    .io_req_bits_folded_hist_hist_9_folded_hist
      (io_in_bits_folded_hist_1_hist_9_folded_hist),
    .io_req_bits_folded_hist_hist_3_folded_hist
      (io_in_bits_folded_hist_1_hist_3_folded_hist),
    .io_resps_0_valid                            (_tables_2_io_resps_0_valid),
    .io_resps_0_bits_ctr                         (_tables_2_io_resps_0_bits_ctr),
    .io_resps_0_bits_u                           (_tables_2_io_resps_0_bits_u),
    .io_resps_0_bits_unconf                      (_tables_2_io_resps_0_bits_unconf),
    .io_resps_1_valid                            (_tables_2_io_resps_1_valid),
    .io_resps_1_bits_ctr                         (_tables_2_io_resps_1_bits_ctr),
    .io_resps_1_bits_u                           (_tables_2_io_resps_1_bits_u),
    .io_resps_1_bits_unconf                      (_tables_2_io_resps_1_bits_unconf),
    .io_update_pc                                (tables_2_io_update_pc_r_1),
    .io_update_ghist                             (tables_2_io_update_ghist_r_1),
    .io_update_mask_0                            (tables_2_io_update_mask_0_REG),
    .io_update_mask_1                            (tables_2_io_update_mask_1_REG),
    .io_update_takens_0                          (tables_2_io_update_takens_0_r),
    .io_update_takens_1                          (tables_2_io_update_takens_1_r),
    .io_update_alloc_0                           (tables_2_io_update_alloc_0_r),
    .io_update_alloc_1                           (tables_2_io_update_alloc_1_r),
    .io_update_oldCtrs_0                         (tables_2_io_update_oldCtrs_0_r),
    .io_update_oldCtrs_1                         (tables_2_io_update_oldCtrs_1_r),
    .io_update_uMask_0                           (tables_2_io_update_uMask_0_r),
    .io_update_uMask_1                           (tables_2_io_update_uMask_1_r),
    .io_update_us_0                              (tables_2_io_update_us_0_r),
    .io_update_us_1                              (tables_2_io_update_us_1_r),
    .io_update_reset_u_0                         (tables_2_io_update_reset_u_0_REG),
    .io_update_reset_u_1                         (tables_2_io_update_reset_u_1_REG)
  );
  TageTable_3 tables_3 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_ready                                (_tables_3_io_req_ready),
    .io_req_valid                                (io_s0_fire_1),
    .io_req_bits_pc                              (io_in_bits_s0_pc_1),
    .io_req_bits_folded_hist_hist_16_folded_hist
      (io_in_bits_folded_hist_1_hist_16_folded_hist),
    .io_req_bits_folded_hist_hist_8_folded_hist
      (io_in_bits_folded_hist_1_hist_8_folded_hist),
    .io_req_bits_folded_hist_hist_5_folded_hist
      (io_in_bits_folded_hist_1_hist_5_folded_hist),
    .io_resps_0_valid                            (_tables_3_io_resps_0_valid),
    .io_resps_0_bits_ctr                         (_tables_3_io_resps_0_bits_ctr),
    .io_resps_0_bits_u                           (_tables_3_io_resps_0_bits_u),
    .io_resps_0_bits_unconf                      (_tables_3_io_resps_0_bits_unconf),
    .io_resps_1_valid                            (_tables_3_io_resps_1_valid),
    .io_resps_1_bits_ctr                         (_tables_3_io_resps_1_bits_ctr),
    .io_resps_1_bits_u                           (_tables_3_io_resps_1_bits_u),
    .io_resps_1_bits_unconf                      (_tables_3_io_resps_1_bits_unconf),
    .io_update_pc                                (tables_3_io_update_pc_r_1),
    .io_update_ghist                             (tables_3_io_update_ghist_r_1),
    .io_update_mask_0                            (tables_3_io_update_mask_0_REG),
    .io_update_mask_1                            (tables_3_io_update_mask_1_REG),
    .io_update_takens_0                          (tables_3_io_update_takens_0_r),
    .io_update_takens_1                          (tables_3_io_update_takens_1_r),
    .io_update_alloc_0                           (tables_3_io_update_alloc_0_r),
    .io_update_alloc_1                           (tables_3_io_update_alloc_1_r),
    .io_update_oldCtrs_0                         (tables_3_io_update_oldCtrs_0_r),
    .io_update_oldCtrs_1                         (tables_3_io_update_oldCtrs_1_r),
    .io_update_uMask_0                           (tables_3_io_update_uMask_0_r),
    .io_update_uMask_1                           (tables_3_io_update_uMask_1_r),
    .io_update_us_0                              (tables_3_io_update_us_0_r),
    .io_update_us_1                              (tables_3_io_update_us_1_r),
    .io_update_reset_u_0                         (tables_3_io_update_reset_u_0_REG),
    .io_update_reset_u_1                         (tables_3_io_update_reset_u_1_REG)
  );
  TageBTable bt (
    .clock              (clock),
    .reset              (reset),
    .io_req_ready       (_bt_io_req_ready),
    .io_req_valid       (io_s0_fire_1),
    .io_req_bits        (io_in_bits_s0_pc_1),
    .io_s1_cnt_0        (_bt_io_s1_cnt_0),
    .io_s1_cnt_1        (_bt_io_s1_cnt_1),
    .io_update_mask_0   (REG_2_0),
    .io_update_mask_1   (REG_2_1),
    .io_update_pc       (bt_io_update_pc_r),
    .io_update_cnt_0    (r_0),
    .io_update_cnt_1    (r_1),
    .io_update_takens_0 (r_1_0),
    .io_update_takens_1 (r_1_1)
  );
  MaxPeriodFibonacciLFSR allocLFSR_prng (
    .clock     (clock),
    .reset     (reset),
    .io_out_0  (_allocLFSR_prng_io_out_0),
    .io_out_1  (_allocLFSR_prng_io_out_1),
    .io_out_2  (_allocLFSR_prng_io_out_2),
    .io_out_3  (/* unused */),
    .io_out_4  (/* unused */),
    .io_out_5  (/* unused */),
    .io_out_6  (/* unused */),
    .io_out_7  (/* unused */),
    .io_out_8  (/* unused */),
    .io_out_9  (/* unused */),
    .io_out_10 (/* unused */),
    .io_out_11 (/* unused */),
    .io_out_12 (/* unused */),
    .io_out_13 (/* unused */),
    .io_out_14 (/* unused */)
  );
  MaxPeriodFibonacciLFSR allocLFSR_prng_1 (
    .clock     (clock),
    .reset     (reset),
    .io_out_0  (_allocLFSR_prng_1_io_out_0),
    .io_out_1  (_allocLFSR_prng_1_io_out_1),
    .io_out_2  (_allocLFSR_prng_1_io_out_2),
    .io_out_3  (/* unused */),
    .io_out_4  (/* unused */),
    .io_out_5  (/* unused */),
    .io_out_6  (/* unused */),
    .io_out_7  (/* unused */),
    .io_out_8  (/* unused */),
    .io_out_9  (/* unused */),
    .io_out_10 (/* unused */),
    .io_out_11 (/* unused */),
    .io_out_12 (/* unused */),
    .io_out_13 (/* unused */),
    .io_out_14 (/* unused */)
  );
  SCTable scTables_0 (
    .clock                 (clock),
    .reset                 (reset),
    .io_req_valid          (io_s0_fire_3),
    .io_req_bits_pc        (io_in_bits_s0_pc_3),
    .io_resp_ctrs_0_0      (_scTables_0_io_resp_ctrs_0_0),
    .io_resp_ctrs_0_1      (_scTables_0_io_resp_ctrs_0_1),
    .io_resp_ctrs_1_0      (_scTables_0_io_resp_ctrs_1_0),
    .io_resp_ctrs_1_1      (_scTables_0_io_resp_ctrs_1_1),
    .io_update_pc          (scTables_0_io_update_pc_r_1),
    .io_update_mask_0      (scTables_0_io_update_mask_0_REG),
    .io_update_mask_1      (scTables_0_io_update_mask_1_REG),
    .io_update_oldCtrs_0   (scTables_0_io_update_oldCtrs_0_r),
    .io_update_oldCtrs_1   (scTables_0_io_update_oldCtrs_1_r),
    .io_update_tagePreds_0 (scTables_0_io_update_tagePreds_0_r),
    .io_update_tagePreds_1 (scTables_0_io_update_tagePreds_1_r),
    .io_update_takens_0    (scTables_0_io_update_takens_0_r),
    .io_update_takens_1    (scTables_0_io_update_takens_1_r)
  );
  SCTable_1 scTables_1 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_valid                                (io_s0_fire_3),
    .io_req_bits_pc                              (io_in_bits_s0_pc_3),
    .io_req_bits_folded_hist_hist_12_folded_hist
      (io_in_bits_folded_hist_3_hist_12_folded_hist),
    .io_resp_ctrs_0_0                            (_scTables_1_io_resp_ctrs_0_0),
    .io_resp_ctrs_0_1                            (_scTables_1_io_resp_ctrs_0_1),
    .io_resp_ctrs_1_0                            (_scTables_1_io_resp_ctrs_1_0),
    .io_resp_ctrs_1_1                            (_scTables_1_io_resp_ctrs_1_1),
    .io_update_pc                                (scTables_1_io_update_pc_r_1),
    .io_update_ghist                             (scTables_1_io_update_ghist_r_1),
    .io_update_mask_0                            (scTables_1_io_update_mask_0_REG),
    .io_update_mask_1                            (scTables_1_io_update_mask_1_REG),
    .io_update_oldCtrs_0                         (scTables_1_io_update_oldCtrs_0_r),
    .io_update_oldCtrs_1                         (scTables_1_io_update_oldCtrs_1_r),
    .io_update_tagePreds_0                       (scTables_1_io_update_tagePreds_0_r),
    .io_update_tagePreds_1                       (scTables_1_io_update_tagePreds_1_r),
    .io_update_takens_0                          (scTables_1_io_update_takens_0_r),
    .io_update_takens_1                          (scTables_1_io_update_takens_1_r)
  );
  SCTable_2 scTables_2 (
    .clock                                       (clock),
    .reset                                       (reset),
    .io_req_valid                                (io_s0_fire_3),
    .io_req_bits_pc                              (io_in_bits_s0_pc_3),
    .io_req_bits_folded_hist_hist_11_folded_hist
      (io_in_bits_folded_hist_3_hist_11_folded_hist),
    .io_resp_ctrs_0_0                            (_scTables_2_io_resp_ctrs_0_0),
    .io_resp_ctrs_0_1                            (_scTables_2_io_resp_ctrs_0_1),
    .io_resp_ctrs_1_0                            (_scTables_2_io_resp_ctrs_1_0),
    .io_resp_ctrs_1_1                            (_scTables_2_io_resp_ctrs_1_1),
    .io_update_pc                                (scTables_2_io_update_pc_r_1),
    .io_update_ghist                             (scTables_2_io_update_ghist_r_1),
    .io_update_mask_0                            (scTables_2_io_update_mask_0_REG),
    .io_update_mask_1                            (scTables_2_io_update_mask_1_REG),
    .io_update_oldCtrs_0                         (scTables_2_io_update_oldCtrs_0_r),
    .io_update_oldCtrs_1                         (scTables_2_io_update_oldCtrs_1_r),
    .io_update_tagePreds_0                       (scTables_2_io_update_tagePreds_0_r),
    .io_update_tagePreds_1                       (scTables_2_io_update_tagePreds_1_r),
    .io_update_takens_0                          (scTables_2_io_update_takens_0_r),
    .io_update_takens_1                          (scTables_2_io_update_takens_1_r)
  );
  SCTable_3 scTables_3 (
    .clock                                      (clock),
    .reset                                      (reset),
    .io_req_valid                               (io_s0_fire_3),
    .io_req_bits_pc                             (io_in_bits_s0_pc_3),
    .io_req_bits_folded_hist_hist_2_folded_hist
      (io_in_bits_folded_hist_3_hist_2_folded_hist),
    .io_resp_ctrs_0_0                           (_scTables_3_io_resp_ctrs_0_0),
    .io_resp_ctrs_0_1                           (_scTables_3_io_resp_ctrs_0_1),
    .io_resp_ctrs_1_0                           (_scTables_3_io_resp_ctrs_1_0),
    .io_resp_ctrs_1_1                           (_scTables_3_io_resp_ctrs_1_1),
    .io_update_pc                               (scTables_3_io_update_pc_r_1),
    .io_update_ghist                            (scTables_3_io_update_ghist_r_1),
    .io_update_mask_0                           (scTables_3_io_update_mask_0_REG),
    .io_update_mask_1                           (scTables_3_io_update_mask_1_REG),
    .io_update_oldCtrs_0                        (scTables_3_io_update_oldCtrs_0_r),
    .io_update_oldCtrs_1                        (scTables_3_io_update_oldCtrs_1_r),
    .io_update_tagePreds_0                      (scTables_3_io_update_tagePreds_0_r),
    .io_update_tagePreds_1                      (scTables_3_io_update_tagePreds_1_r),
    .io_update_takens_0                         (scTables_3_io_update_takens_0_r),
    .io_update_takens_1                         (scTables_3_io_update_takens_1_r)
  );
  assign io_out_s2_full_pred_0_br_taken_mask_0 =
    tage_enable_dup_REG & s2_tageTakens_dup_0_0;
  assign io_out_s2_full_pred_0_br_taken_mask_1 =
    tage_enable_dup_REG_1 & s2_tageTakens_dup_0_1;
  assign io_out_s2_full_pred_1_br_taken_mask_0 =
    tage_enable_dup_REG & s2_tageTakens_dup_1_0;
  assign io_out_s2_full_pred_1_br_taken_mask_1 =
    tage_enable_dup_REG_1 & s2_tageTakens_dup_1_1;
  assign io_out_s2_full_pred_2_br_taken_mask_0 =
    tage_enable_dup_REG & s2_tageTakens_dup_2_0;
  assign io_out_s2_full_pred_2_br_taken_mask_1 =
    tage_enable_dup_REG_1 & s2_tageTakens_dup_2_1;
  assign io_out_s2_full_pred_3_br_taken_mask_0 =
    tage_enable_dup_REG & s2_tageTakens_dup_3_0;
  assign io_out_s2_full_pred_3_br_taken_mask_1 =
    tage_enable_dup_REG_1 & s2_tageTakens_dup_3_1;
  assign io_out_s3_full_pred_0_br_taken_mask_0 = sc_enable_dup_REG & s3_pred_dup_0;
  assign io_out_s3_full_pred_0_br_taken_mask_1 = sc_enable_dup_REG_1 & s3_pred_dup_0_1;
  assign io_out_s3_full_pred_1_br_taken_mask_0 = sc_enable_dup_REG & s3_pred_dup_1;
  assign io_out_s3_full_pred_1_br_taken_mask_1 = sc_enable_dup_REG_1 & s3_pred_dup_1_1;
  assign io_out_s3_full_pred_2_br_taken_mask_0 = sc_enable_dup_REG & s3_pred_dup_2;
  assign io_out_s3_full_pred_2_br_taken_mask_1 = sc_enable_dup_REG_1 & s3_pred_dup_2_1;
  assign io_out_s3_full_pred_3_br_taken_mask_0 = sc_enable_dup_REG & s3_pred_dup_3;
  assign io_out_s3_full_pred_3_br_taken_mask_1 = sc_enable_dup_REG_1 & s3_pred_dup_3_1;
  assign io_out_last_stage_meta =
    {182'h0,
     resp_meta_providers_1_valid_r,
     resp_meta_providers_1_bits_r,
     resp_meta_providers_0_valid_r,
     resp_meta_providers_0_bits_r,
     resp_meta_providerResps_1_r_ctr,
     resp_meta_providerResps_1_r_u,
     resp_meta_providerResps_0_r_ctr,
     resp_meta_providerResps_0_r_u,
     resp_meta_altUsed_1_r,
     resp_meta_altUsed_0_r,
     resp_meta_basecnts_1_r,
     resp_meta_basecnts_0_r,
     resp_meta_allocates_1_r,
     resp_meta_allocates_0_r,
     resp_meta_scMeta_scPreds_1_r,
     resp_meta_scMeta_scPreds_0_r,
     r_3_3,
     r_3_2,
     r_3_1,
     r_3_0,
     r_2_3,
     r_2_2,
     r_2_1,
     r_2_0};
  assign io_s1_ready =
    _tables_0_io_req_ready & _tables_1_io_req_ready & _tables_2_io_req_ready
    & _tables_3_io_req_ready & _bt_io_req_ready;
  assign io_perf_0_value = {4'h0, io_perf_0_value_REG_1};
  assign io_perf_1_value = {4'h0, io_perf_1_value_REG_1};
  assign io_perf_2_value = {4'h0, io_perf_2_value_REG_1};
endmodule

