// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module VIAluFix(
  input          clock,
  input          reset,
  input          io_flush_valid,
  input          io_flush_bits_robIdx_flag,
  input  [7:0]   io_flush_bits_robIdx_value,
  input          io_flush_bits_level,
  input          io_in_valid,
  input  [8:0]   io_in_bits_ctrl_fuOpType,
  input          io_in_bits_ctrl_robIdx_flag,
  input  [7:0]   io_in_bits_ctrl_robIdx_value,
  input  [7:0]   io_in_bits_ctrl_pdest,
  input          io_in_bits_ctrl_vecWen,
  input          io_in_bits_ctrl_v0Wen,
  input          io_in_bits_ctrl_vpu_vma,
  input          io_in_bits_ctrl_vpu_vta,
  input  [1:0]   io_in_bits_ctrl_vpu_vsew,
  input          io_in_bits_ctrl_vpu_vm,
  input  [7:0]   io_in_bits_ctrl_vpu_vstart,
  input  [6:0]   io_in_bits_ctrl_vpu_vuopIdx,
  input          io_in_bits_ctrl_vpu_isExt,
  input          io_in_bits_ctrl_vpu_isNarrow,
  input          io_in_bits_ctrl_vpu_isDstMask,
  input          io_in_bits_ctrl_vpu_isOpMask,
  input  [7:0]   io_in_bits_data_src_4,
  input  [127:0] io_in_bits_data_src_3,
  input  [127:0] io_in_bits_data_src_2,
  input  [127:0] io_in_bits_data_src_1,
  input  [127:0] io_in_bits_data_src_0,
  output         io_out_valid,
  output         io_out_bits_ctrl_robIdx_flag,
  output [7:0]   io_out_bits_ctrl_robIdx_value,
  output [7:0]   io_out_bits_ctrl_pdest,
  output         io_out_bits_ctrl_vecWen,
  output         io_out_bits_ctrl_v0Wen,
  output [127:0] io_out_bits_res_data,
  output         io_out_bits_res_vxsat,
  input  [1:0]   io_vxrm
);

  wire [3:0]       _decoderOut_orMatrixOutputs_T_4;
  wire [7:0]       _decoderOut_orMatrixOutputs_T_2;
  wire [127:0]     _mgtu_io_out_vd;
  wire [127:0]     _mgu_io_out_vd;
  wire [15:0]      _mgu_io_out_active;
  wire [63:0]      _vIntFixpAlus_1_io_vd;
  wire [31:0]      _vIntFixpAlus_1_io_narrowVd;
  wire [7:0]       _vIntFixpAlus_1_io_cmpOut;
  wire [7:0]       _vIntFixpAlus_1_io_vxsat;
  wire [63:0]      _vIntFixpAlus_0_io_vd;
  wire [31:0]      _vIntFixpAlus_0_io_narrowVd;
  wire [7:0]       _vIntFixpAlus_0_io_cmpOut;
  wire [7:0]       _vIntFixpAlus_0_io_vxsat;
  wire [7:0]       _vs1Split_io_outVec8b_0;
  wire [7:0]       _vs1Split_io_outVec8b_1;
  wire [7:0]       _vs1Split_io_outVec8b_2;
  wire [7:0]       _vs1Split_io_outVec8b_3;
  wire [7:0]       _vs1Split_io_outVec8b_4;
  wire [7:0]       _vs1Split_io_outVec8b_5;
  wire [7:0]       _vs1Split_io_outVec8b_6;
  wire [7:0]       _vs1Split_io_outVec8b_7;
  wire [7:0]       _vs1Split_io_outVec8b_8;
  wire [7:0]       _vs1Split_io_outVec8b_9;
  wire [7:0]       _vs1Split_io_outVec8b_10;
  wire [7:0]       _vs1Split_io_outVec8b_11;
  wire [7:0]       _vs1Split_io_outVec8b_12;
  wire [7:0]       _vs1Split_io_outVec8b_13;
  wire [7:0]       _vs1Split_io_outVec8b_14;
  wire [7:0]       _vs1Split_io_outVec8b_15;
  wire [15:0]      _vs1Split_io_outVec16b_0;
  wire [15:0]      _vs1Split_io_outVec16b_1;
  wire [15:0]      _vs1Split_io_outVec16b_2;
  wire [15:0]      _vs1Split_io_outVec16b_3;
  wire [15:0]      _vs1Split_io_outVec16b_4;
  wire [15:0]      _vs1Split_io_outVec16b_5;
  wire [15:0]      _vs1Split_io_outVec16b_6;
  wire [15:0]      _vs1Split_io_outVec16b_7;
  wire [31:0]      _vs1Split_io_outVec32b_0;
  wire [31:0]      _vs1Split_io_outVec32b_1;
  wire [31:0]      _vs1Split_io_outVec32b_2;
  wire [31:0]      _vs1Split_io_outVec32b_3;
  wire [63:0]      _vs1Split_io_outVec64b_0;
  wire [63:0]      _vs1Split_io_outVec64b_1;
  wire [7:0]       _vs2Split_io_outVec8b_0;
  wire [7:0]       _vs2Split_io_outVec8b_1;
  wire [7:0]       _vs2Split_io_outVec8b_2;
  wire [7:0]       _vs2Split_io_outVec8b_3;
  wire [7:0]       _vs2Split_io_outVec8b_4;
  wire [7:0]       _vs2Split_io_outVec8b_5;
  wire [7:0]       _vs2Split_io_outVec8b_6;
  wire [7:0]       _vs2Split_io_outVec8b_7;
  wire [7:0]       _vs2Split_io_outVec8b_8;
  wire [7:0]       _vs2Split_io_outVec8b_9;
  wire [7:0]       _vs2Split_io_outVec8b_10;
  wire [7:0]       _vs2Split_io_outVec8b_11;
  wire [7:0]       _vs2Split_io_outVec8b_12;
  wire [7:0]       _vs2Split_io_outVec8b_13;
  wire [7:0]       _vs2Split_io_outVec8b_14;
  wire [7:0]       _vs2Split_io_outVec8b_15;
  wire [15:0]      _vs2Split_io_outVec16b_0;
  wire [15:0]      _vs2Split_io_outVec16b_1;
  wire [15:0]      _vs2Split_io_outVec16b_2;
  wire [15:0]      _vs2Split_io_outVec16b_3;
  wire [15:0]      _vs2Split_io_outVec16b_4;
  wire [15:0]      _vs2Split_io_outVec16b_5;
  wire [15:0]      _vs2Split_io_outVec16b_6;
  wire [15:0]      _vs2Split_io_outVec16b_7;
  wire [31:0]      _vs2Split_io_outVec32b_0;
  wire [31:0]      _vs2Split_io_outVec32b_1;
  wire [31:0]      _vs2Split_io_outVec32b_2;
  wire [31:0]      _vs2Split_io_outVec32b_3;
  wire [63:0]      _vs2Split_io_outVec64b_0;
  wire [63:0]      _vs2Split_io_outVec64b_1;
  wire [3:0]       _typeMod_io_out_vs1Type;
  wire [3:0]       _typeMod_io_out_vs2Type;
  wire [3:0]       _typeMod_io_out_vdType;
  wire             _typeMod_io_out_isVextF2;
  wire             _typeMod_io_out_isVextF4;
  wire             _typeMod_io_out_isVextF8;
  reg              validVec_1;
  reg  [8:0]       ctrlVec_1_fuOpType;
  reg              ctrlVec_1_robIdx_flag;
  reg  [7:0]       ctrlVec_1_robIdx_value;
  reg  [7:0]       ctrlVec_1_pdest;
  reg              ctrlVec_1_vecWen;
  reg              ctrlVec_1_v0Wen;
  reg              ctrlVec_1_vpu_vma;
  reg              ctrlVec_1_vpu_vta;
  reg  [1:0]       ctrlVec_1_vpu_vsew;
  reg              ctrlVec_1_vpu_vm;
  reg  [7:0]       ctrlVec_1_vpu_vstart;
  reg  [6:0]       ctrlVec_1_vpu_vuopIdx;
  reg              ctrlVec_1_vpu_isExt;
  reg              ctrlVec_1_vpu_isNarrow;
  reg              ctrlVec_1_vpu_isDstMask;
  reg              ctrlVec_1_vpu_isOpMask;
  reg  [7:0]       dataVec_1_src_4;
  reg  [127:0]     dataVec_1_src_3;
  reg  [127:0]     dataVec_1_src_2;
  wire [8:0]       _fixflushVec_flushItself_T_2 =
    {io_flush_bits_robIdx_flag, io_flush_bits_robIdx_value};
  wire             _GEN =
    io_in_valid
    & ~(io_in_valid & io_flush_valid
        & (io_flush_bits_level
           & {io_in_bits_ctrl_robIdx_flag,
              io_in_bits_ctrl_robIdx_value} == _fixflushVec_flushItself_T_2
           | io_in_bits_ctrl_robIdx_flag ^ io_flush_bits_robIdx_flag
           ^ io_in_bits_ctrl_robIdx_value > io_flush_bits_robIdx_value));
  wire [127:0]     srcMask =
    io_in_bits_ctrl_fuOpType == 9'h84 | io_in_bits_ctrl_fuOpType == 9'h86
      ? 128'h0
      : io_in_bits_ctrl_vpu_vm
          ? 128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
          : io_in_bits_data_src_3;
  wire [63:0]      vs2GroupedVec32b_0 =
    {_vs2Split_io_outVec32b_2, _vs2Split_io_outVec32b_0};
  wire [63:0]      vs2GroupedVec32b_1 =
    {_vs2Split_io_outVec32b_3, _vs2Split_io_outVec32b_1};
  wire [5:0]       decoderOut_invInputs = ~(io_in_bits_ctrl_fuOpType[5:0]);
  assign _decoderOut_orMatrixOutputs_T_2 =
    {&{decoderOut_invInputs[1],
       decoderOut_invInputs[3],
       decoderOut_invInputs[4],
       decoderOut_invInputs[5]},
     &{io_in_bits_ctrl_fuOpType[0],
       decoderOut_invInputs[2],
       decoderOut_invInputs[3],
       decoderOut_invInputs[4],
       decoderOut_invInputs[5]},
     &{decoderOut_invInputs[0],
       io_in_bits_ctrl_fuOpType[2],
       decoderOut_invInputs[3],
       decoderOut_invInputs[5]},
     &{io_in_bits_ctrl_fuOpType[1],
       decoderOut_invInputs[3],
       io_in_bits_ctrl_fuOpType[4],
       decoderOut_invInputs[5]},
     &{io_in_bits_ctrl_fuOpType[0],
       io_in_bits_ctrl_fuOpType[1],
       decoderOut_invInputs[2],
       io_in_bits_ctrl_fuOpType[4],
       decoderOut_invInputs[5]},
     &{decoderOut_invInputs[0],
       io_in_bits_ctrl_fuOpType[2],
       io_in_bits_ctrl_fuOpType[4],
       decoderOut_invInputs[5]},
     &{decoderOut_invInputs[1],
       io_in_bits_ctrl_fuOpType[2],
       io_in_bits_ctrl_fuOpType[4],
       decoderOut_invInputs[5]},
     &{decoderOut_invInputs[0],
       decoderOut_invInputs[1],
       io_in_bits_ctrl_fuOpType[3],
       io_in_bits_ctrl_fuOpType[4],
       decoderOut_invInputs[5]}};
  assign _decoderOut_orMatrixOutputs_T_4 =
    {&{io_in_bits_ctrl_fuOpType[0],
       decoderOut_invInputs[1],
       decoderOut_invInputs[3],
       decoderOut_invInputs[4],
       decoderOut_invInputs[5]},
     &{decoderOut_invInputs[0],
       io_in_bits_ctrl_fuOpType[1],
       io_in_bits_ctrl_fuOpType[2],
       decoderOut_invInputs[3],
       decoderOut_invInputs[5]},
     &{decoderOut_invInputs[0], io_in_bits_ctrl_fuOpType[4], decoderOut_invInputs[5]},
     &{decoderOut_invInputs[3], io_in_bits_ctrl_fuOpType[4], decoderOut_invInputs[5]}};
  wire             isFixp =
    (|_decoderOut_orMatrixOutputs_T_2)
      ? io_in_bits_ctrl_fuOpType[5:0] == 6'h1B | io_in_bits_ctrl_fuOpType[5:0] == 6'h1C
        | io_in_bits_ctrl_fuOpType[5:0] == 6'h1D | io_in_bits_ctrl_fuOpType[5:0] == 6'h1E
      : io_in_bits_ctrl_fuOpType[5:0] == 6'h1F | io_in_bits_ctrl_fuOpType[5:0] == 6'h20;
  wire             widen =
    (io_in_bits_ctrl_fuOpType[5:0] == 6'h0 | io_in_bits_ctrl_fuOpType[5:0] == 6'h1)
    & _typeMod_io_out_vs1Type[1:0] != _typeMod_io_out_vdType[1:0];
  wire             widen_vs2 =
    widen & _typeMod_io_out_vs2Type[1:0] != _typeMod_io_out_vdType[1:0];
  wire             _eewVs1_sew_oneHot_T_1 = _typeMod_io_out_vs1Type[1:0] == 2'h1;
  wire             _eewVs1_sew_oneHot_T_2 = _typeMod_io_out_vs1Type[1:0] == 2'h2;
  wire [3:0]       eewVs1_oneHot =
    {&(_typeMod_io_out_vs1Type[1:0]),
     _eewVs1_sew_oneHot_T_2,
     _eewVs1_sew_oneHot_T_1,
     ~(|(_typeMod_io_out_vs1Type[1:0]))};
  wire             _eewVd_sew_oneHot_T_1 = _typeMod_io_out_vdType[1:0] == 2'h1;
  wire             _eewVd_sew_oneHot_T_2 = _typeMod_io_out_vdType[1:0] == 2'h2;
  wire             isVwsll = io_in_bits_ctrl_fuOpType[5:0] == 6'h37;
  wire             isVwsllEewVdIs64 = isVwsll & (&(_typeMod_io_out_vdType[1:0]));
  wire             isVwsllEewVdIs32 = isVwsll & _eewVd_sew_oneHot_T_2;
  wire             isVwsllEewVdIs16 = isVwsll & _eewVd_sew_oneHot_T_1;
  wire             _GEN_0 = widen | io_in_bits_ctrl_vpu_isNarrow | isVwsllEewVdIs64;
  wire             _GEN_1 = _typeMod_io_out_isVextF2 | isVwsllEewVdIs64;
  wire             _GEN_2 = _typeMod_io_out_isVextF4 | isVwsllEewVdIs32;
  wire             _GEN_3 = _typeMod_io_out_isVextF8 | isVwsllEewVdIs16;
  wire             _maskDataVec_maskDataVec_7_T = io_in_bits_ctrl_vpu_vsew == 2'h0;
  wire             _maskDataVec_maskDataVec_7_T_2 = io_in_bits_ctrl_vpu_vsew == 2'h1;
  wire             _maskDataVec_maskDataVec_7_T_4 = io_in_bits_ctrl_vpu_vsew == 2'h2;
  wire [15:0]      _maskDataVec_maskDataVec_0_T_8 =
    _maskDataVec_maskDataVec_7_T ? srcMask[15:0] : 16'h0;
  wire [7:0]       _GEN_4 =
    _maskDataVec_maskDataVec_0_T_8[7:0]
    | (_maskDataVec_maskDataVec_7_T_2 ? srcMask[7:0] : 8'h0);
  wire [3:0]       _GEN_5 =
    _GEN_4[3:0] | (_maskDataVec_maskDataVec_7_T_4 ? srcMask[3:0] : 4'h0);
  wire [15:0]      _maskDataVec_maskDataVec_1_T_8 =
    _maskDataVec_maskDataVec_7_T ? srcMask[31:16] : 16'h0;
  wire [7:0]       _GEN_6 =
    _maskDataVec_maskDataVec_1_T_8[7:0]
    | (_maskDataVec_maskDataVec_7_T_2 ? srcMask[15:8] : 8'h0);
  wire [3:0]       _GEN_7 =
    _GEN_6[3:0] | (_maskDataVec_maskDataVec_7_T_4 ? srcMask[7:4] : 4'h0);
  wire [15:0]      _maskDataVec_maskDataVec_2_T_8 =
    _maskDataVec_maskDataVec_7_T ? srcMask[47:32] : 16'h0;
  wire [7:0]       _GEN_8 =
    _maskDataVec_maskDataVec_2_T_8[7:0]
    | (_maskDataVec_maskDataVec_7_T_2 ? srcMask[23:16] : 8'h0);
  wire [3:0]       _GEN_9 =
    _GEN_8[3:0] | (_maskDataVec_maskDataVec_7_T_4 ? srcMask[11:8] : 4'h0);
  wire [15:0]      _maskDataVec_maskDataVec_3_T_8 =
    _maskDataVec_maskDataVec_7_T ? srcMask[63:48] : 16'h0;
  wire [7:0]       _GEN_10 =
    _maskDataVec_maskDataVec_3_T_8[7:0]
    | (_maskDataVec_maskDataVec_7_T_2 ? srcMask[31:24] : 8'h0);
  wire [3:0]       _GEN_11 =
    _GEN_10[3:0] | (_maskDataVec_maskDataVec_7_T_4 ? srcMask[15:12] : 4'h0);
  wire [15:0]      _maskDataVec_maskDataVec_4_T_8 =
    _maskDataVec_maskDataVec_7_T ? srcMask[79:64] : 16'h0;
  wire [7:0]       _GEN_12 =
    _maskDataVec_maskDataVec_4_T_8[7:0]
    | (_maskDataVec_maskDataVec_7_T_2 ? srcMask[39:32] : 8'h0);
  wire [3:0]       _GEN_13 =
    _GEN_12[3:0] | (_maskDataVec_maskDataVec_7_T_4 ? srcMask[19:16] : 4'h0);
  wire [15:0]      _maskDataVec_maskDataVec_5_T_8 =
    _maskDataVec_maskDataVec_7_T ? srcMask[95:80] : 16'h0;
  wire [7:0]       _GEN_14 =
    _maskDataVec_maskDataVec_5_T_8[7:0]
    | (_maskDataVec_maskDataVec_7_T_2 ? srcMask[47:40] : 8'h0);
  wire [3:0]       _GEN_15 =
    _GEN_14[3:0] | (_maskDataVec_maskDataVec_7_T_4 ? srcMask[23:20] : 4'h0);
  wire [15:0]      _maskDataVec_maskDataVec_6_T_8 =
    _maskDataVec_maskDataVec_7_T ? srcMask[111:96] : 16'h0;
  wire [7:0]       _GEN_16 =
    _maskDataVec_maskDataVec_6_T_8[7:0]
    | (_maskDataVec_maskDataVec_7_T_2 ? srcMask[55:48] : 8'h0);
  wire [3:0]       _GEN_17 =
    _GEN_16[3:0] | (_maskDataVec_maskDataVec_7_T_4 ? srcMask[27:24] : 4'h0);
  wire [15:0]      _maskDataVec_maskDataVec_7_T_8 =
    _maskDataVec_maskDataVec_7_T ? srcMask[127:112] : 16'h0;
  wire [7:0]       _GEN_18 =
    _maskDataVec_maskDataVec_7_T_8[7:0]
    | (_maskDataVec_maskDataVec_7_T_2 ? srcMask[63:56] : 8'h0);
  wire [3:0]       _GEN_19 =
    _GEN_18[3:0] | (_maskDataVec_maskDataVec_7_T_4 ? srcMask[31:28] : 4'h0);
  wire [3:0]       _maskUsed_T_1_oneHot =
    (&_typeMod_io_out_vdType)
      ? eewVs1_oneHot
      : {&(_typeMod_io_out_vdType[1:0]),
         _eewVd_sew_oneHot_T_2,
         _eewVd_sew_oneHot_T_1,
         _typeMod_io_out_vdType[1:0] == 2'h0};
  wire [7:0][15:0] _GEN_20 =
    {{{_maskDataVec_maskDataVec_7_T_8[15:8],
       _GEN_18[7:4],
       _GEN_19[3:2],
       _GEN_19[1:0] | ((&io_in_bits_ctrl_vpu_vsew) ? srcMask[15:14] : 2'h0)}},
     {{_maskDataVec_maskDataVec_6_T_8[15:8],
       _GEN_16[7:4],
       _GEN_17[3:2],
       _GEN_17[1:0] | ((&io_in_bits_ctrl_vpu_vsew) ? srcMask[13:12] : 2'h0)}},
     {{_maskDataVec_maskDataVec_5_T_8[15:8],
       _GEN_14[7:4],
       _GEN_15[3:2],
       _GEN_15[1:0] | ((&io_in_bits_ctrl_vpu_vsew) ? srcMask[11:10] : 2'h0)}},
     {{_maskDataVec_maskDataVec_4_T_8[15:8],
       _GEN_12[7:4],
       _GEN_13[3:2],
       _GEN_13[1:0] | ((&io_in_bits_ctrl_vpu_vsew) ? srcMask[9:8] : 2'h0)}},
     {{_maskDataVec_maskDataVec_3_T_8[15:8],
       _GEN_10[7:4],
       _GEN_11[3:2],
       _GEN_11[1:0] | ((&io_in_bits_ctrl_vpu_vsew) ? srcMask[7:6] : 2'h0)}},
     {{_maskDataVec_maskDataVec_2_T_8[15:8],
       _GEN_8[7:4],
       _GEN_9[3:2],
       _GEN_9[1:0] | ((&io_in_bits_ctrl_vpu_vsew) ? srcMask[5:4] : 2'h0)}},
     {{_maskDataVec_maskDataVec_1_T_8[15:8],
       _GEN_6[7:4],
       _GEN_7[3:2],
       _GEN_7[1:0] | ((&io_in_bits_ctrl_vpu_vsew) ? srcMask[3:2] : 2'h0)}},
     {{_maskDataVec_maskDataVec_0_T_8[15:8],
       _GEN_4[7:4],
       _GEN_5[3:2],
       _GEN_5[1:0] | ((&io_in_bits_ctrl_vpu_vsew) ? srcMask[1:0] : 2'h0)}}};
  wire [15:0]      _GEN_21 =
    _GEN_20[io_in_bits_ctrl_vpu_isNarrow
              ? io_in_bits_ctrl_vpu_vuopIdx[3:1]
              : io_in_bits_ctrl_vpu_vuopIdx[2:0]];
  wire             _oldVdUsed_maskDataVec_7_T_2 = _typeMod_io_out_vs1Type[1:0] == 2'h1;
  wire             _oldVdUsed_maskDataVec_7_T_4 = _typeMod_io_out_vs1Type[1:0] == 2'h2;
  wire [15:0]      _oldVdUsed_maskDataVec_0_T_8 =
    (|(_typeMod_io_out_vs1Type[1:0])) ? 16'h0 : io_in_bits_data_src_2[15:0];
  wire [7:0]       _GEN_22 =
    _oldVdUsed_maskDataVec_0_T_8[7:0]
    | (_oldVdUsed_maskDataVec_7_T_2 ? io_in_bits_data_src_2[7:0] : 8'h0);
  wire [3:0]       _GEN_23 =
    _GEN_22[3:0] | (_oldVdUsed_maskDataVec_7_T_4 ? io_in_bits_data_src_2[3:0] : 4'h0);
  wire [15:0]      _oldVdUsed_maskDataVec_1_T_8 =
    (|(_typeMod_io_out_vs1Type[1:0])) ? 16'h0 : io_in_bits_data_src_2[31:16];
  wire [7:0]       _GEN_24 =
    _oldVdUsed_maskDataVec_1_T_8[7:0]
    | (_oldVdUsed_maskDataVec_7_T_2 ? io_in_bits_data_src_2[15:8] : 8'h0);
  wire [3:0]       _GEN_25 =
    _GEN_24[3:0] | (_oldVdUsed_maskDataVec_7_T_4 ? io_in_bits_data_src_2[7:4] : 4'h0);
  wire [15:0]      _oldVdUsed_maskDataVec_2_T_8 =
    (|(_typeMod_io_out_vs1Type[1:0])) ? 16'h0 : io_in_bits_data_src_2[47:32];
  wire [7:0]       _GEN_26 =
    _oldVdUsed_maskDataVec_2_T_8[7:0]
    | (_oldVdUsed_maskDataVec_7_T_2 ? io_in_bits_data_src_2[23:16] : 8'h0);
  wire [3:0]       _GEN_27 =
    _GEN_26[3:0] | (_oldVdUsed_maskDataVec_7_T_4 ? io_in_bits_data_src_2[11:8] : 4'h0);
  wire [15:0]      _oldVdUsed_maskDataVec_3_T_8 =
    (|(_typeMod_io_out_vs1Type[1:0])) ? 16'h0 : io_in_bits_data_src_2[63:48];
  wire [7:0]       _GEN_28 =
    _oldVdUsed_maskDataVec_3_T_8[7:0]
    | (_oldVdUsed_maskDataVec_7_T_2 ? io_in_bits_data_src_2[31:24] : 8'h0);
  wire [3:0]       _GEN_29 =
    _GEN_28[3:0] | (_oldVdUsed_maskDataVec_7_T_4 ? io_in_bits_data_src_2[15:12] : 4'h0);
  wire [15:0]      _oldVdUsed_maskDataVec_4_T_8 =
    (|(_typeMod_io_out_vs1Type[1:0])) ? 16'h0 : io_in_bits_data_src_2[79:64];
  wire [7:0]       _GEN_30 =
    _oldVdUsed_maskDataVec_4_T_8[7:0]
    | (_oldVdUsed_maskDataVec_7_T_2 ? io_in_bits_data_src_2[39:32] : 8'h0);
  wire [3:0]       _GEN_31 =
    _GEN_30[3:0] | (_oldVdUsed_maskDataVec_7_T_4 ? io_in_bits_data_src_2[19:16] : 4'h0);
  wire [15:0]      _oldVdUsed_maskDataVec_5_T_8 =
    (|(_typeMod_io_out_vs1Type[1:0])) ? 16'h0 : io_in_bits_data_src_2[95:80];
  wire [7:0]       _GEN_32 =
    _oldVdUsed_maskDataVec_5_T_8[7:0]
    | (_oldVdUsed_maskDataVec_7_T_2 ? io_in_bits_data_src_2[47:40] : 8'h0);
  wire [3:0]       _GEN_33 =
    _GEN_32[3:0] | (_oldVdUsed_maskDataVec_7_T_4 ? io_in_bits_data_src_2[23:20] : 4'h0);
  wire [15:0]      _oldVdUsed_maskDataVec_6_T_8 =
    (|(_typeMod_io_out_vs1Type[1:0])) ? 16'h0 : io_in_bits_data_src_2[111:96];
  wire [7:0]       _GEN_34 =
    _oldVdUsed_maskDataVec_6_T_8[7:0]
    | (_oldVdUsed_maskDataVec_7_T_2 ? io_in_bits_data_src_2[55:48] : 8'h0);
  wire [3:0]       _GEN_35 =
    _GEN_34[3:0] | (_oldVdUsed_maskDataVec_7_T_4 ? io_in_bits_data_src_2[27:24] : 4'h0);
  wire [15:0]      _oldVdUsed_maskDataVec_7_T_8 =
    (|(_typeMod_io_out_vs1Type[1:0])) ? 16'h0 : io_in_bits_data_src_2[127:112];
  wire [7:0]       _GEN_36 =
    _oldVdUsed_maskDataVec_7_T_8[7:0]
    | (_oldVdUsed_maskDataVec_7_T_2 ? io_in_bits_data_src_2[63:56] : 8'h0);
  wire [3:0]       _GEN_37 =
    _GEN_36[3:0] | (_oldVdUsed_maskDataVec_7_T_4 ? io_in_bits_data_src_2[31:28] : 4'h0);
  wire [7:0][15:0] _GEN_38 =
    {{{_oldVdUsed_maskDataVec_7_T_8[15:8],
       _GEN_36[7:4],
       _GEN_37[3:2],
       _GEN_37[1:0]
         | ((&(_typeMod_io_out_vs1Type[1:0])) ? io_in_bits_data_src_2[15:14] : 2'h0)}},
     {{_oldVdUsed_maskDataVec_6_T_8[15:8],
       _GEN_34[7:4],
       _GEN_35[3:2],
       _GEN_35[1:0]
         | ((&(_typeMod_io_out_vs1Type[1:0])) ? io_in_bits_data_src_2[13:12] : 2'h0)}},
     {{_oldVdUsed_maskDataVec_5_T_8[15:8],
       _GEN_32[7:4],
       _GEN_33[3:2],
       _GEN_33[1:0]
         | ((&(_typeMod_io_out_vs1Type[1:0])) ? io_in_bits_data_src_2[11:10] : 2'h0)}},
     {{_oldVdUsed_maskDataVec_4_T_8[15:8],
       _GEN_30[7:4],
       _GEN_31[3:2],
       _GEN_31[1:0]
         | ((&(_typeMod_io_out_vs1Type[1:0])) ? io_in_bits_data_src_2[9:8] : 2'h0)}},
     {{_oldVdUsed_maskDataVec_3_T_8[15:8],
       _GEN_28[7:4],
       _GEN_29[3:2],
       _GEN_29[1:0]
         | ((&(_typeMod_io_out_vs1Type[1:0])) ? io_in_bits_data_src_2[7:6] : 2'h0)}},
     {{_oldVdUsed_maskDataVec_2_T_8[15:8],
       _GEN_26[7:4],
       _GEN_27[3:2],
       _GEN_27[1:0]
         | ((&(_typeMod_io_out_vs1Type[1:0])) ? io_in_bits_data_src_2[5:4] : 2'h0)}},
     {{_oldVdUsed_maskDataVec_1_T_8[15:8],
       _GEN_24[7:4],
       _GEN_25[3:2],
       _GEN_25[1:0]
         | ((&(_typeMod_io_out_vs1Type[1:0])) ? io_in_bits_data_src_2[3:2] : 2'h0)}},
     {{_oldVdUsed_maskDataVec_0_T_8[15:8],
       _GEN_22[7:4],
       _GEN_23[3:2],
       _GEN_23[1:0]
         | ((&(_typeMod_io_out_vs1Type[1:0])) ? io_in_bits_data_src_2[1:0] : 2'h0)}}};
  wire [15:0]      _GEN_39 = _GEN_38[io_in_bits_ctrl_vpu_vuopIdx[2:0]];
  wire [7:0]       _GEN_40 = {7'h0, io_in_bits_ctrl_vpu_isNarrow};
  reg              outIsVwsll;
  reg              outIsVwsllEewVdIs64;
  reg              outIsVwsllEewVdIs32;
  reg              outIsVwsllEewVdIs16;
  reg  [3:0]       outEewVs1_oneHot;
  wire [127:0]     outVd =
    (outIsVwsllEewVdIs64 | ~outIsVwsll
       ? {_vIntFixpAlus_1_io_vd, _vIntFixpAlus_0_io_vd}
       : 128'h0)
    | (outIsVwsllEewVdIs32
         ? {_vIntFixpAlus_1_io_vd[63:32],
            _vIntFixpAlus_0_io_vd[63:32],
            _vIntFixpAlus_1_io_vd[31:0],
            _vIntFixpAlus_0_io_vd[31:0]}
         : 128'h0)
    | (outIsVwsllEewVdIs16
         ? {_vIntFixpAlus_1_io_vd[63:48],
            _vIntFixpAlus_0_io_vd[63:48],
            _vIntFixpAlus_1_io_vd[47:32],
            _vIntFixpAlus_0_io_vd[47:32],
            _vIntFixpAlus_1_io_vd[31:16],
            _vIntFixpAlus_0_io_vd[31:16],
            _vIntFixpAlus_1_io_vd[15:0],
            _vIntFixpAlus_0_io_vd[15:0]}
         : 128'h0);
  wire [15:0]      _outCmp_T_16 =
    outEewVs1_oneHot[0] ? {_vIntFixpAlus_1_io_cmpOut, _vIntFixpAlus_0_io_cmpOut} : 16'h0;
  wire [7:0]       _GEN_41 =
    _outCmp_T_16[7:0]
    | (outEewVs1_oneHot[1]
         ? {_vIntFixpAlus_1_io_cmpOut[3:0], _vIntFixpAlus_0_io_cmpOut[3:0]}
         : 8'h0);
  wire [3:0]       _GEN_42 =
    _GEN_41[3:0]
    | (outEewVs1_oneHot[2]
         ? {_vIntFixpAlus_1_io_cmpOut[1:0], _vIntFixpAlus_0_io_cmpOut[1:0]}
         : 4'h0);
  wire [1:0]       _GEN_43 =
    _GEN_42[1:0]
    | (outEewVs1_oneHot[3]
         ? {_vIntFixpAlus_1_io_cmpOut[0], _vIntFixpAlus_0_io_cmpOut[0]}
         : 2'h0);
  wire [7:0]       _GEN_44 =
    {3'h0,
     outEewVs1_oneHot[0],
     outEewVs1_oneHot[1],
     outEewVs1_oneHot[2],
     outEewVs1_oneHot[3],
     1'h0};
  wire [7:0]       elementsComputed =
    {1'h0,
     {1'h0,
      ctrlVec_1_vpu_vuopIdx[2:0] == 3'h1
        ? {1'h0,
           outEewVs1_oneHot[0],
           outEewVs1_oneHot[1],
           outEewVs1_oneHot[2],
           outEewVs1_oneHot[3],
           1'h0}
        : 6'h0}
       | (ctrlVec_1_vpu_vuopIdx[2:0] == 3'h2
            ? {1'h0,
               outEewVs1_oneHot[0],
               outEewVs1_oneHot[1],
               outEewVs1_oneHot[2],
               outEewVs1_oneHot[3],
               2'h0}
            : 7'h0)
       | (ctrlVec_1_vpu_vuopIdx[2:0] == 3'h3
            ? 7'({2'h0,
                  outEewVs1_oneHot[0],
                  outEewVs1_oneHot[1],
                  outEewVs1_oneHot[2],
                  outEewVs1_oneHot[3],
                  1'h0} * 7'h3)
            : 7'h0)}
    | (ctrlVec_1_vpu_vuopIdx[2:0] == 3'h4
         ? {1'h0,
            outEewVs1_oneHot[0],
            outEewVs1_oneHot[1],
            outEewVs1_oneHot[2],
            outEewVs1_oneHot[3],
            3'h0}
         : 8'h0) | (ctrlVec_1_vpu_vuopIdx[2:0] == 3'h5 ? 8'(_GEN_44 * 8'h5) : 8'h0)
    | (ctrlVec_1_vpu_vuopIdx[2:0] == 3'h6 ? 8'(_GEN_44 * 8'h6) : 8'h0)
    | ((&(ctrlVec_1_vpu_vuopIdx[2:0])) ? 8'(_GEN_44 * 8'h7) : 8'h0);
  wire [8:0]       _GEN_45 = {1'h0, elementsComputed};
  wire [8:0]       _GEN_46 = {1'h0, dataVec_1_src_4};
  wire [15:0]      outVxsat =
    ctrlVec_1_vpu_isNarrow
      ? {8'h0, _vIntFixpAlus_1_io_vxsat[3:0], _vIntFixpAlus_0_io_vxsat[3:0]}
      : {_vIntFixpAlus_1_io_vxsat, _vIntFixpAlus_0_io_vxsat};
  wire             narrowNeedCat = ctrlVec_1_vpu_vuopIdx[0] & ctrlVec_1_vpu_isNarrow;
  wire             outVstartGeVl = ctrlVec_1_vpu_vstart >= dataVec_1_src_4;
  always @(posedge clock or posedge reset) begin
    if (reset)
      validVec_1 <= 1'h0;
    else
      validVec_1 <= _GEN & io_in_valid;
  end // always @(posedge, posedge)
  always @(posedge clock) begin
    if (_GEN) begin
      ctrlVec_1_fuOpType <= io_in_bits_ctrl_fuOpType;
      ctrlVec_1_robIdx_flag <= io_in_bits_ctrl_robIdx_flag;
      ctrlVec_1_robIdx_value <= io_in_bits_ctrl_robIdx_value;
      ctrlVec_1_pdest <= io_in_bits_ctrl_pdest;
      ctrlVec_1_vecWen <= io_in_bits_ctrl_vecWen;
      ctrlVec_1_v0Wen <= io_in_bits_ctrl_v0Wen;
      ctrlVec_1_vpu_vma <= io_in_bits_ctrl_vpu_vma;
      ctrlVec_1_vpu_vta <= io_in_bits_ctrl_vpu_vta;
      ctrlVec_1_vpu_vsew <= io_in_bits_ctrl_vpu_vsew;
      ctrlVec_1_vpu_vm <= io_in_bits_ctrl_vpu_vm;
      ctrlVec_1_vpu_vstart <= io_in_bits_ctrl_vpu_vstart;
      ctrlVec_1_vpu_vuopIdx <= io_in_bits_ctrl_vpu_vuopIdx;
      ctrlVec_1_vpu_isExt <= io_in_bits_ctrl_vpu_isExt;
      ctrlVec_1_vpu_isNarrow <= io_in_bits_ctrl_vpu_isNarrow;
      ctrlVec_1_vpu_isDstMask <= io_in_bits_ctrl_vpu_isDstMask;
      ctrlVec_1_vpu_isOpMask <= io_in_bits_ctrl_vpu_isOpMask;
      dataVec_1_src_4 <= io_in_bits_data_src_4;
      dataVec_1_src_3 <= io_in_bits_data_src_3;
      dataVec_1_src_2 <= io_in_bits_data_src_2;
    end
    if (io_in_valid) begin
      outIsVwsll <= isVwsll;
      outIsVwsllEewVdIs64 <= isVwsllEewVdIs64;
      outIsVwsllEewVdIs32 <= isVwsllEewVdIs32;
      outIsVwsllEewVdIs16 <= isVwsllEewVdIs16;
    end
    if (io_in_valid
        & ~(io_in_valid & io_flush_valid
            & (io_flush_bits_level
               & {io_in_bits_ctrl_robIdx_flag,
                  io_in_bits_ctrl_robIdx_value} == _fixflushVec_flushItself_T_2
               | io_in_bits_ctrl_robIdx_flag ^ io_flush_bits_robIdx_flag
               ^ io_in_bits_ctrl_robIdx_value > io_flush_bits_robIdx_value)))
      outEewVs1_oneHot <= eewVs1_oneHot;
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:45];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h2E; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        validVec_1 = _RANDOM[6'h0][0];
        ctrlVec_1_fuOpType = _RANDOM[6'h0][9:1];
        ctrlVec_1_robIdx_flag = _RANDOM[6'h0][10];
        ctrlVec_1_robIdx_value = _RANDOM[6'h0][18:11];
        ctrlVec_1_pdest = _RANDOM[6'h0][26:19];
        ctrlVec_1_vecWen = _RANDOM[6'h0][27];
        ctrlVec_1_v0Wen = _RANDOM[6'h0][28];
        ctrlVec_1_vpu_vma = _RANDOM[6'h0][30];
        ctrlVec_1_vpu_vta = _RANDOM[6'h0][31];
        ctrlVec_1_vpu_vsew = _RANDOM[6'h1][1:0];
        ctrlVec_1_vpu_vm = _RANDOM[6'h1][13];
        ctrlVec_1_vpu_vstart = _RANDOM[6'h1][21:14];
        ctrlVec_1_vpu_vuopIdx = _RANDOM[6'h2][8:2];
        ctrlVec_1_vpu_isExt = _RANDOM[6'h6][24];
        ctrlVec_1_vpu_isNarrow = _RANDOM[6'h6][25];
        ctrlVec_1_vpu_isDstMask = _RANDOM[6'h6][26];
        ctrlVec_1_vpu_isOpMask = _RANDOM[6'h6][27];
        dataVec_1_src_4 = {_RANDOM[6'h6][31], _RANDOM[6'h7][6:0]};
        dataVec_1_src_3 =
          {_RANDOM[6'h7][31:7],
           _RANDOM[6'h8],
           _RANDOM[6'h9],
           _RANDOM[6'hA],
           _RANDOM[6'hB][6:0]};
        dataVec_1_src_2 =
          {_RANDOM[6'hB][31:7],
           _RANDOM[6'hC],
           _RANDOM[6'hD],
           _RANDOM[6'hE],
           _RANDOM[6'hF][6:0]};
        outIsVwsll = _RANDOM[6'h2D][8];
        outIsVwsllEewVdIs64 = _RANDOM[6'h2D][9];
        outIsVwsllEewVdIs32 = _RANDOM[6'h2D][10];
        outIsVwsllEewVdIs16 = _RANDOM[6'h2D][11];
        outEewVs1_oneHot = _RANDOM[6'h2D][15:12];
      `endif // RANDOMIZE_REG_INIT
      if (reset)
        validVec_1 = 1'h0;
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  VIAluSrcTypeModule typeMod (
    .io_in_fuOpType  (io_in_bits_ctrl_fuOpType),
    .io_in_vsew      (io_in_bits_ctrl_vpu_vsew),
    .io_in_isExt     (io_in_bits_ctrl_vpu_isExt),
    .io_in_isDstMask (io_in_bits_ctrl_vpu_isDstMask),
    .io_out_vs1Type  (_typeMod_io_out_vs1Type),
    .io_out_vs2Type  (_typeMod_io_out_vs2Type),
    .io_out_vdType   (_typeMod_io_out_vdType),
    .io_out_isVextF2 (_typeMod_io_out_isVextF2),
    .io_out_isVextF4 (_typeMod_io_out_isVextF4),
    .io_out_isVextF8 (_typeMod_io_out_isVextF8)
  );
  VecDataSplitModule vs2Split (
    .io_inVecData   (io_in_bits_data_src_1),
    .io_outVec8b_0  (_vs2Split_io_outVec8b_0),
    .io_outVec8b_1  (_vs2Split_io_outVec8b_1),
    .io_outVec8b_2  (_vs2Split_io_outVec8b_2),
    .io_outVec8b_3  (_vs2Split_io_outVec8b_3),
    .io_outVec8b_4  (_vs2Split_io_outVec8b_4),
    .io_outVec8b_5  (_vs2Split_io_outVec8b_5),
    .io_outVec8b_6  (_vs2Split_io_outVec8b_6),
    .io_outVec8b_7  (_vs2Split_io_outVec8b_7),
    .io_outVec8b_8  (_vs2Split_io_outVec8b_8),
    .io_outVec8b_9  (_vs2Split_io_outVec8b_9),
    .io_outVec8b_10 (_vs2Split_io_outVec8b_10),
    .io_outVec8b_11 (_vs2Split_io_outVec8b_11),
    .io_outVec8b_12 (_vs2Split_io_outVec8b_12),
    .io_outVec8b_13 (_vs2Split_io_outVec8b_13),
    .io_outVec8b_14 (_vs2Split_io_outVec8b_14),
    .io_outVec8b_15 (_vs2Split_io_outVec8b_15),
    .io_outVec16b_0 (_vs2Split_io_outVec16b_0),
    .io_outVec16b_1 (_vs2Split_io_outVec16b_1),
    .io_outVec16b_2 (_vs2Split_io_outVec16b_2),
    .io_outVec16b_3 (_vs2Split_io_outVec16b_3),
    .io_outVec16b_4 (_vs2Split_io_outVec16b_4),
    .io_outVec16b_5 (_vs2Split_io_outVec16b_5),
    .io_outVec16b_6 (_vs2Split_io_outVec16b_6),
    .io_outVec16b_7 (_vs2Split_io_outVec16b_7),
    .io_outVec32b_0 (_vs2Split_io_outVec32b_0),
    .io_outVec32b_1 (_vs2Split_io_outVec32b_1),
    .io_outVec32b_2 (_vs2Split_io_outVec32b_2),
    .io_outVec32b_3 (_vs2Split_io_outVec32b_3),
    .io_outVec64b_0 (_vs2Split_io_outVec64b_0),
    .io_outVec64b_1 (_vs2Split_io_outVec64b_1)
  );
  VecDataSplitModule vs1Split (
    .io_inVecData   (io_in_bits_data_src_0),
    .io_outVec8b_0  (_vs1Split_io_outVec8b_0),
    .io_outVec8b_1  (_vs1Split_io_outVec8b_1),
    .io_outVec8b_2  (_vs1Split_io_outVec8b_2),
    .io_outVec8b_3  (_vs1Split_io_outVec8b_3),
    .io_outVec8b_4  (_vs1Split_io_outVec8b_4),
    .io_outVec8b_5  (_vs1Split_io_outVec8b_5),
    .io_outVec8b_6  (_vs1Split_io_outVec8b_6),
    .io_outVec8b_7  (_vs1Split_io_outVec8b_7),
    .io_outVec8b_8  (_vs1Split_io_outVec8b_8),
    .io_outVec8b_9  (_vs1Split_io_outVec8b_9),
    .io_outVec8b_10 (_vs1Split_io_outVec8b_10),
    .io_outVec8b_11 (_vs1Split_io_outVec8b_11),
    .io_outVec8b_12 (_vs1Split_io_outVec8b_12),
    .io_outVec8b_13 (_vs1Split_io_outVec8b_13),
    .io_outVec8b_14 (_vs1Split_io_outVec8b_14),
    .io_outVec8b_15 (_vs1Split_io_outVec8b_15),
    .io_outVec16b_0 (_vs1Split_io_outVec16b_0),
    .io_outVec16b_1 (_vs1Split_io_outVec16b_1),
    .io_outVec16b_2 (_vs1Split_io_outVec16b_2),
    .io_outVec16b_3 (_vs1Split_io_outVec16b_3),
    .io_outVec16b_4 (_vs1Split_io_outVec16b_4),
    .io_outVec16b_5 (_vs1Split_io_outVec16b_5),
    .io_outVec16b_6 (_vs1Split_io_outVec16b_6),
    .io_outVec16b_7 (_vs1Split_io_outVec16b_7),
    .io_outVec32b_0 (_vs1Split_io_outVec32b_0),
    .io_outVec32b_1 (_vs1Split_io_outVec32b_1),
    .io_outVec32b_2 (_vs1Split_io_outVec32b_2),
    .io_outVec32b_3 (_vs1Split_io_outVec32b_3),
    .io_outVec64b_0 (_vs1Split_io_outVec64b_0),
    .io_outVec64b_1 (_vs1Split_io_outVec64b_1)
  );
  VIntFixpAlu64b vIntFixpAlus_0 (
    .clock          (clock),
    .io_fire        (io_in_valid),
    .io_opcode_op   (io_in_bits_ctrl_fuOpType[5:0]),
    .io_info_vm     (io_in_bits_ctrl_vpu_vm),
    .io_info_ma     (io_in_bits_ctrl_vpu_vma),
    .io_info_uopIdx (io_in_bits_ctrl_vpu_vuopIdx[5:0]),
    .io_info_vxrm   (io_vxrm),
    .io_srcType_0   (_typeMod_io_out_vs2Type),
    .io_srcType_1   (_typeMod_io_out_vs1Type),
    .io_vdType      (_typeMod_io_out_vdType),
    .io_vs1
      (_GEN_0
         ? {_vs1Split_io_outVec32b_2, _vs1Split_io_outVec32b_0}
         : isVwsllEewVdIs32
             ? {_vs1Split_io_outVec16b_6,
                _vs1Split_io_outVec16b_4,
                _vs1Split_io_outVec16b_2,
                _vs1Split_io_outVec16b_0}
             : isVwsllEewVdIs16
                 ? {_vs1Split_io_outVec8b_14,
                    _vs1Split_io_outVec8b_12,
                    _vs1Split_io_outVec8b_10,
                    _vs1Split_io_outVec8b_8,
                    _vs1Split_io_outVec8b_6,
                    _vs1Split_io_outVec8b_4,
                    _vs1Split_io_outVec8b_2,
                    _vs1Split_io_outVec8b_0}
                 : _vs1Split_io_outVec64b_0),
    .io_vs2_adder   (widen_vs2 ? vs2GroupedVec32b_0 : _vs2Split_io_outVec64b_0),
    .io_vs2_misc
      (_GEN_1
         ? vs2GroupedVec32b_0
         : _GEN_2
             ? {_vs2Split_io_outVec16b_6,
                _vs2Split_io_outVec16b_4,
                _vs2Split_io_outVec16b_2,
                _vs2Split_io_outVec16b_0}
             : _GEN_3
                 ? {_vs2Split_io_outVec8b_14,
                    _vs2Split_io_outVec8b_12,
                    _vs2Split_io_outVec8b_10,
                    _vs2Split_io_outVec8b_8,
                    _vs2Split_io_outVec8b_6,
                    _vs2Split_io_outVec8b_4,
                    _vs2Split_io_outVec8b_2,
                    _vs2Split_io_outVec8b_0}
                 : _vs2Split_io_outVec64b_0),
    .io_vmask
      ((_maskUsed_T_1_oneHot[0] ? _GEN_21[7:0] : 8'h0)
       | (_maskUsed_T_1_oneHot[1] ? {4'h0, _GEN_21[3:0]} : 8'h0)
       | (_maskUsed_T_1_oneHot[2] ? {6'h0, _GEN_21[1:0]} : 8'h0)
       | (_maskUsed_T_1_oneHot[3] ? {7'h0, _GEN_21[0]} : 8'h0)),
    .io_oldVd
      (((|(_typeMod_io_out_vs1Type[1:0])) ? 8'h0 : _GEN_39[7:0])
       | (_eewVs1_sew_oneHot_T_1 ? {4'h0, _GEN_39[3:0]} : 8'h0)
       | (_eewVs1_sew_oneHot_T_2 ? {6'h0, _GEN_39[1:0]} : 8'h0)
       | ((&(_typeMod_io_out_vs1Type[1:0])) ? {7'h0, _GEN_39[0]} : 8'h0)),
    .io_narrow      (_GEN_40),
    .io_isSub       (|_decoderOut_orMatrixOutputs_T_4),
    .io_isMisc      (~(|_decoderOut_orMatrixOutputs_T_2)),
    .io_isFixp      (isFixp),
    .io_widen       (widen),
    .io_widen_vs2   (widen_vs2),
    .io_vd          (_vIntFixpAlus_0_io_vd),
    .io_narrowVd    (_vIntFixpAlus_0_io_narrowVd),
    .io_cmpOut      (_vIntFixpAlus_0_io_cmpOut),
    .io_vxsat       (_vIntFixpAlus_0_io_vxsat)
  );
  VIntFixpAlu64b vIntFixpAlus_1 (
    .clock          (clock),
    .io_fire        (io_in_valid),
    .io_opcode_op   (io_in_bits_ctrl_fuOpType[5:0]),
    .io_info_vm     (io_in_bits_ctrl_vpu_vm),
    .io_info_ma     (io_in_bits_ctrl_vpu_vma),
    .io_info_uopIdx (io_in_bits_ctrl_vpu_vuopIdx[5:0]),
    .io_info_vxrm   (io_vxrm),
    .io_srcType_0   (_typeMod_io_out_vs2Type),
    .io_srcType_1   (_typeMod_io_out_vs1Type),
    .io_vdType      (_typeMod_io_out_vdType),
    .io_vs1
      (_GEN_0
         ? {_vs1Split_io_outVec32b_3, _vs1Split_io_outVec32b_1}
         : isVwsllEewVdIs32
             ? {_vs1Split_io_outVec16b_7,
                _vs1Split_io_outVec16b_5,
                _vs1Split_io_outVec16b_3,
                _vs1Split_io_outVec16b_1}
             : isVwsllEewVdIs16
                 ? {_vs1Split_io_outVec8b_15,
                    _vs1Split_io_outVec8b_13,
                    _vs1Split_io_outVec8b_11,
                    _vs1Split_io_outVec8b_9,
                    _vs1Split_io_outVec8b_7,
                    _vs1Split_io_outVec8b_5,
                    _vs1Split_io_outVec8b_3,
                    _vs1Split_io_outVec8b_1}
                 : _vs1Split_io_outVec64b_1),
    .io_vs2_adder   (widen_vs2 ? vs2GroupedVec32b_1 : _vs2Split_io_outVec64b_1),
    .io_vs2_misc
      (_GEN_1
         ? vs2GroupedVec32b_1
         : _GEN_2
             ? {_vs2Split_io_outVec16b_7,
                _vs2Split_io_outVec16b_5,
                _vs2Split_io_outVec16b_3,
                _vs2Split_io_outVec16b_1}
             : _GEN_3
                 ? {_vs2Split_io_outVec8b_15,
                    _vs2Split_io_outVec8b_13,
                    _vs2Split_io_outVec8b_11,
                    _vs2Split_io_outVec8b_9,
                    _vs2Split_io_outVec8b_7,
                    _vs2Split_io_outVec8b_5,
                    _vs2Split_io_outVec8b_3,
                    _vs2Split_io_outVec8b_1}
                 : _vs2Split_io_outVec64b_1),
    .io_vmask
      ((_maskUsed_T_1_oneHot[0] ? _GEN_21[15:8] : 8'h0)
       | (_maskUsed_T_1_oneHot[1] ? {4'h0, _GEN_21[7:4]} : 8'h0)
       | (_maskUsed_T_1_oneHot[2] ? {6'h0, _GEN_21[3:2]} : 8'h0)
       | (_maskUsed_T_1_oneHot[3] ? {7'h0, _GEN_21[1]} : 8'h0)),
    .io_oldVd
      (((|(_typeMod_io_out_vs1Type[1:0])) ? 8'h0 : _GEN_39[15:8])
       | (_eewVs1_sew_oneHot_T_1 ? {4'h0, _GEN_39[7:4]} : 8'h0)
       | (_eewVs1_sew_oneHot_T_2 ? {6'h0, _GEN_39[3:2]} : 8'h0)
       | ((&(_typeMod_io_out_vs1Type[1:0])) ? {7'h0, _GEN_39[1]} : 8'h0)),
    .io_narrow      (_GEN_40),
    .io_isSub       (|_decoderOut_orMatrixOutputs_T_4),
    .io_isMisc      (~(|_decoderOut_orMatrixOutputs_T_2)),
    .io_isFixp      (isFixp),
    .io_widen       (widen),
    .io_widen_vs2   (widen_vs2),
    .io_vd          (_vIntFixpAlus_1_io_vd),
    .io_narrowVd    (_vIntFixpAlus_1_io_narrowVd),
    .io_cmpOut      (_vIntFixpAlus_1_io_cmpOut),
    .io_vxsat       (_vIntFixpAlus_1_io_vxsat)
  );
  Mgu mgu (
    .io_in_vd
      (ctrlVec_1_vpu_isNarrow
         ? (narrowNeedCat
              ? {_vIntFixpAlus_1_io_narrowVd,
                 _vIntFixpAlus_0_io_narrowVd,
                 dataVec_1_src_2[63:0]}
              : {dataVec_1_src_2[127:64],
                 _vIntFixpAlus_1_io_narrowVd,
                 _vIntFixpAlus_0_io_narrowVd})
         : ctrlVec_1_vpu_isDstMask
             ? {112'h0,
                9'(_GEN_45 + 9'hF) >= _GEN_46 | _outCmp_T_16[15],
                9'(_GEN_45 + 9'hE) >= _GEN_46 | _outCmp_T_16[14],
                9'(_GEN_45 + 9'hD) >= _GEN_46 | _outCmp_T_16[13],
                9'(_GEN_45 + 9'hC) >= _GEN_46 | _outCmp_T_16[12],
                9'(_GEN_45 + 9'hB) >= _GEN_46 | _outCmp_T_16[11],
                9'(_GEN_45 + 9'hA) >= _GEN_46 | _outCmp_T_16[10],
                9'(_GEN_45 + 9'h9) >= _GEN_46 | _outCmp_T_16[9],
                9'(_GEN_45 + 9'h8) >= _GEN_46 | _outCmp_T_16[8],
                9'(_GEN_45 + 9'h7) >= _GEN_46 | _GEN_41[7],
                9'(_GEN_45 + 9'h6) >= _GEN_46 | _GEN_41[6],
                9'(_GEN_45 + 9'h5) >= _GEN_46 | _GEN_41[5],
                9'(_GEN_45 + 9'h4) >= _GEN_46 | _GEN_41[4],
                9'(_GEN_45 + 9'h3) >= _GEN_46 | _GEN_42[3],
                9'(_GEN_45 + 9'h2) >= _GEN_46 | _GEN_42[2],
                9'(_GEN_45 + 9'h1) >= _GEN_46 | _GEN_43[1],
                elementsComputed >= dataVec_1_src_4 | _GEN_43[0]}
             : outVd),
    .io_in_oldVd        (dataVec_1_src_2),
    .io_in_mask
      (ctrlVec_1_fuOpType == 9'h3 | ctrlVec_1_fuOpType == 9'h104
       | ctrlVec_1_fuOpType == 9'h84 | ctrlVec_1_fuOpType == 9'h5
       | ctrlVec_1_fuOpType == 9'h106 | ctrlVec_1_fuOpType == 9'h86
       | ctrlVec_1_fuOpType == 9'h19
         ? 128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
         : ctrlVec_1_fuOpType == 9'h84 | ctrlVec_1_fuOpType == 9'h86
             ? 128'h0
             : ctrlVec_1_vpu_vm
                 ? 128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                 : dataVec_1_src_3),
    .io_in_info_ta      (ctrlVec_1_vpu_vta),
    .io_in_info_ma      (ctrlVec_1_vpu_vma),
    .io_in_info_vl      (ctrlVec_1_fuOpType[5:0] == 6'h2E ? 8'h1 : dataVec_1_src_4),
    .io_in_info_vstart  (ctrlVec_1_vpu_vstart),
    .io_in_info_eew
      ((ctrlVec_1_fuOpType[8:7] == 2'h1 | ctrlVec_1_fuOpType[8:7] == 2'h2)
       & ~ctrlVec_1_vpu_isExt & ~ctrlVec_1_vpu_isDstMask
         ? 2'(ctrlVec_1_vpu_vsew + 2'h1)
         : ctrlVec_1_vpu_vsew),
    .io_in_info_vdIdx   (ctrlVec_1_vpu_vuopIdx[2:0]),
    .io_in_info_narrow  (ctrlVec_1_vpu_isNarrow),
    .io_in_info_dstMask (ctrlVec_1_vpu_isDstMask),
    .io_out_vd          (_mgu_io_out_vd),
    .io_out_active      (_mgu_io_out_active)
  );
  Mgtu mgtu (
    .io_in_vd
      (ctrlVec_1_vpu_isDstMask & ~ctrlVec_1_vpu_isOpMask ? _mgu_io_out_vd : outVd),
    .io_in_vl  (dataVec_1_src_4),
    .io_out_vd (_mgtu_io_out_vd)
  );
  assign io_out_valid = validVec_1;
  assign io_out_bits_ctrl_robIdx_flag = ctrlVec_1_robIdx_flag;
  assign io_out_bits_ctrl_robIdx_value = ctrlVec_1_robIdx_value;
  assign io_out_bits_ctrl_pdest = ctrlVec_1_pdest;
  assign io_out_bits_ctrl_vecWen = ctrlVec_1_vecWen;
  assign io_out_bits_ctrl_v0Wen = ctrlVec_1_v0Wen;
  assign io_out_bits_res_data =
    outVstartGeVl
      ? dataVec_1_src_2
      : ctrlVec_1_vpu_isDstMask ? _mgtu_io_out_vd : _mgu_io_out_vd;
  assign io_out_bits_res_vxsat =
    ~outVstartGeVl
    & (|((narrowNeedCat ? {outVxsat[7:0], 8'h0} : outVxsat) & _mgu_io_out_active));
endmodule

