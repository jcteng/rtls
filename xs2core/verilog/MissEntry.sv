// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module MissEntry(
  input          clock,
  input          reset,
  input  [3:0]   io_id,
  input          io_req_valid,
  input  [3:0]   io_req_bits_source,
  input  [35:0]  io_req_bits_addr,
  input  [40:0]  io_req_bits_vaddr,
  input          io_req_bits_cancel,
  input  [3:0]   io_miss_req_pipe_reg_req_source,
  input  [2:0]   io_miss_req_pipe_reg_req_pf_source,
  input  [4:0]   io_miss_req_pipe_reg_req_cmd,
  input  [35:0]  io_miss_req_pipe_reg_req_addr,
  input  [40:0]  io_miss_req_pipe_reg_req_vaddr,
  input          io_miss_req_pipe_reg_req_lqIdx_flag,
  input  [6:0]   io_miss_req_pipe_reg_req_lqIdx_value,
  input          io_miss_req_pipe_reg_req_full_overwrite,
  input  [2:0]   io_miss_req_pipe_reg_req_word_idx,
  input  [63:0]  io_miss_req_pipe_reg_req_amo_data,
  input  [7:0]   io_miss_req_pipe_reg_req_amo_mask,
  input  [1:0]   io_miss_req_pipe_reg_req_req_coh_state,
  input  [5:0]   io_miss_req_pipe_reg_req_id,
  input  [511:0] io_miss_req_pipe_reg_req_store_data,
  input  [63:0]  io_miss_req_pipe_reg_req_store_mask,
  input          io_miss_req_pipe_reg_merge,
  input          io_miss_req_pipe_reg_alloc,
  input          io_primary_valid,
  output         io_primary_ready,
  output         io_secondary_ready,
  output         io_secondary_reject,
  input          io_mem_acquire_ready,
  output         io_mem_acquire_valid,
  output [2:0]   io_mem_acquire_bits_opcode,
  output [2:0]   io_mem_acquire_bits_param,
  output [5:0]   io_mem_acquire_bits_source,
  output [35:0]  io_mem_acquire_bits_address,
  output         io_mem_acquire_bits_user_alias,
  output [34:0]  io_mem_acquire_bits_user_vaddr,
  output [3:0]   io_mem_acquire_bits_user_reqSource,
  output         io_mem_acquire_bits_user_needHint,
  output         io_mem_acquire_bits_echo_isKeyword,
  input          io_mem_grant_valid,
  input  [2:0]   io_mem_grant_bits_opcode,
  input  [1:0]   io_mem_grant_bits_param,
  input  [2:0]   io_mem_grant_bits_size,
  input  [9:0]   io_mem_grant_bits_sink,
  input          io_mem_grant_bits_denied,
  input  [255:0] io_mem_grant_bits_data,
  input          io_mem_grant_bits_corrupt,
  input          io_mem_finish_ready,
  output         io_mem_finish_valid,
  output [9:0]   io_mem_finish_bits_sink,
  input          io_l2_hint_valid,
  input          io_main_pipe_req_ready,
  output         io_main_pipe_req_valid,
  output [3:0]   io_main_pipe_req_bits_miss_id,
  output [3:0]   io_main_pipe_req_bits_source,
  output [4:0]   io_main_pipe_req_bits_cmd,
  output [40:0]  io_main_pipe_req_bits_vaddr,
  output [35:0]  io_main_pipe_req_bits_addr,
  output [2:0]   io_main_pipe_req_bits_word_idx,
  output [63:0]  io_main_pipe_req_bits_amo_data,
  output [7:0]   io_main_pipe_req_bits_amo_mask,
  output [2:0]   io_main_pipe_req_bits_pf_source,
  output         io_main_pipe_req_bits_access,
  output [5:0]   io_main_pipe_req_bits_id,
  input          io_main_pipe_resp,
  input          io_main_pipe_refill_resp,
  input          io_main_pipe_replay,
  output         io_refill_info_valid,
  output [511:0] io_refill_info_bits_store_data,
  output [1:0]   io_refill_info_bits_miss_param,
  output         io_refill_info_bits_error,
  output         io_block_addr_valid,
  output [35:0]  io_block_addr_bits,
  output         io_req_addr_valid,
  output [35:0]  io_req_addr_bits,
  output         io_req_handled_by_this_entry,
  output         io_forwardInfo_inflight,
  output [35:0]  io_forwardInfo_paddr,
  output [63:0]  io_forwardInfo_raw_data_0,
  output [63:0]  io_forwardInfo_raw_data_1,
  output [63:0]  io_forwardInfo_raw_data_2,
  output [63:0]  io_forwardInfo_raw_data_3,
  output [63:0]  io_forwardInfo_raw_data_4,
  output [63:0]  io_forwardInfo_raw_data_5,
  output [63:0]  io_forwardInfo_raw_data_6,
  output [63:0]  io_forwardInfo_raw_data_7,
  output         io_forwardInfo_firstbeat_valid,
  output         io_forwardInfo_lastbeat_valid,
  input          io_l2_pf_store_only,
  input          io_acquire_fired_by_pipe_reg,
  input          io_memSetPattenDetected,
  output         io_matched
);

  wire             io_secondary_ready_0;
  wire             io_primary_ready_0;
  reg  [3:0]       req_source;
  reg  [2:0]       req_pf_source;
  reg  [4:0]       req_cmd;
  reg  [35:0]      req_addr;
  reg  [40:0]      req_vaddr;
  reg              req_lqIdx_flag;
  reg  [6:0]       req_lqIdx_value;
  reg  [2:0]       req_word_idx;
  reg  [63:0]      req_amo_data;
  reg  [7:0]       req_amo_mask;
  reg  [1:0]       req_req_coh_state;
  reg  [5:0]       req_id;
  reg  [63:0]      req_store_mask;
  reg              req_valid;
  reg              isKeyword;
  reg              s_acquire;
  reg              s_grantack;
  reg              s_mainpipe_req;
  reg              w_grantfirst;
  reg              w_grantlast;
  reg              w_mainpipe_resp;
  reg              w_refill_resp;
  reg              w_l2hint;
  wire             acquire_not_sent = ~s_acquire & ~io_mem_acquire_ready;
  reg              error;
  reg              prefetch;
  reg              access;
  reg              full_overwrite;
  wire [12:0]      _r_beats1_decode_T = 13'h3F << io_mem_grant_bits_size;
  wire             r_beats1 = io_mem_grant_bits_opcode[0] & ~(_r_beats1_decode_T[5]);
  reg              r_counter;
  wire             _r_counter1_T = 1'(r_counter - 1'h1);
  reg  [1:0]       grant_param;
  reg  [63:0]      refill_and_store_data_0;
  reg  [63:0]      refill_and_store_data_1;
  reg  [63:0]      refill_and_store_data_2;
  reg  [63:0]      refill_and_store_data_3;
  reg  [63:0]      refill_and_store_data_4;
  reg  [63:0]      refill_and_store_data_5;
  reg  [63:0]      refill_and_store_data_6;
  reg  [63:0]      refill_and_store_data_7;
  wire             primary_fire =
    io_req_valid & io_primary_ready_0 & io_primary_valid & ~io_req_bits_cancel;
  reg              secondary_fired;
  wire             _full_overwrite_T_2 = io_miss_req_pipe_reg_req_source == 4'h1;
  wire             _io_mem_acquire_bits_user_needHint_T = req_source == 4'h1;
  reg              last_REG;
  reg              io_primary_ready_last_REG;
  reg              io_primary_ready_last_REG_1;
  assign io_primary_ready_0 =
    last_REG
      ? ~req_valid & ~io_primary_ready_last_REG
      : ~req_valid & (io_req_bits_source < 4'h3 | io_memSetPattenDetected)
        & ~io_primary_ready_last_REG_1;
  wire             _io_secondary_reject_T_12 = req_source > 4'h2;
  wire             _load_miss_begin_T = io_req_bits_source == 4'h0;
  wire             _io_secondary_reject_T_5 = io_req_bits_source == 4'h1;
  assign io_secondary_ready_0 =
    req_addr[35:6] == io_req_bits_addr[35:6] & req_vaddr[12] == io_req_bits_vaddr[12]
    & (acquire_not_sent & (~(|req_source) | _io_secondary_reject_T_12)
       & (_load_miss_begin_T | _io_secondary_reject_T_5) | ~w_grantfirst
       & (~(|req_source) | _io_mem_acquire_bits_user_needHint_T
          | _io_secondary_reject_T_12) & _load_miss_begin_T);
  wire             io_mem_acquire_valid_0 =
    ~s_acquire & ~(io_miss_req_pipe_reg_merge & io_miss_req_pipe_reg_req_source == 4'h1);
  wire             _grow_param_r_c_cat_T_23 = req_cmd == 5'h1;
  wire             _grow_param_r_c_cat_T_24 = req_cmd == 5'h11;
  wire             _grow_param_r_c_cat_T_26 = req_cmd == 5'h7;
  wire             _grow_param_r_c_cat_T_28 = req_cmd == 5'h4;
  wire             _grow_param_r_c_cat_T_29 = req_cmd == 5'h9;
  wire             _grow_param_r_c_cat_T_30 = req_cmd == 5'hA;
  wire             _grow_param_r_c_cat_T_31 = req_cmd == 5'hB;
  wire             _grow_param_r_c_cat_T_35 = req_cmd == 5'h8;
  wire             _grow_param_r_c_cat_T_36 = req_cmd == 5'hC;
  wire             _grow_param_r_c_cat_T_37 = req_cmd == 5'hD;
  wire             _grow_param_r_c_cat_T_38 = req_cmd == 5'hE;
  wire             _grow_param_r_c_cat_T_39 = req_cmd == 5'hF;
  wire [3:0]       _grow_param_r_T =
    {_grow_param_r_c_cat_T_23 | _grow_param_r_c_cat_T_24 | _grow_param_r_c_cat_T_26
       | _grow_param_r_c_cat_T_28 | _grow_param_r_c_cat_T_29 | _grow_param_r_c_cat_T_30
       | _grow_param_r_c_cat_T_31 | _grow_param_r_c_cat_T_35 | _grow_param_r_c_cat_T_36
       | _grow_param_r_c_cat_T_37 | _grow_param_r_c_cat_T_38 | _grow_param_r_c_cat_T_39,
     _grow_param_r_c_cat_T_23 | _grow_param_r_c_cat_T_24 | _grow_param_r_c_cat_T_26
       | _grow_param_r_c_cat_T_28 | _grow_param_r_c_cat_T_29 | _grow_param_r_c_cat_T_30
       | _grow_param_r_c_cat_T_31 | _grow_param_r_c_cat_T_35 | _grow_param_r_c_cat_T_36
       | _grow_param_r_c_cat_T_37 | _grow_param_r_c_cat_T_38 | _grow_param_r_c_cat_T_39
       | req_cmd == 5'h3 | req_cmd == 5'h6,
     req_req_coh_state};
  wire [1:0]       _grow_param_r_T_27 = {1'h0, _grow_param_r_T == 4'hC};
  wire [15:0][1:0] _GEN =
    {{2'h3},
     {2'h3},
     {2'h2},
     {_grow_param_r_T_27},
     {_grow_param_r_T_27},
     {_grow_param_r_T_27},
     {_grow_param_r_T_27},
     {_grow_param_r_T_27},
     {2'h3},
     {2'h2},
     {2'h2},
     {2'h1},
     {2'h3},
     {2'h2},
     {2'h1},
     {2'h0}};
  reg  [9:0]       grantack_sink;
  wire             io_mem_finish_valid_0 = ~s_grantack & w_grantfirst;
  wire             io_main_pipe_req_valid_0 = ~s_mainpipe_req & (w_l2hint | w_grantlast);
  wire             io_block_addr_valid_0 = req_valid & w_grantlast;
  wire [7:0][7:0]  _GEN_0 = '{8'h0, 8'h0, 8'h0, 8'h0, 8'h0, 8'h0, 8'h0, 8'h0};
  wire             refill_count = r_beats1 & ~_r_counter1_T;
  wire [7:0][7:0]  _GEN_1 =
    _io_mem_acquire_bits_user_needHint_T
      ? {{req_store_mask[63:56]},
         {req_store_mask[55:48]},
         {req_store_mask[47:40]},
         {req_store_mask[39:32]},
         {req_store_mask[31:24]},
         {req_store_mask[23:16]},
         {req_store_mask[15:8]},
         {req_store_mask[7:0]}}
      : _GEN_0;
  wire [7:0][63:0] _GEN_2 =
    {{refill_and_store_data_7},
     {refill_and_store_data_6},
     {refill_and_store_data_5},
     {refill_and_store_data_4},
     {refill_and_store_data_3},
     {refill_and_store_data_2},
     {refill_and_store_data_1},
     {refill_and_store_data_0}};
  wire [2:0]       _GEN_3 = {refill_count, 2'h0};
  wire [2:0]       idx = {~refill_count, 2'h0};
  wire [63:0]      refill_and_store_data_full_wmask =
    {{8{_GEN_1[idx][7]}},
     {8{_GEN_1[idx][6]}},
     {8{_GEN_1[idx][5]}},
     {8{_GEN_1[idx][4]}},
     {8{_GEN_1[idx][3]}},
     {8{_GEN_1[idx][2]}},
     {8{_GEN_1[idx][1]}},
     {8{_GEN_1[idx][0]}}};
  wire [63:0]      _refill_and_store_data_T_3 =
    ~refill_and_store_data_full_wmask & io_mem_grant_bits_data[63:0]
    | refill_and_store_data_full_wmask & _GEN_2[idx];
  wire [2:0]       _idx_T_4 = 3'(_GEN_3 + 3'h1);
  wire [2:0]       idx_1 = _idx_T_4 ^ 3'h4;
  wire [63:0]      refill_and_store_data_full_wmask_1 =
    {{8{_GEN_1[idx_1][7]}},
     {8{_GEN_1[idx_1][6]}},
     {8{_GEN_1[idx_1][5]}},
     {8{_GEN_1[idx_1][4]}},
     {8{_GEN_1[idx_1][3]}},
     {8{_GEN_1[idx_1][2]}},
     {8{_GEN_1[idx_1][1]}},
     {8{_GEN_1[idx_1][0]}}};
  wire [63:0]      _refill_and_store_data_T_7 =
    ~refill_and_store_data_full_wmask_1 & io_mem_grant_bits_data[127:64]
    | refill_and_store_data_full_wmask_1 & _GEN_2[idx_1];
  wire [2:0]       _idx_T_7 = 3'(_GEN_3 + 3'h2);
  wire [2:0]       idx_2 = _idx_T_7 ^ 3'h4;
  wire [63:0]      refill_and_store_data_full_wmask_2 =
    {{8{_GEN_1[idx_2][7]}},
     {8{_GEN_1[idx_2][6]}},
     {8{_GEN_1[idx_2][5]}},
     {8{_GEN_1[idx_2][4]}},
     {8{_GEN_1[idx_2][3]}},
     {8{_GEN_1[idx_2][2]}},
     {8{_GEN_1[idx_2][1]}},
     {8{_GEN_1[idx_2][0]}}};
  wire [63:0]      _refill_and_store_data_T_11 =
    ~refill_and_store_data_full_wmask_2 & io_mem_grant_bits_data[191:128]
    | refill_and_store_data_full_wmask_2 & _GEN_2[idx_2];
  wire [2:0]       _idx_T_10 = 3'(_GEN_3 + 3'h3);
  wire [2:0]       idx_3 = _idx_T_10 ^ 3'h4;
  wire [63:0]      refill_and_store_data_full_wmask_3 =
    {{8{_GEN_1[idx_3][7]}},
     {8{_GEN_1[idx_3][6]}},
     {8{_GEN_1[idx_3][5]}},
     {8{_GEN_1[idx_3][4]}},
     {8{_GEN_1[idx_3][3]}},
     {8{_GEN_1[idx_3][2]}},
     {8{_GEN_1[idx_3][1]}},
     {8{_GEN_1[idx_3][0]}}};
  wire [63:0]      _refill_and_store_data_T_15 =
    ~refill_and_store_data_full_wmask_3 & io_mem_grant_bits_data[255:192]
    | refill_and_store_data_full_wmask_3 & _GEN_2[idx_3];
  wire [2:0]       idx_4 = {refill_count, 2'h0};
  wire [63:0]      refill_and_store_data_full_wmask_4 =
    {{8{_GEN_1[idx_4][7]}},
     {8{_GEN_1[idx_4][6]}},
     {8{_GEN_1[idx_4][5]}},
     {8{_GEN_1[idx_4][4]}},
     {8{_GEN_1[idx_4][3]}},
     {8{_GEN_1[idx_4][2]}},
     {8{_GEN_1[idx_4][1]}},
     {8{_GEN_1[idx_4][0]}}};
  wire [63:0]      _refill_and_store_data_T_19 =
    ~refill_and_store_data_full_wmask_4 & io_mem_grant_bits_data[63:0]
    | refill_and_store_data_full_wmask_4 & _GEN_2[idx_4];
  wire [2:0]       _idx_T_15 = 3'(_GEN_3 + 3'h1);
  wire [63:0]      refill_and_store_data_full_wmask_5 =
    {{8{_GEN_1[_idx_T_15][7]}},
     {8{_GEN_1[_idx_T_15][6]}},
     {8{_GEN_1[_idx_T_15][5]}},
     {8{_GEN_1[_idx_T_15][4]}},
     {8{_GEN_1[_idx_T_15][3]}},
     {8{_GEN_1[_idx_T_15][2]}},
     {8{_GEN_1[_idx_T_15][1]}},
     {8{_GEN_1[_idx_T_15][0]}}};
  wire [63:0]      _refill_and_store_data_T_23 =
    ~refill_and_store_data_full_wmask_5 & io_mem_grant_bits_data[127:64]
    | refill_and_store_data_full_wmask_5 & _GEN_2[_idx_T_15];
  wire [2:0]       _idx_T_17 = 3'(_GEN_3 + 3'h2);
  wire [63:0]      refill_and_store_data_full_wmask_6 =
    {{8{_GEN_1[_idx_T_17][7]}},
     {8{_GEN_1[_idx_T_17][6]}},
     {8{_GEN_1[_idx_T_17][5]}},
     {8{_GEN_1[_idx_T_17][4]}},
     {8{_GEN_1[_idx_T_17][3]}},
     {8{_GEN_1[_idx_T_17][2]}},
     {8{_GEN_1[_idx_T_17][1]}},
     {8{_GEN_1[_idx_T_17][0]}}};
  wire [63:0]      _refill_and_store_data_T_27 =
    ~refill_and_store_data_full_wmask_6 & io_mem_grant_bits_data[191:128]
    | refill_and_store_data_full_wmask_6 & _GEN_2[_idx_T_17];
  wire [2:0]       _idx_T_19 = 3'(_GEN_3 + 3'h3);
  wire [63:0]      refill_and_store_data_full_wmask_7 =
    {{8{_GEN_1[_idx_T_19][7]}},
     {8{_GEN_1[_idx_T_19][6]}},
     {8{_GEN_1[_idx_T_19][5]}},
     {8{_GEN_1[_idx_T_19][4]}},
     {8{_GEN_1[_idx_T_19][3]}},
     {8{_GEN_1[_idx_T_19][2]}},
     {8{_GEN_1[_idx_T_19][1]}},
     {8{_GEN_1[_idx_T_19][0]}}};
  wire [63:0]      _refill_and_store_data_T_31 =
    ~refill_and_store_data_full_wmask_7 & io_mem_grant_bits_data[255:192]
    | refill_and_store_data_full_wmask_7 & _GEN_2[_idx_T_19];
  wire             _full_overwrite_T = io_miss_req_pipe_reg_req_source == 4'h1;
  wire             _GEN_4 = io_miss_req_pipe_reg_alloc & _full_overwrite_T;
  wire             _GEN_5 = io_miss_req_pipe_reg_merge & _full_overwrite_T_2;
  wire             _GEN_6 = _GEN_5 | io_miss_req_pipe_reg_alloc;
  wire             _GEN_7 = io_miss_req_pipe_reg_merge & _full_overwrite_T_2;
  always @(posedge clock) begin
    if (_GEN_6) begin
      req_source <= io_miss_req_pipe_reg_req_source;
      req_pf_source <= io_miss_req_pipe_reg_req_pf_source;
      req_cmd <= io_miss_req_pipe_reg_req_cmd;
    end
    if (_GEN_7) begin
      req_addr <= {io_miss_req_pipe_reg_req_addr[35:6], 6'h0};
      full_overwrite <= _full_overwrite_T_2 & io_miss_req_pipe_reg_req_full_overwrite;
    end
    else if (io_miss_req_pipe_reg_alloc) begin
      req_addr <= {io_miss_req_pipe_reg_req_addr[35:6], 6'h0};
      full_overwrite <= _full_overwrite_T & io_miss_req_pipe_reg_req_full_overwrite;
    end
    if (_GEN_6) begin
      req_vaddr <= io_miss_req_pipe_reg_req_vaddr;
      req_lqIdx_flag <= io_miss_req_pipe_reg_req_lqIdx_flag;
      req_lqIdx_value <= io_miss_req_pipe_reg_req_lqIdx_value;
      req_word_idx <= io_miss_req_pipe_reg_req_word_idx;
      req_amo_data <= io_miss_req_pipe_reg_req_amo_data;
      req_amo_mask <= io_miss_req_pipe_reg_req_amo_mask;
    end
    if (io_miss_req_pipe_reg_merge | io_miss_req_pipe_reg_alloc)
      req_req_coh_state <= io_miss_req_pipe_reg_req_req_coh_state;
    if (_GEN_6)
      req_id <= io_miss_req_pipe_reg_req_id;
    if (_GEN_5 | _GEN_4)
      req_store_mask <= io_miss_req_pipe_reg_req_store_mask;
    if (io_mem_grant_valid) begin
      grant_param <= io_mem_grant_bits_param;
      if (io_mem_grant_bits_opcode[0]) begin
        if (isKeyword) begin
          if (_idx_T_10 == 3'h4)
            refill_and_store_data_0 <= _refill_and_store_data_T_15;
          else if (_idx_T_7 == 3'h4)
            refill_and_store_data_0 <= _refill_and_store_data_T_11;
          else if (_idx_T_4 == 3'h4)
            refill_and_store_data_0 <= _refill_and_store_data_T_7;
          else if (refill_count)
            refill_and_store_data_0 <= _refill_and_store_data_T_3;
          else if (_GEN_7)
            refill_and_store_data_0 <= io_miss_req_pipe_reg_req_store_data[63:0];
          else if (_GEN_4)
            refill_and_store_data_0 <= io_miss_req_pipe_reg_req_store_data[63:0];
          if (_idx_T_10 == 3'h5)
            refill_and_store_data_1 <= _refill_and_store_data_T_15;
          else if (_idx_T_7 == 3'h5)
            refill_and_store_data_1 <= _refill_and_store_data_T_11;
          else if (_idx_T_4 == 3'h5)
            refill_and_store_data_1 <= _refill_and_store_data_T_7;
          else if (_GEN_7)
            refill_and_store_data_1 <= io_miss_req_pipe_reg_req_store_data[127:64];
          else if (_GEN_4)
            refill_and_store_data_1 <= io_miss_req_pipe_reg_req_store_data[127:64];
          if (_idx_T_10 == 3'h6)
            refill_and_store_data_2 <= _refill_and_store_data_T_15;
          else if (_idx_T_7 == 3'h6)
            refill_and_store_data_2 <= _refill_and_store_data_T_11;
          else if (_idx_T_4 == 3'h6)
            refill_and_store_data_2 <= _refill_and_store_data_T_7;
          else if (_GEN_7)
            refill_and_store_data_2 <= io_miss_req_pipe_reg_req_store_data[191:128];
          else if (_GEN_4)
            refill_and_store_data_2 <= io_miss_req_pipe_reg_req_store_data[191:128];
          if (&_idx_T_10)
            refill_and_store_data_3 <= _refill_and_store_data_T_15;
          else if (&_idx_T_7)
            refill_and_store_data_3 <= _refill_and_store_data_T_11;
          else if (&_idx_T_4)
            refill_and_store_data_3 <= _refill_and_store_data_T_7;
          else if (_GEN_7)
            refill_and_store_data_3 <= io_miss_req_pipe_reg_req_store_data[255:192];
          else if (_GEN_4)
            refill_and_store_data_3 <= io_miss_req_pipe_reg_req_store_data[255:192];
          if (_idx_T_10 == 3'h0)
            refill_and_store_data_4 <= _refill_and_store_data_T_15;
          else if (_idx_T_7 == 3'h0)
            refill_and_store_data_4 <= _refill_and_store_data_T_11;
          else if (_idx_T_4 == 3'h0)
            refill_and_store_data_4 <= _refill_and_store_data_T_7;
          else if (refill_count) begin
            if (_GEN_7)
              refill_and_store_data_4 <= io_miss_req_pipe_reg_req_store_data[319:256];
            else if (_GEN_4)
              refill_and_store_data_4 <= io_miss_req_pipe_reg_req_store_data[319:256];
          end
          else
            refill_and_store_data_4 <= _refill_and_store_data_T_3;
          if (_idx_T_10 == 3'h1)
            refill_and_store_data_5 <= _refill_and_store_data_T_15;
          else if (_idx_T_7 == 3'h1)
            refill_and_store_data_5 <= _refill_and_store_data_T_11;
          else if (_idx_T_4 == 3'h1)
            refill_and_store_data_5 <= _refill_and_store_data_T_7;
          else if (_GEN_7)
            refill_and_store_data_5 <= io_miss_req_pipe_reg_req_store_data[383:320];
          else if (_GEN_4)
            refill_and_store_data_5 <= io_miss_req_pipe_reg_req_store_data[383:320];
          if (_idx_T_10 == 3'h2)
            refill_and_store_data_6 <= _refill_and_store_data_T_15;
          else if (_idx_T_7 == 3'h2)
            refill_and_store_data_6 <= _refill_and_store_data_T_11;
          else if (_idx_T_4 == 3'h2)
            refill_and_store_data_6 <= _refill_and_store_data_T_7;
          else if (_GEN_7)
            refill_and_store_data_6 <= io_miss_req_pipe_reg_req_store_data[447:384];
          else if (_GEN_4)
            refill_and_store_data_6 <= io_miss_req_pipe_reg_req_store_data[447:384];
          if (_idx_T_10 == 3'h3)
            refill_and_store_data_7 <= _refill_and_store_data_T_15;
          else if (_idx_T_7 == 3'h3)
            refill_and_store_data_7 <= _refill_and_store_data_T_11;
          else if (_idx_T_4 == 3'h3)
            refill_and_store_data_7 <= _refill_and_store_data_T_7;
          else if (_GEN_7)
            refill_and_store_data_7 <= io_miss_req_pipe_reg_req_store_data[511:448];
          else if (_GEN_4)
            refill_and_store_data_7 <= io_miss_req_pipe_reg_req_store_data[511:448];
        end
        else begin
          if (_idx_T_19 == 3'h0)
            refill_and_store_data_0 <= _refill_and_store_data_T_31;
          else if (_idx_T_17 == 3'h0)
            refill_and_store_data_0 <= _refill_and_store_data_T_27;
          else if (_idx_T_15 == 3'h0)
            refill_and_store_data_0 <= _refill_and_store_data_T_23;
          else if (refill_count) begin
            if (_GEN_7)
              refill_and_store_data_0 <= io_miss_req_pipe_reg_req_store_data[63:0];
            else if (_GEN_4)
              refill_and_store_data_0 <= io_miss_req_pipe_reg_req_store_data[63:0];
          end
          else
            refill_and_store_data_0 <= _refill_and_store_data_T_19;
          if (_idx_T_19 == 3'h1)
            refill_and_store_data_1 <= _refill_and_store_data_T_31;
          else if (_idx_T_17 == 3'h1)
            refill_and_store_data_1 <= _refill_and_store_data_T_27;
          else if (_idx_T_15 == 3'h1)
            refill_and_store_data_1 <= _refill_and_store_data_T_23;
          else if (_GEN_7)
            refill_and_store_data_1 <= io_miss_req_pipe_reg_req_store_data[127:64];
          else if (_GEN_4)
            refill_and_store_data_1 <= io_miss_req_pipe_reg_req_store_data[127:64];
          if (_idx_T_19 == 3'h2)
            refill_and_store_data_2 <= _refill_and_store_data_T_31;
          else if (_idx_T_17 == 3'h2)
            refill_and_store_data_2 <= _refill_and_store_data_T_27;
          else if (_idx_T_15 == 3'h2)
            refill_and_store_data_2 <= _refill_and_store_data_T_23;
          else if (_GEN_7)
            refill_and_store_data_2 <= io_miss_req_pipe_reg_req_store_data[191:128];
          else if (_GEN_4)
            refill_and_store_data_2 <= io_miss_req_pipe_reg_req_store_data[191:128];
          if (_idx_T_19 == 3'h3)
            refill_and_store_data_3 <= _refill_and_store_data_T_31;
          else if (_idx_T_17 == 3'h3)
            refill_and_store_data_3 <= _refill_and_store_data_T_27;
          else if (_idx_T_15 == 3'h3)
            refill_and_store_data_3 <= _refill_and_store_data_T_23;
          else if (_GEN_7)
            refill_and_store_data_3 <= io_miss_req_pipe_reg_req_store_data[255:192];
          else if (_GEN_4)
            refill_and_store_data_3 <= io_miss_req_pipe_reg_req_store_data[255:192];
          if (_idx_T_19 == 3'h4)
            refill_and_store_data_4 <= _refill_and_store_data_T_31;
          else if (_idx_T_17 == 3'h4)
            refill_and_store_data_4 <= _refill_and_store_data_T_27;
          else if (_idx_T_15 == 3'h4)
            refill_and_store_data_4 <= _refill_and_store_data_T_23;
          else if (refill_count)
            refill_and_store_data_4 <= _refill_and_store_data_T_19;
          else if (_GEN_7)
            refill_and_store_data_4 <= io_miss_req_pipe_reg_req_store_data[319:256];
          else if (_GEN_4)
            refill_and_store_data_4 <= io_miss_req_pipe_reg_req_store_data[319:256];
          if (_idx_T_19 == 3'h5)
            refill_and_store_data_5 <= _refill_and_store_data_T_31;
          else if (_idx_T_17 == 3'h5)
            refill_and_store_data_5 <= _refill_and_store_data_T_27;
          else if (_idx_T_15 == 3'h5)
            refill_and_store_data_5 <= _refill_and_store_data_T_23;
          else if (_GEN_7)
            refill_and_store_data_5 <= io_miss_req_pipe_reg_req_store_data[383:320];
          else if (_GEN_4)
            refill_and_store_data_5 <= io_miss_req_pipe_reg_req_store_data[383:320];
          if (_idx_T_19 == 3'h6)
            refill_and_store_data_6 <= _refill_and_store_data_T_31;
          else if (_idx_T_17 == 3'h6)
            refill_and_store_data_6 <= _refill_and_store_data_T_27;
          else if (_idx_T_15 == 3'h6)
            refill_and_store_data_6 <= _refill_and_store_data_T_23;
          else if (_GEN_7)
            refill_and_store_data_6 <= io_miss_req_pipe_reg_req_store_data[447:384];
          else if (_GEN_4)
            refill_and_store_data_6 <= io_miss_req_pipe_reg_req_store_data[447:384];
          if (&_idx_T_19)
            refill_and_store_data_7 <= _refill_and_store_data_T_31;
          else if (&_idx_T_17)
            refill_and_store_data_7 <= _refill_and_store_data_T_27;
          else if (&_idx_T_15)
            refill_and_store_data_7 <= _refill_and_store_data_T_23;
          else if (_GEN_7)
            refill_and_store_data_7 <= io_miss_req_pipe_reg_req_store_data[511:448];
          else if (_GEN_4)
            refill_and_store_data_7 <= io_miss_req_pipe_reg_req_store_data[511:448];
        end
      end
      grantack_sink <= io_mem_grant_bits_sink;
    end
    else if (_GEN_7) begin
      refill_and_store_data_0 <= io_miss_req_pipe_reg_req_store_data[63:0];
      refill_and_store_data_1 <= io_miss_req_pipe_reg_req_store_data[127:64];
      refill_and_store_data_2 <= io_miss_req_pipe_reg_req_store_data[191:128];
      refill_and_store_data_3 <= io_miss_req_pipe_reg_req_store_data[255:192];
      refill_and_store_data_4 <= io_miss_req_pipe_reg_req_store_data[319:256];
      refill_and_store_data_5 <= io_miss_req_pipe_reg_req_store_data[383:320];
      refill_and_store_data_6 <= io_miss_req_pipe_reg_req_store_data[447:384];
      refill_and_store_data_7 <= io_miss_req_pipe_reg_req_store_data[511:448];
    end
    else if (_GEN_4) begin
      refill_and_store_data_0 <= io_miss_req_pipe_reg_req_store_data[63:0];
      refill_and_store_data_1 <= io_miss_req_pipe_reg_req_store_data[127:64];
      refill_and_store_data_2 <= io_miss_req_pipe_reg_req_store_data[191:128];
      refill_and_store_data_3 <= io_miss_req_pipe_reg_req_store_data[255:192];
      refill_and_store_data_4 <= io_miss_req_pipe_reg_req_store_data[319:256];
      refill_and_store_data_5 <= io_miss_req_pipe_reg_req_store_data[383:320];
      refill_and_store_data_6 <= io_miss_req_pipe_reg_req_store_data[447:384];
      refill_and_store_data_7 <= io_miss_req_pipe_reg_req_store_data[511:448];
    end
  end // always @(posedge)
  wire             _isKeyword_need_check_isKeyword_T_16 = req_source > 4'h2;
  wire             input_req_is_prefetch =
    io_miss_req_pipe_reg_req_cmd == 5'h2 | io_miss_req_pipe_reg_req_cmd == 5'h3;
  wire             _GEN_8 = io_miss_req_pipe_reg_req_source == 4'h2;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      req_valid <= 1'h0;
      isKeyword <= 1'h0;
      s_acquire <= 1'h1;
      s_grantack <= 1'h1;
      s_mainpipe_req <= 1'h1;
      w_grantfirst <= 1'h1;
      w_grantlast <= 1'h1;
      w_mainpipe_resp <= 1'h1;
      w_refill_resp <= 1'h1;
      w_l2hint <= 1'h1;
      error <= 1'h0;
      prefetch <= 1'h0;
      access <= 1'h0;
      r_counter <= 1'h0;
      secondary_fired <= 1'h0;
      last_REG <= 1'h0;
      io_primary_ready_last_REG <= 1'h0;
      io_primary_ready_last_REG_1 <= 1'h0;
    end
    else begin
      req_valid <=
        io_miss_req_pipe_reg_alloc
        | ~(s_grantack & w_mainpipe_resp & w_refill_resp & req_valid) & req_valid;
      if (io_miss_req_pipe_reg_merge) begin
        if (acquire_not_sent & (~(|req_source) | _isKeyword_need_check_isKeyword_T_16)
            & (~(|io_miss_req_pipe_reg_req_source) | _full_overwrite_T_2) & ~(|req_source)
            & ~(|io_miss_req_pipe_reg_req_source)
            & req_addr[35:6] == io_miss_req_pipe_reg_req_addr[35:6]
            & req_vaddr[12] == io_miss_req_pipe_reg_req_vaddr[12]
            & (acquire_not_sent & (~(|req_source) | _isKeyword_need_check_isKeyword_T_16)
               & (~(|io_miss_req_pipe_reg_req_source) | _full_overwrite_T_2)
               | ~w_grantfirst
               & (~(|req_source) | req_source == 4'h1
                  | _isKeyword_need_check_isKeyword_T_16)
               & ~(|io_miss_req_pipe_reg_req_source)))
          isKeyword <=
            req_lqIdx_flag ^ io_miss_req_pipe_reg_req_lqIdx_flag
            ^ req_lqIdx_value > io_miss_req_pipe_reg_req_lqIdx_value
              ? io_miss_req_pipe_reg_req_vaddr[5]
              : req_vaddr[5];
      end
      else if (io_miss_req_pipe_reg_alloc)
        isKeyword <=
          ~(|io_miss_req_pipe_reg_req_source) & io_miss_req_pipe_reg_req_vaddr[5];
      s_acquire <=
        io_mem_acquire_ready & io_mem_acquire_valid_0
        | (io_miss_req_pipe_reg_alloc ? io_acquire_fired_by_pipe_reg : s_acquire);
      s_grantack <=
        io_mem_finish_ready & io_mem_finish_valid_0 | ~io_miss_req_pipe_reg_alloc
        & s_grantack;
      s_mainpipe_req <=
        ~io_main_pipe_replay
        & (io_main_pipe_req_ready & io_main_pipe_req_valid_0 | ~io_miss_req_pipe_reg_alloc
           & s_mainpipe_req);
      w_grantfirst <= io_mem_grant_valid | ~io_miss_req_pipe_reg_alloc & w_grantfirst;
      if (io_mem_grant_valid) begin
        w_grantlast <=
          ~(io_mem_grant_bits_opcode[0]) | w_grantlast | (r_counter | ~r_beats1)
          & io_mem_grant_valid;
        error <= io_mem_grant_bits_denied | io_mem_grant_bits_corrupt | error;
        if (r_counter)
          r_counter <= _r_counter1_T;
        else
          r_counter <= r_beats1;
      end
      else begin
        w_grantlast <= ~io_miss_req_pipe_reg_alloc & w_grantlast;
        error <= ~io_miss_req_pipe_reg_alloc & error;
      end
      w_mainpipe_resp <=
        io_main_pipe_resp | ~(io_miss_req_pipe_reg_alloc & _GEN_8) & w_mainpipe_resp;
      w_refill_resp <=
        io_main_pipe_refill_resp | ~(io_miss_req_pipe_reg_alloc & ~_GEN_8)
        & w_refill_resp;
      w_l2hint <= io_l2_hint_valid | ~io_miss_req_pipe_reg_alloc & w_l2hint;
      prefetch <=
        ~(io_req_valid & io_req_bits_source < 4'h3 & req_valid
          & req_addr[35:6] == io_req_bits_addr[35:6] & prefetch)
        & (io_miss_req_pipe_reg_alloc
             ? input_req_is_prefetch
               & ~(io_req_valid & io_miss_req_pipe_reg_alloc
                   & io_miss_req_pipe_reg_req_addr[35:6] == io_req_bits_addr[35:6]
                   & io_miss_req_pipe_reg_req_source > 4'h2 & io_req_bits_source < 4'h3)
             : prefetch);
      access <=
        io_miss_req_pipe_reg_merge & ~input_req_is_prefetch | ~io_miss_req_pipe_reg_alloc
        & access;
      secondary_fired <=
        io_miss_req_pipe_reg_merge | ~io_miss_req_pipe_reg_alloc & secondary_fired;
      last_REG <= |(io_id[3:1]);
      io_primary_ready_last_REG <= primary_fire;
      io_primary_ready_last_REG_1 <= primary_fire;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:50];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h33; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        req_source = _RANDOM[6'h0][4:1];
        req_pf_source = _RANDOM[6'h0][7:5];
        req_cmd = _RANDOM[6'h0][12:8];
        req_addr = {_RANDOM[6'h0][31:13], _RANDOM[6'h1][16:0]};
        req_vaddr = {_RANDOM[6'h1][31:17], _RANDOM[6'h2][25:0]};
        req_lqIdx_flag = _RANDOM[6'h4][3];
        req_lqIdx_value = _RANDOM[6'h4][10:4];
        req_word_idx = _RANDOM[6'h4][14:12];
        req_amo_data = {_RANDOM[6'h4][31:15], _RANDOM[6'h5], _RANDOM[6'h6][14:0]};
        req_amo_mask = _RANDOM[6'h6][22:15];
        req_req_coh_state = _RANDOM[6'h6][24:23];
        req_id = _RANDOM[6'h6][30:25];
        req_store_mask = {_RANDOM[6'hD][31], _RANDOM[6'hE], _RANDOM[6'hF][30:0]};
        req_valid = _RANDOM[6'hF][31];
        isKeyword = _RANDOM[6'h10][0];
        s_acquire = _RANDOM[6'h10][1];
        s_grantack = _RANDOM[6'h10][2];
        s_mainpipe_req = _RANDOM[6'h10][3];
        w_grantfirst = _RANDOM[6'h10][4];
        w_grantlast = _RANDOM[6'h10][5];
        w_mainpipe_resp = _RANDOM[6'h10][6];
        w_refill_resp = _RANDOM[6'h10][7];
        w_l2hint = _RANDOM[6'h10][8];
        error = _RANDOM[6'h10][10];
        prefetch = _RANDOM[6'h10][11];
        access = _RANDOM[6'h10][12];
        full_overwrite = _RANDOM[6'h10][15];
        r_counter = _RANDOM[6'h10][16];
        grant_param = _RANDOM[6'h10][18:17];
        refill_and_store_data_0 =
          {_RANDOM[6'h10][31:19], _RANDOM[6'h11], _RANDOM[6'h12][18:0]};
        refill_and_store_data_1 =
          {_RANDOM[6'h12][31:19], _RANDOM[6'h13], _RANDOM[6'h14][18:0]};
        refill_and_store_data_2 =
          {_RANDOM[6'h14][31:19], _RANDOM[6'h15], _RANDOM[6'h16][18:0]};
        refill_and_store_data_3 =
          {_RANDOM[6'h16][31:19], _RANDOM[6'h17], _RANDOM[6'h18][18:0]};
        refill_and_store_data_4 =
          {_RANDOM[6'h18][31:19], _RANDOM[6'h19], _RANDOM[6'h1A][18:0]};
        refill_and_store_data_5 =
          {_RANDOM[6'h1A][31:19], _RANDOM[6'h1B], _RANDOM[6'h1C][18:0]};
        refill_and_store_data_6 =
          {_RANDOM[6'h1C][31:19], _RANDOM[6'h1D], _RANDOM[6'h1E][18:0]};
        refill_and_store_data_7 =
          {_RANDOM[6'h1E][31:19], _RANDOM[6'h1F], _RANDOM[6'h20][18:0]};
        secondary_fired = _RANDOM[6'h30][19];
        last_REG = _RANDOM[6'h30][26];
        io_primary_ready_last_REG = _RANDOM[6'h30][27];
        io_primary_ready_last_REG_1 = _RANDOM[6'h30][28];
        grantack_sink = _RANDOM[6'h32][15:6];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        req_valid = 1'h0;
        isKeyword = 1'h0;
        s_acquire = 1'h1;
        s_grantack = 1'h1;
        s_mainpipe_req = 1'h1;
        w_grantfirst = 1'h1;
        w_grantlast = 1'h1;
        w_mainpipe_resp = 1'h1;
        w_refill_resp = 1'h1;
        w_l2hint = 1'h1;
        error = 1'h0;
        prefetch = 1'h0;
        access = 1'h0;
        r_counter = 1'h0;
        secondary_fired = 1'h0;
        last_REG = 1'h0;
        io_primary_ready_last_REG = 1'h0;
        io_primary_ready_last_REG_1 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_primary_ready = io_primary_ready_0;
  assign io_secondary_ready = io_secondary_ready_0;
  assign io_secondary_reject =
    req_valid & req_addr[35:6] == io_req_bits_addr[35:6]
    & (~(acquire_not_sent & (~(|req_source) | _io_secondary_reject_T_12)
         & (_load_miss_begin_T | _io_secondary_reject_T_5))
       & ~(~w_grantfirst
           & (~(|req_source) | _io_mem_acquire_bits_user_needHint_T
              | _io_secondary_reject_T_12) & _load_miss_begin_T)
       | req_vaddr[12] != io_req_bits_vaddr[12]);
  assign io_mem_acquire_valid = io_mem_acquire_valid_0;
  assign io_mem_acquire_bits_opcode = {2'h3, full_overwrite};
  assign io_mem_acquire_bits_param = {1'h0, _GEN[_grow_param_r_T]};
  assign io_mem_acquire_bits_source = {2'h0, io_id};
  assign io_mem_acquire_bits_address = req_addr;
  assign io_mem_acquire_bits_user_alias = req_vaddr[12];
  assign io_mem_acquire_bits_user_vaddr = req_vaddr[40:6];
  assign io_mem_acquire_bits_user_reqSource =
    prefetch & ~secondary_fired
      ? 4'h6
      : _io_mem_acquire_bits_user_needHint_T
          ? 4'h3
          : (|req_source) ? {2'h1, req_source != 4'h2, 1'h0} : 4'h2;
  assign io_mem_acquire_bits_user_needHint =
    ~io_l2_pf_store_only | _io_mem_acquire_bits_user_needHint_T;
  assign io_mem_acquire_bits_echo_isKeyword = isKeyword;
  assign io_mem_finish_valid = io_mem_finish_valid_0;
  assign io_mem_finish_bits_sink = grantack_sink;
  assign io_main_pipe_req_valid = io_main_pipe_req_valid_0;
  assign io_main_pipe_req_bits_miss_id = io_id;
  assign io_main_pipe_req_bits_source = req_source;
  assign io_main_pipe_req_bits_cmd = req_cmd;
  assign io_main_pipe_req_bits_vaddr = req_vaddr;
  assign io_main_pipe_req_bits_addr = req_addr;
  assign io_main_pipe_req_bits_word_idx = req_word_idx;
  assign io_main_pipe_req_bits_amo_data = req_amo_data;
  assign io_main_pipe_req_bits_amo_mask = req_amo_mask;
  assign io_main_pipe_req_bits_pf_source = req_pf_source;
  assign io_main_pipe_req_bits_access = access;
  assign io_main_pipe_req_bits_id = req_id;
  assign io_refill_info_valid = io_block_addr_valid_0;
  assign io_refill_info_bits_store_data =
    {refill_and_store_data_7,
     refill_and_store_data_6,
     refill_and_store_data_5,
     refill_and_store_data_4,
     refill_and_store_data_3,
     refill_and_store_data_2,
     refill_and_store_data_1,
     refill_and_store_data_0};
  assign io_refill_info_bits_miss_param = grant_param;
  assign io_refill_info_bits_error = error;
  assign io_block_addr_valid = io_block_addr_valid_0;
  assign io_block_addr_bits = req_addr;
  assign io_req_addr_valid = req_valid;
  assign io_req_addr_bits = req_addr;
  assign io_req_handled_by_this_entry =
    primary_fire | io_req_valid & io_secondary_ready_0 & ~io_req_bits_cancel;
  assign io_forwardInfo_inflight = req_valid;
  assign io_forwardInfo_paddr = req_addr;
  assign io_forwardInfo_raw_data_0 = refill_and_store_data_0;
  assign io_forwardInfo_raw_data_1 = refill_and_store_data_1;
  assign io_forwardInfo_raw_data_2 = refill_and_store_data_2;
  assign io_forwardInfo_raw_data_3 = refill_and_store_data_3;
  assign io_forwardInfo_raw_data_4 = refill_and_store_data_4;
  assign io_forwardInfo_raw_data_5 = refill_and_store_data_5;
  assign io_forwardInfo_raw_data_6 = refill_and_store_data_6;
  assign io_forwardInfo_raw_data_7 = refill_and_store_data_7;
  assign io_forwardInfo_firstbeat_valid = isKeyword ? w_grantlast : w_grantfirst;
  assign io_forwardInfo_lastbeat_valid = isKeyword ? w_grantfirst : w_grantlast;
  assign io_matched = req_valid & req_addr[35:6] == io_req_bits_addr[35:6] & ~prefetch;
endmodule

