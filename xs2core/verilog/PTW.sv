// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module PTW(
  input         clock,
  input         reset,
  input         io_sfence_valid,
  input  [15:0] io_csr_satp_asid,
  input  [43:0] io_csr_satp_ppn,
  input         io_csr_satp_changed,
  input  [15:0] io_csr_vsatp_asid,
  input  [43:0] io_csr_vsatp_ppn,
  input         io_csr_vsatp_changed,
  input  [15:0] io_csr_hgatp_asid,
  input         io_csr_hgatp_changed,
  output        io_req_ready,
  input         io_req_valid,
  input  [28:0] io_req_bits_req_info_vpn,
  input  [1:0]  io_req_bits_req_info_s2xlate,
  input  [1:0]  io_req_bits_req_info_source,
  input         io_req_bits_l1Hit,
  input  [28:0] io_req_bits_ppn,
  input         io_req_bits_stage1Hit,
  input  [25:0] io_req_bits_stage1_entry_0_tag,
  input  [15:0] io_req_bits_stage1_entry_0_asid,
  input  [13:0] io_req_bits_stage1_entry_0_vmid,
  input         io_req_bits_stage1_entry_0_perm_d,
  input         io_req_bits_stage1_entry_0_perm_a,
  input         io_req_bits_stage1_entry_0_perm_g,
  input         io_req_bits_stage1_entry_0_perm_u,
  input         io_req_bits_stage1_entry_0_perm_x,
  input         io_req_bits_stage1_entry_0_perm_w,
  input         io_req_bits_stage1_entry_0_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_0_level,
  input         io_req_bits_stage1_entry_0_v,
  input  [25:0] io_req_bits_stage1_entry_0_ppn,
  input  [2:0]  io_req_bits_stage1_entry_0_ppn_low,
  input         io_req_bits_stage1_entry_0_af,
  input         io_req_bits_stage1_entry_0_pf,
  input  [25:0] io_req_bits_stage1_entry_1_tag,
  input  [15:0] io_req_bits_stage1_entry_1_asid,
  input  [13:0] io_req_bits_stage1_entry_1_vmid,
  input         io_req_bits_stage1_entry_1_perm_d,
  input         io_req_bits_stage1_entry_1_perm_a,
  input         io_req_bits_stage1_entry_1_perm_g,
  input         io_req_bits_stage1_entry_1_perm_u,
  input         io_req_bits_stage1_entry_1_perm_x,
  input         io_req_bits_stage1_entry_1_perm_w,
  input         io_req_bits_stage1_entry_1_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_1_level,
  input         io_req_bits_stage1_entry_1_v,
  input  [25:0] io_req_bits_stage1_entry_1_ppn,
  input  [2:0]  io_req_bits_stage1_entry_1_ppn_low,
  input         io_req_bits_stage1_entry_1_af,
  input         io_req_bits_stage1_entry_1_pf,
  input  [25:0] io_req_bits_stage1_entry_2_tag,
  input  [15:0] io_req_bits_stage1_entry_2_asid,
  input  [13:0] io_req_bits_stage1_entry_2_vmid,
  input         io_req_bits_stage1_entry_2_perm_d,
  input         io_req_bits_stage1_entry_2_perm_a,
  input         io_req_bits_stage1_entry_2_perm_g,
  input         io_req_bits_stage1_entry_2_perm_u,
  input         io_req_bits_stage1_entry_2_perm_x,
  input         io_req_bits_stage1_entry_2_perm_w,
  input         io_req_bits_stage1_entry_2_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_2_level,
  input         io_req_bits_stage1_entry_2_v,
  input  [25:0] io_req_bits_stage1_entry_2_ppn,
  input  [2:0]  io_req_bits_stage1_entry_2_ppn_low,
  input         io_req_bits_stage1_entry_2_af,
  input         io_req_bits_stage1_entry_2_pf,
  input  [25:0] io_req_bits_stage1_entry_3_tag,
  input  [15:0] io_req_bits_stage1_entry_3_asid,
  input  [13:0] io_req_bits_stage1_entry_3_vmid,
  input         io_req_bits_stage1_entry_3_perm_d,
  input         io_req_bits_stage1_entry_3_perm_a,
  input         io_req_bits_stage1_entry_3_perm_g,
  input         io_req_bits_stage1_entry_3_perm_u,
  input         io_req_bits_stage1_entry_3_perm_x,
  input         io_req_bits_stage1_entry_3_perm_w,
  input         io_req_bits_stage1_entry_3_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_3_level,
  input         io_req_bits_stage1_entry_3_v,
  input  [25:0] io_req_bits_stage1_entry_3_ppn,
  input  [2:0]  io_req_bits_stage1_entry_3_ppn_low,
  input         io_req_bits_stage1_entry_3_af,
  input         io_req_bits_stage1_entry_3_pf,
  input  [25:0] io_req_bits_stage1_entry_4_tag,
  input  [15:0] io_req_bits_stage1_entry_4_asid,
  input  [13:0] io_req_bits_stage1_entry_4_vmid,
  input         io_req_bits_stage1_entry_4_perm_d,
  input         io_req_bits_stage1_entry_4_perm_a,
  input         io_req_bits_stage1_entry_4_perm_g,
  input         io_req_bits_stage1_entry_4_perm_u,
  input         io_req_bits_stage1_entry_4_perm_x,
  input         io_req_bits_stage1_entry_4_perm_w,
  input         io_req_bits_stage1_entry_4_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_4_level,
  input         io_req_bits_stage1_entry_4_v,
  input  [25:0] io_req_bits_stage1_entry_4_ppn,
  input  [2:0]  io_req_bits_stage1_entry_4_ppn_low,
  input         io_req_bits_stage1_entry_4_af,
  input         io_req_bits_stage1_entry_4_pf,
  input  [25:0] io_req_bits_stage1_entry_5_tag,
  input  [15:0] io_req_bits_stage1_entry_5_asid,
  input  [13:0] io_req_bits_stage1_entry_5_vmid,
  input         io_req_bits_stage1_entry_5_perm_d,
  input         io_req_bits_stage1_entry_5_perm_a,
  input         io_req_bits_stage1_entry_5_perm_g,
  input         io_req_bits_stage1_entry_5_perm_u,
  input         io_req_bits_stage1_entry_5_perm_x,
  input         io_req_bits_stage1_entry_5_perm_w,
  input         io_req_bits_stage1_entry_5_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_5_level,
  input         io_req_bits_stage1_entry_5_v,
  input  [25:0] io_req_bits_stage1_entry_5_ppn,
  input  [2:0]  io_req_bits_stage1_entry_5_ppn_low,
  input         io_req_bits_stage1_entry_5_af,
  input         io_req_bits_stage1_entry_5_pf,
  input  [25:0] io_req_bits_stage1_entry_6_tag,
  input  [15:0] io_req_bits_stage1_entry_6_asid,
  input  [13:0] io_req_bits_stage1_entry_6_vmid,
  input         io_req_bits_stage1_entry_6_perm_d,
  input         io_req_bits_stage1_entry_6_perm_a,
  input         io_req_bits_stage1_entry_6_perm_g,
  input         io_req_bits_stage1_entry_6_perm_u,
  input         io_req_bits_stage1_entry_6_perm_x,
  input         io_req_bits_stage1_entry_6_perm_w,
  input         io_req_bits_stage1_entry_6_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_6_level,
  input         io_req_bits_stage1_entry_6_v,
  input  [25:0] io_req_bits_stage1_entry_6_ppn,
  input  [2:0]  io_req_bits_stage1_entry_6_ppn_low,
  input         io_req_bits_stage1_entry_6_af,
  input         io_req_bits_stage1_entry_6_pf,
  input  [25:0] io_req_bits_stage1_entry_7_tag,
  input  [15:0] io_req_bits_stage1_entry_7_asid,
  input  [13:0] io_req_bits_stage1_entry_7_vmid,
  input         io_req_bits_stage1_entry_7_perm_d,
  input         io_req_bits_stage1_entry_7_perm_a,
  input         io_req_bits_stage1_entry_7_perm_g,
  input         io_req_bits_stage1_entry_7_perm_u,
  input         io_req_bits_stage1_entry_7_perm_x,
  input         io_req_bits_stage1_entry_7_perm_w,
  input         io_req_bits_stage1_entry_7_perm_r,
  input  [1:0]  io_req_bits_stage1_entry_7_level,
  input         io_req_bits_stage1_entry_7_v,
  input  [25:0] io_req_bits_stage1_entry_7_ppn,
  input  [2:0]  io_req_bits_stage1_entry_7_ppn_low,
  input         io_req_bits_stage1_entry_7_af,
  input         io_req_bits_stage1_entry_7_pf,
  input         io_req_bits_stage1_pteidx_0,
  input         io_req_bits_stage1_pteidx_1,
  input         io_req_bits_stage1_pteidx_2,
  input         io_req_bits_stage1_pteidx_3,
  input         io_req_bits_stage1_pteidx_4,
  input         io_req_bits_stage1_pteidx_5,
  input         io_req_bits_stage1_pteidx_6,
  input         io_req_bits_stage1_pteidx_7,
  input         io_req_bits_stage1_not_super,
  input         io_resp_ready,
  output        io_resp_valid,
  output [1:0]  io_resp_bits_source,
  output [1:0]  io_resp_bits_s2xlate,
  output [25:0] io_resp_bits_resp_entry_0_tag,
  output [15:0] io_resp_bits_resp_entry_0_asid,
  output [13:0] io_resp_bits_resp_entry_0_vmid,
  output        io_resp_bits_resp_entry_0_perm_d,
  output        io_resp_bits_resp_entry_0_perm_a,
  output        io_resp_bits_resp_entry_0_perm_g,
  output        io_resp_bits_resp_entry_0_perm_u,
  output        io_resp_bits_resp_entry_0_perm_x,
  output        io_resp_bits_resp_entry_0_perm_w,
  output        io_resp_bits_resp_entry_0_perm_r,
  output [1:0]  io_resp_bits_resp_entry_0_level,
  output        io_resp_bits_resp_entry_0_v,
  output [25:0] io_resp_bits_resp_entry_0_ppn,
  output [2:0]  io_resp_bits_resp_entry_0_ppn_low,
  output        io_resp_bits_resp_entry_0_af,
  output        io_resp_bits_resp_entry_0_pf,
  output [25:0] io_resp_bits_resp_entry_1_tag,
  output [15:0] io_resp_bits_resp_entry_1_asid,
  output [13:0] io_resp_bits_resp_entry_1_vmid,
  output        io_resp_bits_resp_entry_1_perm_d,
  output        io_resp_bits_resp_entry_1_perm_a,
  output        io_resp_bits_resp_entry_1_perm_g,
  output        io_resp_bits_resp_entry_1_perm_u,
  output        io_resp_bits_resp_entry_1_perm_x,
  output        io_resp_bits_resp_entry_1_perm_w,
  output        io_resp_bits_resp_entry_1_perm_r,
  output [1:0]  io_resp_bits_resp_entry_1_level,
  output        io_resp_bits_resp_entry_1_v,
  output [25:0] io_resp_bits_resp_entry_1_ppn,
  output [2:0]  io_resp_bits_resp_entry_1_ppn_low,
  output        io_resp_bits_resp_entry_1_af,
  output        io_resp_bits_resp_entry_1_pf,
  output [25:0] io_resp_bits_resp_entry_2_tag,
  output [15:0] io_resp_bits_resp_entry_2_asid,
  output [13:0] io_resp_bits_resp_entry_2_vmid,
  output        io_resp_bits_resp_entry_2_perm_d,
  output        io_resp_bits_resp_entry_2_perm_a,
  output        io_resp_bits_resp_entry_2_perm_g,
  output        io_resp_bits_resp_entry_2_perm_u,
  output        io_resp_bits_resp_entry_2_perm_x,
  output        io_resp_bits_resp_entry_2_perm_w,
  output        io_resp_bits_resp_entry_2_perm_r,
  output [1:0]  io_resp_bits_resp_entry_2_level,
  output        io_resp_bits_resp_entry_2_v,
  output [25:0] io_resp_bits_resp_entry_2_ppn,
  output [2:0]  io_resp_bits_resp_entry_2_ppn_low,
  output        io_resp_bits_resp_entry_2_af,
  output        io_resp_bits_resp_entry_2_pf,
  output [25:0] io_resp_bits_resp_entry_3_tag,
  output [15:0] io_resp_bits_resp_entry_3_asid,
  output [13:0] io_resp_bits_resp_entry_3_vmid,
  output        io_resp_bits_resp_entry_3_perm_d,
  output        io_resp_bits_resp_entry_3_perm_a,
  output        io_resp_bits_resp_entry_3_perm_g,
  output        io_resp_bits_resp_entry_3_perm_u,
  output        io_resp_bits_resp_entry_3_perm_x,
  output        io_resp_bits_resp_entry_3_perm_w,
  output        io_resp_bits_resp_entry_3_perm_r,
  output [1:0]  io_resp_bits_resp_entry_3_level,
  output        io_resp_bits_resp_entry_3_v,
  output [25:0] io_resp_bits_resp_entry_3_ppn,
  output [2:0]  io_resp_bits_resp_entry_3_ppn_low,
  output        io_resp_bits_resp_entry_3_af,
  output        io_resp_bits_resp_entry_3_pf,
  output [25:0] io_resp_bits_resp_entry_4_tag,
  output [15:0] io_resp_bits_resp_entry_4_asid,
  output [13:0] io_resp_bits_resp_entry_4_vmid,
  output        io_resp_bits_resp_entry_4_perm_d,
  output        io_resp_bits_resp_entry_4_perm_a,
  output        io_resp_bits_resp_entry_4_perm_g,
  output        io_resp_bits_resp_entry_4_perm_u,
  output        io_resp_bits_resp_entry_4_perm_x,
  output        io_resp_bits_resp_entry_4_perm_w,
  output        io_resp_bits_resp_entry_4_perm_r,
  output [1:0]  io_resp_bits_resp_entry_4_level,
  output        io_resp_bits_resp_entry_4_v,
  output [25:0] io_resp_bits_resp_entry_4_ppn,
  output [2:0]  io_resp_bits_resp_entry_4_ppn_low,
  output        io_resp_bits_resp_entry_4_af,
  output        io_resp_bits_resp_entry_4_pf,
  output [25:0] io_resp_bits_resp_entry_5_tag,
  output [15:0] io_resp_bits_resp_entry_5_asid,
  output [13:0] io_resp_bits_resp_entry_5_vmid,
  output        io_resp_bits_resp_entry_5_perm_d,
  output        io_resp_bits_resp_entry_5_perm_a,
  output        io_resp_bits_resp_entry_5_perm_g,
  output        io_resp_bits_resp_entry_5_perm_u,
  output        io_resp_bits_resp_entry_5_perm_x,
  output        io_resp_bits_resp_entry_5_perm_w,
  output        io_resp_bits_resp_entry_5_perm_r,
  output [1:0]  io_resp_bits_resp_entry_5_level,
  output        io_resp_bits_resp_entry_5_v,
  output [25:0] io_resp_bits_resp_entry_5_ppn,
  output [2:0]  io_resp_bits_resp_entry_5_ppn_low,
  output        io_resp_bits_resp_entry_5_af,
  output        io_resp_bits_resp_entry_5_pf,
  output [25:0] io_resp_bits_resp_entry_6_tag,
  output [15:0] io_resp_bits_resp_entry_6_asid,
  output [13:0] io_resp_bits_resp_entry_6_vmid,
  output        io_resp_bits_resp_entry_6_perm_d,
  output        io_resp_bits_resp_entry_6_perm_a,
  output        io_resp_bits_resp_entry_6_perm_g,
  output        io_resp_bits_resp_entry_6_perm_u,
  output        io_resp_bits_resp_entry_6_perm_x,
  output        io_resp_bits_resp_entry_6_perm_w,
  output        io_resp_bits_resp_entry_6_perm_r,
  output [1:0]  io_resp_bits_resp_entry_6_level,
  output        io_resp_bits_resp_entry_6_v,
  output [25:0] io_resp_bits_resp_entry_6_ppn,
  output [2:0]  io_resp_bits_resp_entry_6_ppn_low,
  output        io_resp_bits_resp_entry_6_af,
  output        io_resp_bits_resp_entry_6_pf,
  output [25:0] io_resp_bits_resp_entry_7_tag,
  output [15:0] io_resp_bits_resp_entry_7_asid,
  output [13:0] io_resp_bits_resp_entry_7_vmid,
  output        io_resp_bits_resp_entry_7_perm_d,
  output        io_resp_bits_resp_entry_7_perm_a,
  output        io_resp_bits_resp_entry_7_perm_g,
  output        io_resp_bits_resp_entry_7_perm_u,
  output        io_resp_bits_resp_entry_7_perm_x,
  output        io_resp_bits_resp_entry_7_perm_w,
  output        io_resp_bits_resp_entry_7_perm_r,
  output [1:0]  io_resp_bits_resp_entry_7_level,
  output        io_resp_bits_resp_entry_7_v,
  output [25:0] io_resp_bits_resp_entry_7_ppn,
  output [2:0]  io_resp_bits_resp_entry_7_ppn_low,
  output        io_resp_bits_resp_entry_7_af,
  output        io_resp_bits_resp_entry_7_pf,
  output        io_resp_bits_resp_pteidx_0,
  output        io_resp_bits_resp_pteidx_1,
  output        io_resp_bits_resp_pteidx_2,
  output        io_resp_bits_resp_pteidx_3,
  output        io_resp_bits_resp_pteidx_4,
  output        io_resp_bits_resp_pteidx_5,
  output        io_resp_bits_resp_pteidx_6,
  output        io_resp_bits_resp_pteidx_7,
  output        io_resp_bits_resp_not_super,
  output [28:0] io_resp_bits_h_resp_entry_tag,
  output [13:0] io_resp_bits_h_resp_entry_vmid,
  output [23:0] io_resp_bits_h_resp_entry_ppn,
  output        io_resp_bits_h_resp_entry_perm_d,
  output        io_resp_bits_h_resp_entry_perm_a,
  output        io_resp_bits_h_resp_entry_perm_g,
  output        io_resp_bits_h_resp_entry_perm_u,
  output        io_resp_bits_h_resp_entry_perm_x,
  output        io_resp_bits_h_resp_entry_perm_w,
  output        io_resp_bits_h_resp_entry_perm_r,
  output [1:0]  io_resp_bits_h_resp_entry_level,
  output        io_resp_bits_h_resp_gpf,
  output        io_resp_bits_h_resp_gaf,
  input         io_llptw_ready,
  output        io_llptw_valid,
  output [28:0] io_llptw_bits_req_info_vpn,
  output [1:0]  io_llptw_bits_req_info_s2xlate,
  output [1:0]  io_llptw_bits_req_info_source,
  input         io_hptw_req_ready,
  output        io_hptw_req_valid,
  output [1:0]  io_hptw_req_bits_source,
  output [28:0] io_hptw_req_bits_gvpn,
  input         io_hptw_resp_valid,
  input  [28:0] io_hptw_resp_bits_h_resp_entry_tag,
  input  [13:0] io_hptw_resp_bits_h_resp_entry_vmid,
  input  [23:0] io_hptw_resp_bits_h_resp_entry_ppn,
  input         io_hptw_resp_bits_h_resp_entry_perm_d,
  input         io_hptw_resp_bits_h_resp_entry_perm_a,
  input         io_hptw_resp_bits_h_resp_entry_perm_g,
  input         io_hptw_resp_bits_h_resp_entry_perm_u,
  input         io_hptw_resp_bits_h_resp_entry_perm_x,
  input         io_hptw_resp_bits_h_resp_entry_perm_w,
  input         io_hptw_resp_bits_h_resp_entry_perm_r,
  input  [1:0]  io_hptw_resp_bits_h_resp_entry_level,
  input         io_hptw_resp_bits_h_resp_gpf,
  input         io_hptw_resp_bits_h_resp_gaf,
  input         io_mem_req_ready,
  output        io_mem_req_valid,
  output [35:0] io_mem_req_bits_addr,
  input         io_mem_resp_valid,
  input  [63:0] io_mem_resp_bits,
  input         io_mem_mask,
  output [35:0] io_pmp_req_bits_addr,
  input         io_pmp_resp_ld,
  input         io_pmp_resp_mmio,
  output [28:0] io_refill_req_info_vpn,
  output [1:0]  io_refill_req_info_s2xlate,
  output [1:0]  io_refill_req_info_source,
  output [1:0]  io_refill_level,
  output [5:0]  io_perf_0_value,
  output [5:0]  io_perf_1_value,
  output [5:0]  io_perf_2_value,
  output [5:0]  io_perf_3_value,
  output [5:0]  io_perf_4_value,
  output [5:0]  io_perf_5_value,
  output [5:0]  io_perf_6_value
);

  wire             finish;
  reg  [1:0]       req_s2xlate;
  wire             onlyS2xlate = req_s2xlate == 2'h2;
  wire [15:0]      satp_asid = (|req_s2xlate) ? io_csr_vsatp_asid : io_csr_satp_asid;
  wire [28:0]      satp_ppn =
    (|req_s2xlate) ? io_csr_vsatp_ppn[28:0] : io_csr_satp_ppn[28:0];
  wire             flush =
    io_sfence_valid | io_csr_satp_changed | io_csr_vsatp_changed | io_csr_hgatp_changed;
  wire             s2xlate = (|req_s2xlate) & req_s2xlate != 2'h1;
  reg  [1:0]       level;
  reg  [1:0]       af_level;
  reg  [28:0]      ppn;
  reg  [28:0]      vpn;
  reg              l1Hit;
  reg              pte_valid;
  wire [19:0]      pte_ppn_high = pte_valid ? io_mem_resp_bits[53:34] : 20'h0;
  wire [23:0]      pte_ppn = pte_valid ? io_mem_resp_bits[33:10] : 24'h0;
  wire             pte_perm_d = pte_valid & io_mem_resp_bits[7];
  wire             pte_perm_a = pte_valid & io_mem_resp_bits[6];
  wire             pte_perm_g = pte_valid & io_mem_resp_bits[5];
  wire             pte_perm_u = pte_valid & io_mem_resp_bits[4];
  wire             pte_perm_x = ~pte_valid | io_mem_resp_bits[3];
  wire             pte_perm_w = ~pte_valid | io_mem_resp_bits[2];
  wire             pte_perm_r = ~pte_valid | io_mem_resp_bits[1];
  reg              s_pmp_check;
  reg              s_mem_req;
  reg              s_llptw_req;
  reg              w_mem_resp;
  reg              s_hptw_req;
  reg              w_hptw_resp;
  reg              s_last_hptw_req;
  reg              w_last_hptw_resp;
  reg              mem_addr_update;
  reg              idle;
  wire             sent_to_pmp = ~idle & (~s_pmp_check | mem_addr_update) & ~finish;
  wire             _find_pte_T = pte_perm_r | pte_perm_x;
  wire             _to_find_pte_T = level == 2'h1;
  wire             pageFault =
    ~(~pte_valid | io_mem_resp_bits[0]) | ~pte_perm_r & pte_perm_w
    | (_find_pte_T | pte_perm_w)
    & ~(level == 2'h2 | _to_find_pte_T & pte_ppn[8:0] == 9'h0 | ~(|level)
        & pte_ppn[17:0] == 18'h0);
  reg              accessFault;
  reg              hptw_pageFault;
  reg              hptw_accessFault;
  reg              last_s2xlate;
  wire             perfEvents_0_2 = idle & io_req_valid;
  reg              stage1Hit;
  reg  [25:0]      stage1_entry_0_tag;
  reg  [15:0]      stage1_entry_0_asid;
  reg  [13:0]      stage1_entry_0_vmid;
  reg              stage1_entry_0_perm_d;
  reg              stage1_entry_0_perm_a;
  reg              stage1_entry_0_perm_g;
  reg              stage1_entry_0_perm_u;
  reg              stage1_entry_0_perm_x;
  reg              stage1_entry_0_perm_w;
  reg              stage1_entry_0_perm_r;
  reg  [1:0]       stage1_entry_0_level;
  reg              stage1_entry_0_v;
  reg  [25:0]      stage1_entry_0_ppn;
  reg  [2:0]       stage1_entry_0_ppn_low;
  reg              stage1_entry_0_af;
  reg              stage1_entry_0_pf;
  reg  [25:0]      stage1_entry_1_tag;
  reg  [15:0]      stage1_entry_1_asid;
  reg  [13:0]      stage1_entry_1_vmid;
  reg              stage1_entry_1_perm_d;
  reg              stage1_entry_1_perm_a;
  reg              stage1_entry_1_perm_g;
  reg              stage1_entry_1_perm_u;
  reg              stage1_entry_1_perm_x;
  reg              stage1_entry_1_perm_w;
  reg              stage1_entry_1_perm_r;
  reg  [1:0]       stage1_entry_1_level;
  reg              stage1_entry_1_v;
  reg  [25:0]      stage1_entry_1_ppn;
  reg  [2:0]       stage1_entry_1_ppn_low;
  reg              stage1_entry_1_af;
  reg              stage1_entry_1_pf;
  reg  [25:0]      stage1_entry_2_tag;
  reg  [15:0]      stage1_entry_2_asid;
  reg  [13:0]      stage1_entry_2_vmid;
  reg              stage1_entry_2_perm_d;
  reg              stage1_entry_2_perm_a;
  reg              stage1_entry_2_perm_g;
  reg              stage1_entry_2_perm_u;
  reg              stage1_entry_2_perm_x;
  reg              stage1_entry_2_perm_w;
  reg              stage1_entry_2_perm_r;
  reg  [1:0]       stage1_entry_2_level;
  reg              stage1_entry_2_v;
  reg  [25:0]      stage1_entry_2_ppn;
  reg  [2:0]       stage1_entry_2_ppn_low;
  reg              stage1_entry_2_af;
  reg              stage1_entry_2_pf;
  reg  [25:0]      stage1_entry_3_tag;
  reg  [15:0]      stage1_entry_3_asid;
  reg  [13:0]      stage1_entry_3_vmid;
  reg              stage1_entry_3_perm_d;
  reg              stage1_entry_3_perm_a;
  reg              stage1_entry_3_perm_g;
  reg              stage1_entry_3_perm_u;
  reg              stage1_entry_3_perm_x;
  reg              stage1_entry_3_perm_w;
  reg              stage1_entry_3_perm_r;
  reg  [1:0]       stage1_entry_3_level;
  reg              stage1_entry_3_v;
  reg  [25:0]      stage1_entry_3_ppn;
  reg  [2:0]       stage1_entry_3_ppn_low;
  reg              stage1_entry_3_af;
  reg              stage1_entry_3_pf;
  reg  [25:0]      stage1_entry_4_tag;
  reg  [15:0]      stage1_entry_4_asid;
  reg  [13:0]      stage1_entry_4_vmid;
  reg              stage1_entry_4_perm_d;
  reg              stage1_entry_4_perm_a;
  reg              stage1_entry_4_perm_g;
  reg              stage1_entry_4_perm_u;
  reg              stage1_entry_4_perm_x;
  reg              stage1_entry_4_perm_w;
  reg              stage1_entry_4_perm_r;
  reg  [1:0]       stage1_entry_4_level;
  reg              stage1_entry_4_v;
  reg  [25:0]      stage1_entry_4_ppn;
  reg  [2:0]       stage1_entry_4_ppn_low;
  reg              stage1_entry_4_af;
  reg              stage1_entry_4_pf;
  reg  [25:0]      stage1_entry_5_tag;
  reg  [15:0]      stage1_entry_5_asid;
  reg  [13:0]      stage1_entry_5_vmid;
  reg              stage1_entry_5_perm_d;
  reg              stage1_entry_5_perm_a;
  reg              stage1_entry_5_perm_g;
  reg              stage1_entry_5_perm_u;
  reg              stage1_entry_5_perm_x;
  reg              stage1_entry_5_perm_w;
  reg              stage1_entry_5_perm_r;
  reg  [1:0]       stage1_entry_5_level;
  reg              stage1_entry_5_v;
  reg  [25:0]      stage1_entry_5_ppn;
  reg  [2:0]       stage1_entry_5_ppn_low;
  reg              stage1_entry_5_af;
  reg              stage1_entry_5_pf;
  reg  [25:0]      stage1_entry_6_tag;
  reg  [15:0]      stage1_entry_6_asid;
  reg  [13:0]      stage1_entry_6_vmid;
  reg              stage1_entry_6_perm_d;
  reg              stage1_entry_6_perm_a;
  reg              stage1_entry_6_perm_g;
  reg              stage1_entry_6_perm_u;
  reg              stage1_entry_6_perm_x;
  reg              stage1_entry_6_perm_w;
  reg              stage1_entry_6_perm_r;
  reg  [1:0]       stage1_entry_6_level;
  reg              stage1_entry_6_v;
  reg  [25:0]      stage1_entry_6_ppn;
  reg  [2:0]       stage1_entry_6_ppn_low;
  reg              stage1_entry_6_af;
  reg              stage1_entry_6_pf;
  reg  [25:0]      stage1_entry_7_tag;
  reg  [15:0]      stage1_entry_7_asid;
  reg  [13:0]      stage1_entry_7_vmid;
  reg              stage1_entry_7_perm_d;
  reg              stage1_entry_7_perm_a;
  reg              stage1_entry_7_perm_g;
  reg              stage1_entry_7_perm_u;
  reg              stage1_entry_7_perm_x;
  reg              stage1_entry_7_perm_w;
  reg              stage1_entry_7_perm_r;
  reg  [1:0]       stage1_entry_7_level;
  reg              stage1_entry_7_v;
  reg  [25:0]      stage1_entry_7_ppn;
  reg  [2:0]       stage1_entry_7_ppn_low;
  reg              stage1_entry_7_af;
  reg              stage1_entry_7_pf;
  reg              stage1_pteidx_0;
  reg              stage1_pteidx_1;
  reg              stage1_pteidx_2;
  reg              stage1_pteidx_3;
  reg              stage1_pteidx_4;
  reg              stage1_pteidx_5;
  reg              stage1_pteidx_6;
  reg              stage1_pteidx_7;
  reg              stage1_not_super;
  reg              hptw_resp_stage2;
  wire             ppn_af = s2xlate ? (|(pte_ppn_high[19:5])) : (|pte_ppn_high);
  wire             guest_fault = hptw_pageFault | hptw_accessFault;
  wire             find_pte = _find_pte_T | pte_perm_w | ppn_af | pageFault;
  reg  [1:0]       source;
  wire [32:0]      _GEN =
    af_level == 2'h0
      ? {satp_ppn[23:0], vpn[26:18]}
      : {l1Hit ? ppn[23:0] : pte_ppn, vpn[17:9]};
  reg  [28:0]      hptw_resp_entry_tag;
  reg  [13:0]      hptw_resp_entry_vmid;
  reg  [23:0]      hptw_resp_entry_ppn;
  reg              hptw_resp_entry_perm_d;
  reg              hptw_resp_entry_perm_a;
  reg              hptw_resp_entry_perm_g;
  reg              hptw_resp_entry_perm_u;
  reg              hptw_resp_entry_perm_x;
  reg              hptw_resp_entry_perm_w;
  reg              hptw_resp_entry_perm_r;
  reg  [1:0]       hptw_resp_entry_level;
  reg              hptw_resp_gpf;
  reg              hptw_resp_gaf;
  wire [3:0]       gpaddr_idx_hi_1 =
    {stage1_pteidx_7, stage1_pteidx_6, stage1_pteidx_5, stage1_pteidx_4};
  wire [2:0]       _gpaddr_idx_T_2 =
    {stage1_pteidx_7, stage1_pteidx_6, stage1_pteidx_5}
    | {stage1_pteidx_3, stage1_pteidx_2, stage1_pteidx_1};
  wire             _gpaddr_idx_T_4 = _gpaddr_idx_T_2[2] | _gpaddr_idx_T_2[0];
  wire [2:0]       gpaddr_idx =
    {|gpaddr_idx_hi_1, |(_gpaddr_idx_T_2[2:1]), _gpaddr_idx_T_4};
  wire [7:0][25:0] _GEN_0 =
    {{stage1_entry_7_tag},
     {stage1_entry_6_tag},
     {stage1_entry_5_tag},
     {stage1_entry_4_tag},
     {stage1_entry_3_tag},
     {stage1_entry_2_tag},
     {stage1_entry_1_tag},
     {stage1_entry_0_tag}};
  wire [7:0][1:0]  _GEN_1 =
    {{stage1_entry_7_level},
     {stage1_entry_6_level},
     {stage1_entry_5_level},
     {stage1_entry_4_level},
     {stage1_entry_3_level},
     {stage1_entry_2_level},
     {stage1_entry_1_level},
     {stage1_entry_0_level}};
  wire [7:0][25:0] _GEN_2 =
    {{stage1_entry_7_ppn},
     {stage1_entry_6_ppn},
     {stage1_entry_5_ppn},
     {stage1_entry_4_ppn},
     {stage1_entry_3_ppn},
     {stage1_entry_2_ppn},
     {stage1_entry_1_ppn},
     {stage1_entry_0_ppn}};
  wire [7:0][2:0]  _GEN_3 =
    {{stage1_entry_7_ppn_low},
     {stage1_entry_6_ppn_low},
     {stage1_entry_5_ppn_low},
     {stage1_entry_4_ppn_low},
     {stage1_entry_3_ppn_low},
     {stage1_entry_2_ppn_low},
     {stage1_entry_1_ppn_low},
     {stage1_entry_0_ppn_low}};
  wire [3:0][28:0] _GEN_4 =
    {{29'h0},
     {{_GEN_2[gpaddr_idx], _GEN_3[gpaddr_idx]}},
     {{_GEN_2[gpaddr_idx][25:6],
       _GEN_0[gpaddr_idx][5:0],
       |gpaddr_idx_hi_1,
       |(_gpaddr_idx_T_2[2:1]),
       _gpaddr_idx_T_4}},
     {{_GEN_2[gpaddr_idx][25:15],
       _GEN_0[gpaddr_idx][14:0],
       |gpaddr_idx_hi_1,
       |(_gpaddr_idx_T_2[2:1]),
       _gpaddr_idx_T_4}}};
  wire [40:0]      gpaddr =
    stage1Hit
      ? {_GEN_4[_GEN_1[gpaddr_idx]], 12'h0}
      : onlyS2xlate
          ? {vpn, 12'h0}
          : s_last_hptw_req
              ? {5'h0, _GEN, 3'h0}
              : {pte_ppn_high[4:0],
                 level == 2'h1
                   ? {pte_ppn[23:9], vpn[8:0]}
                   : (|level) ? pte_ppn : {pte_ppn[23:18], vpn[17:0]},
                 12'h0};
  wire [3:0][23:0] _GEN_5 =
    {{24'h0},
     {hptw_resp_entry_ppn},
     {{hptw_resp_entry_ppn[23:9], gpaddr[20:12]}},
     {{hptw_resp_entry_ppn[23:18], gpaddr[29:12]}}};
  wire             ptw_resp_1_pf = pageFault & ~accessFault & ~ppn_af;
  wire             ptw_resp_1_af = accessFault | ppn_af;
  wire [1:0]       ptw_resp_1_level = accessFault ? af_level : level;
  wire [25:0]      ptw_resp_1_ppn = {pte_ppn_high[4:0], pte_ppn[23:3]};
  wire             io_resp_valid_0 =
    stage1Hit
      ? ~idle & hptw_resp_stage2
      : ~idle & mem_addr_update & ~last_s2xlate
        & (guest_fault | w_mem_resp & find_pte | s_pmp_check & accessFault | onlyS2xlate);
  wire             io_llptw_valid_0 =
    ~s_llptw_req & _to_find_pte_T & ~find_pte & ~accessFault;
  wire [35:0]      io_pmp_req_bits_addr_0 =
    s2xlate ? {_GEN_5[hptw_resp_entry_level], gpaddr[11:0]} : {_GEN, 3'h0};
  wire             io_mem_req_valid_0 =
    ~s_mem_req & ~io_mem_mask & ~accessFault & s_pmp_check;
  wire             io_hptw_req_valid_0 = ~s_hptw_req | ~s_last_hptw_req;
  wire             _GEN_6 = perfEvents_0_2 & io_req_bits_stage1Hit;
  wire             _GEN_7 = io_hptw_resp_valid & ~w_hptw_resp;
  wire             _GEN_8 = _GEN_7 & stage1Hit;
  wire             _GEN_9 = io_resp_ready & io_resp_valid_0;
  wire             _GEN_10 = perfEvents_0_2 & ~io_req_bits_stage1Hit;
  wire             _GEN_11 = _GEN_10 | _GEN_6;
  wire             perfEvents_4_2 = io_mem_req_ready & io_mem_req_valid_0;
  wire             _GEN_12 =
    ~(|level) & ~onlyS2xlate & ~(guest_fault | find_pte | accessFault);
  wire             _GEN_13 = s2xlate & last_s2xlate;
  assign finish =
    mem_addr_update & ~_GEN_12 & (io_llptw_valid_0 | ~_GEN_13 & io_resp_valid_0);
  reg              perfEvents_5_2;
  reg              io_perf_0_value_REG;
  reg              io_perf_0_value_REG_1;
  reg              io_perf_1_value_REG;
  reg              io_perf_1_value_REG_1;
  reg              io_perf_2_value_REG;
  reg              io_perf_2_value_REG_1;
  reg              io_perf_3_value_REG;
  reg              io_perf_3_value_REG_1;
  reg              io_perf_4_value_REG;
  reg              io_perf_4_value_REG_1;
  reg              io_perf_5_value_REG;
  reg              io_perf_5_value_REG_1;
  reg              io_perf_6_value_REG;
  reg              io_perf_6_value_REG_1;
  wire             _GEN_14 =
    sent_to_pmp ? io_pmp_resp_ld | io_pmp_resp_mmio : accessFault;
  always @(posedge clock) begin
    if (_GEN_11)
      req_s2xlate <= io_req_bits_req_info_s2xlate;
    if (_GEN_10) begin
      ppn <= io_req_bits_l1Hit ? io_req_bits_ppn : satp_ppn;
      vpn <= io_req_bits_req_info_vpn;
      l1Hit <= io_req_bits_l1Hit;
    end
    accessFault <=
      ~flush
      & (~mem_addr_update | _GEN_12 | io_llptw_valid_0 | _GEN_13 | ~io_resp_valid_0
           ? ~_GEN_10 & _GEN_14
           : ~(_GEN_9 | _GEN_10) & _GEN_14);
    if (perfEvents_0_2) begin
      stage1Hit <= io_req_bits_stage1Hit;
      stage1_entry_0_tag <= io_req_bits_stage1_entry_0_tag;
      stage1_entry_0_asid <= io_req_bits_stage1_entry_0_asid;
      stage1_entry_0_vmid <= io_req_bits_stage1_entry_0_vmid;
      stage1_entry_0_perm_d <= io_req_bits_stage1_entry_0_perm_d;
      stage1_entry_0_perm_a <= io_req_bits_stage1_entry_0_perm_a;
      stage1_entry_0_perm_g <= io_req_bits_stage1_entry_0_perm_g;
      stage1_entry_0_perm_u <= io_req_bits_stage1_entry_0_perm_u;
      stage1_entry_0_perm_x <= io_req_bits_stage1_entry_0_perm_x;
      stage1_entry_0_perm_w <= io_req_bits_stage1_entry_0_perm_w;
      stage1_entry_0_perm_r <= io_req_bits_stage1_entry_0_perm_r;
      stage1_entry_0_level <= io_req_bits_stage1_entry_0_level;
      stage1_entry_0_v <= io_req_bits_stage1_entry_0_v;
      stage1_entry_0_ppn <= io_req_bits_stage1_entry_0_ppn;
      stage1_entry_0_ppn_low <= io_req_bits_stage1_entry_0_ppn_low;
      stage1_entry_0_af <= io_req_bits_stage1_entry_0_af;
      stage1_entry_0_pf <= io_req_bits_stage1_entry_0_pf;
      stage1_entry_1_tag <= io_req_bits_stage1_entry_1_tag;
      stage1_entry_1_asid <= io_req_bits_stage1_entry_1_asid;
      stage1_entry_1_vmid <= io_req_bits_stage1_entry_1_vmid;
      stage1_entry_1_perm_d <= io_req_bits_stage1_entry_1_perm_d;
      stage1_entry_1_perm_a <= io_req_bits_stage1_entry_1_perm_a;
      stage1_entry_1_perm_g <= io_req_bits_stage1_entry_1_perm_g;
      stage1_entry_1_perm_u <= io_req_bits_stage1_entry_1_perm_u;
      stage1_entry_1_perm_x <= io_req_bits_stage1_entry_1_perm_x;
      stage1_entry_1_perm_w <= io_req_bits_stage1_entry_1_perm_w;
      stage1_entry_1_perm_r <= io_req_bits_stage1_entry_1_perm_r;
      stage1_entry_1_level <= io_req_bits_stage1_entry_1_level;
      stage1_entry_1_v <= io_req_bits_stage1_entry_1_v;
      stage1_entry_1_ppn <= io_req_bits_stage1_entry_1_ppn;
      stage1_entry_1_ppn_low <= io_req_bits_stage1_entry_1_ppn_low;
      stage1_entry_1_af <= io_req_bits_stage1_entry_1_af;
      stage1_entry_1_pf <= io_req_bits_stage1_entry_1_pf;
      stage1_entry_2_tag <= io_req_bits_stage1_entry_2_tag;
      stage1_entry_2_asid <= io_req_bits_stage1_entry_2_asid;
      stage1_entry_2_vmid <= io_req_bits_stage1_entry_2_vmid;
      stage1_entry_2_perm_d <= io_req_bits_stage1_entry_2_perm_d;
      stage1_entry_2_perm_a <= io_req_bits_stage1_entry_2_perm_a;
      stage1_entry_2_perm_g <= io_req_bits_stage1_entry_2_perm_g;
      stage1_entry_2_perm_u <= io_req_bits_stage1_entry_2_perm_u;
      stage1_entry_2_perm_x <= io_req_bits_stage1_entry_2_perm_x;
      stage1_entry_2_perm_w <= io_req_bits_stage1_entry_2_perm_w;
      stage1_entry_2_perm_r <= io_req_bits_stage1_entry_2_perm_r;
      stage1_entry_2_level <= io_req_bits_stage1_entry_2_level;
      stage1_entry_2_v <= io_req_bits_stage1_entry_2_v;
      stage1_entry_2_ppn <= io_req_bits_stage1_entry_2_ppn;
      stage1_entry_2_ppn_low <= io_req_bits_stage1_entry_2_ppn_low;
      stage1_entry_2_af <= io_req_bits_stage1_entry_2_af;
      stage1_entry_2_pf <= io_req_bits_stage1_entry_2_pf;
      stage1_entry_3_tag <= io_req_bits_stage1_entry_3_tag;
      stage1_entry_3_asid <= io_req_bits_stage1_entry_3_asid;
      stage1_entry_3_vmid <= io_req_bits_stage1_entry_3_vmid;
      stage1_entry_3_perm_d <= io_req_bits_stage1_entry_3_perm_d;
      stage1_entry_3_perm_a <= io_req_bits_stage1_entry_3_perm_a;
      stage1_entry_3_perm_g <= io_req_bits_stage1_entry_3_perm_g;
      stage1_entry_3_perm_u <= io_req_bits_stage1_entry_3_perm_u;
      stage1_entry_3_perm_x <= io_req_bits_stage1_entry_3_perm_x;
      stage1_entry_3_perm_w <= io_req_bits_stage1_entry_3_perm_w;
      stage1_entry_3_perm_r <= io_req_bits_stage1_entry_3_perm_r;
      stage1_entry_3_level <= io_req_bits_stage1_entry_3_level;
      stage1_entry_3_v <= io_req_bits_stage1_entry_3_v;
      stage1_entry_3_ppn <= io_req_bits_stage1_entry_3_ppn;
      stage1_entry_3_ppn_low <= io_req_bits_stage1_entry_3_ppn_low;
      stage1_entry_3_af <= io_req_bits_stage1_entry_3_af;
      stage1_entry_3_pf <= io_req_bits_stage1_entry_3_pf;
      stage1_entry_4_tag <= io_req_bits_stage1_entry_4_tag;
      stage1_entry_4_asid <= io_req_bits_stage1_entry_4_asid;
      stage1_entry_4_vmid <= io_req_bits_stage1_entry_4_vmid;
      stage1_entry_4_perm_d <= io_req_bits_stage1_entry_4_perm_d;
      stage1_entry_4_perm_a <= io_req_bits_stage1_entry_4_perm_a;
      stage1_entry_4_perm_g <= io_req_bits_stage1_entry_4_perm_g;
      stage1_entry_4_perm_u <= io_req_bits_stage1_entry_4_perm_u;
      stage1_entry_4_perm_x <= io_req_bits_stage1_entry_4_perm_x;
      stage1_entry_4_perm_w <= io_req_bits_stage1_entry_4_perm_w;
      stage1_entry_4_perm_r <= io_req_bits_stage1_entry_4_perm_r;
      stage1_entry_4_level <= io_req_bits_stage1_entry_4_level;
      stage1_entry_4_v <= io_req_bits_stage1_entry_4_v;
      stage1_entry_4_ppn <= io_req_bits_stage1_entry_4_ppn;
      stage1_entry_4_ppn_low <= io_req_bits_stage1_entry_4_ppn_low;
      stage1_entry_4_af <= io_req_bits_stage1_entry_4_af;
      stage1_entry_4_pf <= io_req_bits_stage1_entry_4_pf;
      stage1_entry_5_tag <= io_req_bits_stage1_entry_5_tag;
      stage1_entry_5_asid <= io_req_bits_stage1_entry_5_asid;
      stage1_entry_5_vmid <= io_req_bits_stage1_entry_5_vmid;
      stage1_entry_5_perm_d <= io_req_bits_stage1_entry_5_perm_d;
      stage1_entry_5_perm_a <= io_req_bits_stage1_entry_5_perm_a;
      stage1_entry_5_perm_g <= io_req_bits_stage1_entry_5_perm_g;
      stage1_entry_5_perm_u <= io_req_bits_stage1_entry_5_perm_u;
      stage1_entry_5_perm_x <= io_req_bits_stage1_entry_5_perm_x;
      stage1_entry_5_perm_w <= io_req_bits_stage1_entry_5_perm_w;
      stage1_entry_5_perm_r <= io_req_bits_stage1_entry_5_perm_r;
      stage1_entry_5_level <= io_req_bits_stage1_entry_5_level;
      stage1_entry_5_v <= io_req_bits_stage1_entry_5_v;
      stage1_entry_5_ppn <= io_req_bits_stage1_entry_5_ppn;
      stage1_entry_5_ppn_low <= io_req_bits_stage1_entry_5_ppn_low;
      stage1_entry_5_af <= io_req_bits_stage1_entry_5_af;
      stage1_entry_5_pf <= io_req_bits_stage1_entry_5_pf;
      stage1_entry_6_tag <= io_req_bits_stage1_entry_6_tag;
      stage1_entry_6_asid <= io_req_bits_stage1_entry_6_asid;
      stage1_entry_6_vmid <= io_req_bits_stage1_entry_6_vmid;
      stage1_entry_6_perm_d <= io_req_bits_stage1_entry_6_perm_d;
      stage1_entry_6_perm_a <= io_req_bits_stage1_entry_6_perm_a;
      stage1_entry_6_perm_g <= io_req_bits_stage1_entry_6_perm_g;
      stage1_entry_6_perm_u <= io_req_bits_stage1_entry_6_perm_u;
      stage1_entry_6_perm_x <= io_req_bits_stage1_entry_6_perm_x;
      stage1_entry_6_perm_w <= io_req_bits_stage1_entry_6_perm_w;
      stage1_entry_6_perm_r <= io_req_bits_stage1_entry_6_perm_r;
      stage1_entry_6_level <= io_req_bits_stage1_entry_6_level;
      stage1_entry_6_v <= io_req_bits_stage1_entry_6_v;
      stage1_entry_6_ppn <= io_req_bits_stage1_entry_6_ppn;
      stage1_entry_6_ppn_low <= io_req_bits_stage1_entry_6_ppn_low;
      stage1_entry_6_af <= io_req_bits_stage1_entry_6_af;
      stage1_entry_6_pf <= io_req_bits_stage1_entry_6_pf;
      stage1_entry_7_tag <= io_req_bits_stage1_entry_7_tag;
      stage1_entry_7_asid <= io_req_bits_stage1_entry_7_asid;
      stage1_entry_7_vmid <= io_req_bits_stage1_entry_7_vmid;
      stage1_entry_7_perm_d <= io_req_bits_stage1_entry_7_perm_d;
      stage1_entry_7_perm_a <= io_req_bits_stage1_entry_7_perm_a;
      stage1_entry_7_perm_g <= io_req_bits_stage1_entry_7_perm_g;
      stage1_entry_7_perm_u <= io_req_bits_stage1_entry_7_perm_u;
      stage1_entry_7_perm_x <= io_req_bits_stage1_entry_7_perm_x;
      stage1_entry_7_perm_w <= io_req_bits_stage1_entry_7_perm_w;
      stage1_entry_7_perm_r <= io_req_bits_stage1_entry_7_perm_r;
      stage1_entry_7_level <= io_req_bits_stage1_entry_7_level;
      stage1_entry_7_v <= io_req_bits_stage1_entry_7_v;
      stage1_entry_7_ppn <= io_req_bits_stage1_entry_7_ppn;
      stage1_entry_7_ppn_low <= io_req_bits_stage1_entry_7_ppn_low;
      stage1_entry_7_af <= io_req_bits_stage1_entry_7_af;
      stage1_entry_7_pf <= io_req_bits_stage1_entry_7_pf;
      stage1_pteidx_0 <= io_req_bits_stage1_pteidx_0;
      stage1_pteidx_1 <= io_req_bits_stage1_pteidx_1;
      stage1_pteidx_2 <= io_req_bits_stage1_pteidx_2;
      stage1_pteidx_3 <= io_req_bits_stage1_pteidx_3;
      stage1_pteidx_4 <= io_req_bits_stage1_pteidx_4;
      stage1_pteidx_5 <= io_req_bits_stage1_pteidx_5;
      stage1_pteidx_6 <= io_req_bits_stage1_pteidx_6;
      stage1_pteidx_7 <= io_req_bits_stage1_pteidx_7;
      stage1_not_super <= io_req_bits_stage1_not_super;
      source <= io_req_bits_req_info_source;
    end
    hptw_resp_stage2 <= _GEN_8 | ~_GEN_6 & hptw_resp_stage2;
    if (io_hptw_resp_valid) begin
      hptw_resp_entry_tag <= io_hptw_resp_bits_h_resp_entry_tag;
      hptw_resp_entry_vmid <= io_hptw_resp_bits_h_resp_entry_vmid;
      hptw_resp_entry_ppn <= io_hptw_resp_bits_h_resp_entry_ppn;
      hptw_resp_entry_perm_d <= io_hptw_resp_bits_h_resp_entry_perm_d;
      hptw_resp_entry_perm_a <= io_hptw_resp_bits_h_resp_entry_perm_a;
      hptw_resp_entry_perm_g <= io_hptw_resp_bits_h_resp_entry_perm_g;
      hptw_resp_entry_perm_u <= io_hptw_resp_bits_h_resp_entry_perm_u;
      hptw_resp_entry_perm_x <= io_hptw_resp_bits_h_resp_entry_perm_x;
      hptw_resp_entry_perm_w <= io_hptw_resp_bits_h_resp_entry_perm_w;
      hptw_resp_entry_perm_r <= io_hptw_resp_bits_h_resp_entry_perm_r;
      hptw_resp_entry_level <= io_hptw_resp_bits_h_resp_entry_level;
      hptw_resp_gpf <= io_hptw_resp_bits_h_resp_gpf;
      hptw_resp_gaf <= io_hptw_resp_bits_h_resp_gaf;
    end
    io_perf_0_value_REG <= perfEvents_0_2;
    io_perf_0_value_REG_1 <= io_perf_0_value_REG;
    io_perf_1_value_REG <= ~idle;
    io_perf_1_value_REG_1 <= io_perf_1_value_REG;
    io_perf_2_value_REG <= idle;
    io_perf_2_value_REG_1 <= io_perf_2_value_REG;
    io_perf_3_value_REG <= io_resp_valid_0 & ~io_resp_ready;
    io_perf_3_value_REG_1 <= io_perf_3_value_REG;
    io_perf_4_value_REG <= perfEvents_4_2;
    io_perf_4_value_REG_1 <= io_perf_4_value_REG;
    io_perf_5_value_REG <= perfEvents_5_2;
    io_perf_5_value_REG_1 <= io_perf_5_value_REG;
    io_perf_6_value_REG <= io_mem_req_valid_0 & ~io_mem_req_ready;
    io_perf_6_value_REG_1 <= io_perf_6_value_REG;
  end // always @(posedge)
  wire [1:0]       _GEN_15 = {1'h0, io_req_bits_l1Hit};
  wire             _GEN_16 = ~_GEN_10 & (_GEN_9 & stage1Hit | ~_GEN_6 & idle);
  wire             _GEN_17 =
    (|io_req_bits_req_info_s2xlate) & io_req_bits_req_info_s2xlate != 2'h1;
  wire             _GEN_18 = _GEN_10 ? _GEN_17 : ~_GEN_6 & last_s2xlate;
  wire             _GEN_19 = io_hptw_req_ready & io_hptw_req_valid_0;
  wire             _GEN_20 = _GEN_19 & ~s_hptw_req;
  wire             _GEN_21 = _GEN_7 & ~stage1Hit;
  wire             _GEN_22 = _GEN_19 & ~s_last_hptw_req;
  wire             _GEN_23 = io_hptw_resp_valid & ~w_last_hptw_resp;
  wire             _GEN_24 = sent_to_pmp & ~mem_addr_update;
  wire             _GEN_25 = accessFault & ~idle;
  wire             _GEN_26 = guest_fault & ~idle;
  wire             _GEN_27 = _GEN_26 | _GEN_25;
  wire             _GEN_28 = _GEN_26 | _GEN_25 | _GEN_23 | _GEN_21 & onlyS2xlate;
  wire             _GEN_29 = ~_GEN_28 & _GEN_18;
  wire             _GEN_30 = io_mem_resp_valid & ~w_mem_resp;
  wire             _GEN_31 = ~_GEN_30 & (_GEN_27 | s_llptw_req);
  wire             _GEN_32 = _GEN_30 | _GEN_28 | mem_addr_update;
  wire             _GEN_33 = mem_addr_update & _GEN_12;
  wire             _GEN_34 = io_llptw_ready & io_llptw_valid_0;
  wire             _GEN_35 = accessFault | pageFault | ppn_af;
  wire             _GEN_36 = ~mem_addr_update | _GEN_12;
  wire             _GEN_37 = io_resp_valid_0 & _GEN_9;
  wire             _GEN_38 = ~_GEN_13 & _GEN_37;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      level <= 2'h0;
      af_level <= 2'h0;
      pte_valid <= 1'h0;
      s_pmp_check <= 1'h1;
      s_mem_req <= 1'h1;
      s_llptw_req <= 1'h1;
      w_mem_resp <= 1'h1;
      s_hptw_req <= 1'h1;
      w_hptw_resp <= 1'h1;
      s_last_hptw_req <= 1'h1;
      w_last_hptw_resp <= 1'h1;
      mem_addr_update <= 1'h0;
      idle <= 1'h1;
      hptw_pageFault <= 1'h0;
      hptw_accessFault <= 1'h0;
      last_s2xlate <= 1'h0;
      perfEvents_5_2 <= 1'h0;
    end
    else begin
      if (_GEN_33)
        level <= 2'(level + 2'h1);
      else if (_GEN_10)
        level <= _GEN_15;
      if (_GEN_30)
        af_level <= 2'(af_level + 2'h1);
      else if (_GEN_10)
        af_level <= _GEN_15;
      pte_valid <= _GEN_30 | ~_GEN_10 & pte_valid;
      s_pmp_check <=
        flush | _GEN_26 | _GEN_25 | _GEN_24
        | (~_GEN_21 | onlyS2xlate | io_hptw_resp_bits_h_resp_gpf
           | io_hptw_resp_bits_h_resp_gaf) & (~_GEN_10 | _GEN_17) & s_pmp_check;
      s_mem_req <=
        flush | (~_GEN_33 | s2xlate) & (perfEvents_4_2 | _GEN_27 | ~_GEN_24 & s_mem_req);
      s_llptw_req <=
        flush
        | (mem_addr_update
             ? _GEN_12 | (io_llptw_valid_0 ? _GEN_34 | _GEN_31 : _GEN_38 | _GEN_31)
             : _GEN_31);
      w_mem_resp <= flush | _GEN_30 | ~perfEvents_4_2 & (_GEN_27 | w_mem_resp);
      s_hptw_req <=
        flush | ~(mem_addr_update & _GEN_12 & s2xlate)
        & (_GEN_26 | _GEN_25 | _GEN_20
           | (_GEN_10 ? ~(_GEN_17 | _GEN_6) & s_hptw_req : ~_GEN_6 & s_hptw_req));
      w_hptw_resp <=
        flush | _GEN_26 | _GEN_25 | _GEN_21 | ~_GEN_20 & (_GEN_8 | w_hptw_resp);
      s_last_hptw_req <=
        flush | (~mem_addr_update | _GEN_12 | io_llptw_valid_0 | ~_GEN_13 | _GEN_35)
        & (_GEN_26 | _GEN_25 | _GEN_22 | s_last_hptw_req);
      w_last_hptw_resp <=
        flush | _GEN_26 | _GEN_25 | _GEN_23 | ~_GEN_22 & w_last_hptw_resp;
      mem_addr_update <=
        ~flush
        & (mem_addr_update
             ? ~_GEN_12
               & (io_llptw_valid_0
                    ? ~_GEN_34 & _GEN_32
                    : _GEN_13 ? _GEN_35 & _GEN_32 : ~_GEN_37 & _GEN_32)
             : _GEN_32);
      idle <=
        flush
        | (_GEN_36 ? _GEN_16 : io_llptw_valid_0 ? _GEN_34 | _GEN_16 : _GEN_38 | _GEN_16);
      if (_GEN_23 | _GEN_21) begin
        hptw_pageFault <= io_hptw_resp_bits_h_resp_gpf;
        hptw_accessFault <= io_hptw_resp_bits_h_resp_gaf;
      end
      else begin
        hptw_pageFault <= ~_GEN_11 & hptw_pageFault;
        hptw_accessFault <= ~_GEN_11 & hptw_accessFault;
      end
      if (_GEN_36)
        last_s2xlate <= _GEN_29;
      else if (io_llptw_valid_0)
        last_s2xlate <= ~(_GEN_34 | _GEN_28) & _GEN_18;
      else if (_GEN_13)
        last_s2xlate <= ~(_GEN_35 | _GEN_28) & _GEN_18;
      else
        last_s2xlate <= _GEN_29;
      perfEvents_5_2 <= perfEvents_4_2 | ~io_mem_resp_valid & perfEvents_5_2;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:31];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          _RANDOM[i[4:0]] = `RANDOM;
        end
        req_s2xlate = _RANDOM[5'h0][1:0];
        level = _RANDOM[5'h0][3:2];
        af_level = _RANDOM[5'h0][5:4];
        ppn = {_RANDOM[5'h0][31:6], _RANDOM[5'h1][2:0]};
        vpn = _RANDOM[5'h1][31:3];
        l1Hit = _RANDOM[5'h2][0];
        pte_valid = _RANDOM[5'h2][1];
        s_pmp_check = _RANDOM[5'h2][2];
        s_mem_req = _RANDOM[5'h2][3];
        s_llptw_req = _RANDOM[5'h2][4];
        w_mem_resp = _RANDOM[5'h2][5];
        s_hptw_req = _RANDOM[5'h2][6];
        w_hptw_resp = _RANDOM[5'h2][7];
        s_last_hptw_req = _RANDOM[5'h2][8];
        w_last_hptw_resp = _RANDOM[5'h2][9];
        mem_addr_update = _RANDOM[5'h2][10];
        idle = _RANDOM[5'h2][11];
        accessFault = _RANDOM[5'h2][12];
        hptw_pageFault = _RANDOM[5'h2][13];
        hptw_accessFault = _RANDOM[5'h2][14];
        last_s2xlate = _RANDOM[5'h2][15];
        stage1Hit = _RANDOM[5'h2][16];
        stage1_entry_0_tag = {_RANDOM[5'h2][31:17], _RANDOM[5'h3][10:0]};
        stage1_entry_0_asid = _RANDOM[5'h3][26:11];
        stage1_entry_0_vmid = {_RANDOM[5'h3][31:27], _RANDOM[5'h4][8:0]};
        stage1_entry_0_perm_d = _RANDOM[5'h4][9];
        stage1_entry_0_perm_a = _RANDOM[5'h4][10];
        stage1_entry_0_perm_g = _RANDOM[5'h4][11];
        stage1_entry_0_perm_u = _RANDOM[5'h4][12];
        stage1_entry_0_perm_x = _RANDOM[5'h4][13];
        stage1_entry_0_perm_w = _RANDOM[5'h4][14];
        stage1_entry_0_perm_r = _RANDOM[5'h4][15];
        stage1_entry_0_level = _RANDOM[5'h4][17:16];
        stage1_entry_0_v = _RANDOM[5'h4][19];
        stage1_entry_0_ppn = {_RANDOM[5'h4][31:20], _RANDOM[5'h5][13:0]};
        stage1_entry_0_ppn_low = _RANDOM[5'h5][16:14];
        stage1_entry_0_af = _RANDOM[5'h5][17];
        stage1_entry_0_pf = _RANDOM[5'h5][18];
        stage1_entry_1_tag = {_RANDOM[5'h5][31:19], _RANDOM[5'h6][12:0]};
        stage1_entry_1_asid = _RANDOM[5'h6][28:13];
        stage1_entry_1_vmid = {_RANDOM[5'h6][31:29], _RANDOM[5'h7][10:0]};
        stage1_entry_1_perm_d = _RANDOM[5'h7][11];
        stage1_entry_1_perm_a = _RANDOM[5'h7][12];
        stage1_entry_1_perm_g = _RANDOM[5'h7][13];
        stage1_entry_1_perm_u = _RANDOM[5'h7][14];
        stage1_entry_1_perm_x = _RANDOM[5'h7][15];
        stage1_entry_1_perm_w = _RANDOM[5'h7][16];
        stage1_entry_1_perm_r = _RANDOM[5'h7][17];
        stage1_entry_1_level = _RANDOM[5'h7][19:18];
        stage1_entry_1_v = _RANDOM[5'h7][21];
        stage1_entry_1_ppn = {_RANDOM[5'h7][31:22], _RANDOM[5'h8][15:0]};
        stage1_entry_1_ppn_low = _RANDOM[5'h8][18:16];
        stage1_entry_1_af = _RANDOM[5'h8][19];
        stage1_entry_1_pf = _RANDOM[5'h8][20];
        stage1_entry_2_tag = {_RANDOM[5'h8][31:21], _RANDOM[5'h9][14:0]};
        stage1_entry_2_asid = _RANDOM[5'h9][30:15];
        stage1_entry_2_vmid = {_RANDOM[5'h9][31], _RANDOM[5'hA][12:0]};
        stage1_entry_2_perm_d = _RANDOM[5'hA][13];
        stage1_entry_2_perm_a = _RANDOM[5'hA][14];
        stage1_entry_2_perm_g = _RANDOM[5'hA][15];
        stage1_entry_2_perm_u = _RANDOM[5'hA][16];
        stage1_entry_2_perm_x = _RANDOM[5'hA][17];
        stage1_entry_2_perm_w = _RANDOM[5'hA][18];
        stage1_entry_2_perm_r = _RANDOM[5'hA][19];
        stage1_entry_2_level = _RANDOM[5'hA][21:20];
        stage1_entry_2_v = _RANDOM[5'hA][23];
        stage1_entry_2_ppn = {_RANDOM[5'hA][31:24], _RANDOM[5'hB][17:0]};
        stage1_entry_2_ppn_low = _RANDOM[5'hB][20:18];
        stage1_entry_2_af = _RANDOM[5'hB][21];
        stage1_entry_2_pf = _RANDOM[5'hB][22];
        stage1_entry_3_tag = {_RANDOM[5'hB][31:23], _RANDOM[5'hC][16:0]};
        stage1_entry_3_asid = {_RANDOM[5'hC][31:17], _RANDOM[5'hD][0]};
        stage1_entry_3_vmid = _RANDOM[5'hD][14:1];
        stage1_entry_3_perm_d = _RANDOM[5'hD][15];
        stage1_entry_3_perm_a = _RANDOM[5'hD][16];
        stage1_entry_3_perm_g = _RANDOM[5'hD][17];
        stage1_entry_3_perm_u = _RANDOM[5'hD][18];
        stage1_entry_3_perm_x = _RANDOM[5'hD][19];
        stage1_entry_3_perm_w = _RANDOM[5'hD][20];
        stage1_entry_3_perm_r = _RANDOM[5'hD][21];
        stage1_entry_3_level = _RANDOM[5'hD][23:22];
        stage1_entry_3_v = _RANDOM[5'hD][25];
        stage1_entry_3_ppn = {_RANDOM[5'hD][31:26], _RANDOM[5'hE][19:0]};
        stage1_entry_3_ppn_low = _RANDOM[5'hE][22:20];
        stage1_entry_3_af = _RANDOM[5'hE][23];
        stage1_entry_3_pf = _RANDOM[5'hE][24];
        stage1_entry_4_tag = {_RANDOM[5'hE][31:25], _RANDOM[5'hF][18:0]};
        stage1_entry_4_asid = {_RANDOM[5'hF][31:19], _RANDOM[5'h10][2:0]};
        stage1_entry_4_vmid = _RANDOM[5'h10][16:3];
        stage1_entry_4_perm_d = _RANDOM[5'h10][17];
        stage1_entry_4_perm_a = _RANDOM[5'h10][18];
        stage1_entry_4_perm_g = _RANDOM[5'h10][19];
        stage1_entry_4_perm_u = _RANDOM[5'h10][20];
        stage1_entry_4_perm_x = _RANDOM[5'h10][21];
        stage1_entry_4_perm_w = _RANDOM[5'h10][22];
        stage1_entry_4_perm_r = _RANDOM[5'h10][23];
        stage1_entry_4_level = _RANDOM[5'h10][25:24];
        stage1_entry_4_v = _RANDOM[5'h10][27];
        stage1_entry_4_ppn = {_RANDOM[5'h10][31:28], _RANDOM[5'h11][21:0]};
        stage1_entry_4_ppn_low = _RANDOM[5'h11][24:22];
        stage1_entry_4_af = _RANDOM[5'h11][25];
        stage1_entry_4_pf = _RANDOM[5'h11][26];
        stage1_entry_5_tag = {_RANDOM[5'h11][31:27], _RANDOM[5'h12][20:0]};
        stage1_entry_5_asid = {_RANDOM[5'h12][31:21], _RANDOM[5'h13][4:0]};
        stage1_entry_5_vmid = _RANDOM[5'h13][18:5];
        stage1_entry_5_perm_d = _RANDOM[5'h13][19];
        stage1_entry_5_perm_a = _RANDOM[5'h13][20];
        stage1_entry_5_perm_g = _RANDOM[5'h13][21];
        stage1_entry_5_perm_u = _RANDOM[5'h13][22];
        stage1_entry_5_perm_x = _RANDOM[5'h13][23];
        stage1_entry_5_perm_w = _RANDOM[5'h13][24];
        stage1_entry_5_perm_r = _RANDOM[5'h13][25];
        stage1_entry_5_level = _RANDOM[5'h13][27:26];
        stage1_entry_5_v = _RANDOM[5'h13][29];
        stage1_entry_5_ppn = {_RANDOM[5'h13][31:30], _RANDOM[5'h14][23:0]};
        stage1_entry_5_ppn_low = _RANDOM[5'h14][26:24];
        stage1_entry_5_af = _RANDOM[5'h14][27];
        stage1_entry_5_pf = _RANDOM[5'h14][28];
        stage1_entry_6_tag = {_RANDOM[5'h14][31:29], _RANDOM[5'h15][22:0]};
        stage1_entry_6_asid = {_RANDOM[5'h15][31:23], _RANDOM[5'h16][6:0]};
        stage1_entry_6_vmid = _RANDOM[5'h16][20:7];
        stage1_entry_6_perm_d = _RANDOM[5'h16][21];
        stage1_entry_6_perm_a = _RANDOM[5'h16][22];
        stage1_entry_6_perm_g = _RANDOM[5'h16][23];
        stage1_entry_6_perm_u = _RANDOM[5'h16][24];
        stage1_entry_6_perm_x = _RANDOM[5'h16][25];
        stage1_entry_6_perm_w = _RANDOM[5'h16][26];
        stage1_entry_6_perm_r = _RANDOM[5'h16][27];
        stage1_entry_6_level = _RANDOM[5'h16][29:28];
        stage1_entry_6_v = _RANDOM[5'h16][31];
        stage1_entry_6_ppn = _RANDOM[5'h17][25:0];
        stage1_entry_6_ppn_low = _RANDOM[5'h17][28:26];
        stage1_entry_6_af = _RANDOM[5'h17][29];
        stage1_entry_6_pf = _RANDOM[5'h17][30];
        stage1_entry_7_tag = {_RANDOM[5'h17][31], _RANDOM[5'h18][24:0]};
        stage1_entry_7_asid = {_RANDOM[5'h18][31:25], _RANDOM[5'h19][8:0]};
        stage1_entry_7_vmid = _RANDOM[5'h19][22:9];
        stage1_entry_7_perm_d = _RANDOM[5'h19][23];
        stage1_entry_7_perm_a = _RANDOM[5'h19][24];
        stage1_entry_7_perm_g = _RANDOM[5'h19][25];
        stage1_entry_7_perm_u = _RANDOM[5'h19][26];
        stage1_entry_7_perm_x = _RANDOM[5'h19][27];
        stage1_entry_7_perm_w = _RANDOM[5'h19][28];
        stage1_entry_7_perm_r = _RANDOM[5'h19][29];
        stage1_entry_7_level = _RANDOM[5'h19][31:30];
        stage1_entry_7_v = _RANDOM[5'h1A][1];
        stage1_entry_7_ppn = _RANDOM[5'h1A][27:2];
        stage1_entry_7_ppn_low = _RANDOM[5'h1A][30:28];
        stage1_entry_7_af = _RANDOM[5'h1A][31];
        stage1_entry_7_pf = _RANDOM[5'h1B][0];
        stage1_pteidx_0 = _RANDOM[5'h1B][1];
        stage1_pteidx_1 = _RANDOM[5'h1B][2];
        stage1_pteidx_2 = _RANDOM[5'h1B][3];
        stage1_pteidx_3 = _RANDOM[5'h1B][4];
        stage1_pteidx_4 = _RANDOM[5'h1B][5];
        stage1_pteidx_5 = _RANDOM[5'h1B][6];
        stage1_pteidx_6 = _RANDOM[5'h1B][7];
        stage1_pteidx_7 = _RANDOM[5'h1B][8];
        stage1_not_super = _RANDOM[5'h1B][9];
        hptw_resp_stage2 = _RANDOM[5'h1B][10];
        source = _RANDOM[5'h1B][12:11];
        hptw_resp_entry_tag = {_RANDOM[5'h1B][31:13], _RANDOM[5'h1C][9:0]};
        hptw_resp_entry_vmid = {_RANDOM[5'h1C][31:26], _RANDOM[5'h1D][7:0]};
        hptw_resp_entry_ppn = _RANDOM[5'h1D][31:8];
        hptw_resp_entry_perm_d = _RANDOM[5'h1E][0];
        hptw_resp_entry_perm_a = _RANDOM[5'h1E][1];
        hptw_resp_entry_perm_g = _RANDOM[5'h1E][2];
        hptw_resp_entry_perm_u = _RANDOM[5'h1E][3];
        hptw_resp_entry_perm_x = _RANDOM[5'h1E][4];
        hptw_resp_entry_perm_w = _RANDOM[5'h1E][5];
        hptw_resp_entry_perm_r = _RANDOM[5'h1E][6];
        hptw_resp_entry_level = _RANDOM[5'h1E][8:7];
        hptw_resp_gpf = _RANDOM[5'h1E][11];
        hptw_resp_gaf = _RANDOM[5'h1E][12];
        perfEvents_5_2 = _RANDOM[5'h1F][14];
        io_perf_0_value_REG = _RANDOM[5'h1F][15];
        io_perf_0_value_REG_1 = _RANDOM[5'h1F][16];
        io_perf_1_value_REG = _RANDOM[5'h1F][17];
        io_perf_1_value_REG_1 = _RANDOM[5'h1F][18];
        io_perf_2_value_REG = _RANDOM[5'h1F][19];
        io_perf_2_value_REG_1 = _RANDOM[5'h1F][20];
        io_perf_3_value_REG = _RANDOM[5'h1F][21];
        io_perf_3_value_REG_1 = _RANDOM[5'h1F][22];
        io_perf_4_value_REG = _RANDOM[5'h1F][23];
        io_perf_4_value_REG_1 = _RANDOM[5'h1F][24];
        io_perf_5_value_REG = _RANDOM[5'h1F][25];
        io_perf_5_value_REG_1 = _RANDOM[5'h1F][26];
        io_perf_6_value_REG = _RANDOM[5'h1F][27];
        io_perf_6_value_REG_1 = _RANDOM[5'h1F][28];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        level = 2'h0;
        af_level = 2'h0;
        pte_valid = 1'h0;
        s_pmp_check = 1'h1;
        s_mem_req = 1'h1;
        s_llptw_req = 1'h1;
        w_mem_resp = 1'h1;
        s_hptw_req = 1'h1;
        w_hptw_resp = 1'h1;
        s_last_hptw_req = 1'h1;
        w_last_hptw_resp = 1'h1;
        mem_addr_update = 1'h0;
        idle = 1'h1;
        hptw_pageFault = 1'h0;
        hptw_accessFault = 1'h0;
        last_s2xlate = 1'h0;
        perfEvents_5_2 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_req_ready = idle;
  assign io_resp_valid = io_resp_valid_0;
  assign io_resp_bits_source = source;
  assign io_resp_bits_s2xlate = req_s2xlate;
  assign io_resp_bits_resp_entry_0_tag = stage1Hit ? stage1_entry_0_tag : vpn[28:3];
  assign io_resp_bits_resp_entry_0_asid = stage1Hit ? stage1_entry_0_asid : satp_asid;
  assign io_resp_bits_resp_entry_0_vmid =
    stage1Hit ? stage1_entry_0_vmid : io_csr_hgatp_asid[13:0];
  assign io_resp_bits_resp_entry_0_perm_d =
    stage1Hit ? stage1_entry_0_perm_d : pte_perm_d;
  assign io_resp_bits_resp_entry_0_perm_a =
    stage1Hit ? stage1_entry_0_perm_a : pte_perm_a;
  assign io_resp_bits_resp_entry_0_perm_g =
    stage1Hit ? stage1_entry_0_perm_g : pte_perm_g;
  assign io_resp_bits_resp_entry_0_perm_u =
    stage1Hit ? stage1_entry_0_perm_u : pte_perm_u;
  assign io_resp_bits_resp_entry_0_perm_x =
    stage1Hit ? stage1_entry_0_perm_x : pte_perm_x;
  assign io_resp_bits_resp_entry_0_perm_w =
    stage1Hit ? stage1_entry_0_perm_w : pte_perm_w;
  assign io_resp_bits_resp_entry_0_perm_r =
    stage1Hit ? stage1_entry_0_perm_r : pte_perm_r;
  assign io_resp_bits_resp_entry_0_level =
    stage1Hit ? stage1_entry_0_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_0_v = stage1Hit ? stage1_entry_0_v : ~ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_0_ppn = stage1Hit ? stage1_entry_0_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_0_ppn_low =
    stage1Hit ? stage1_entry_0_ppn_low : pte_ppn[2:0];
  assign io_resp_bits_resp_entry_0_af = stage1Hit ? stage1_entry_0_af : ptw_resp_1_af;
  assign io_resp_bits_resp_entry_0_pf = stage1Hit ? stage1_entry_0_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_1_tag = stage1Hit ? stage1_entry_1_tag : vpn[28:3];
  assign io_resp_bits_resp_entry_1_asid = stage1Hit ? stage1_entry_1_asid : satp_asid;
  assign io_resp_bits_resp_entry_1_vmid =
    stage1Hit ? stage1_entry_1_vmid : io_csr_hgatp_asid[13:0];
  assign io_resp_bits_resp_entry_1_perm_d =
    stage1Hit ? stage1_entry_1_perm_d : pte_perm_d;
  assign io_resp_bits_resp_entry_1_perm_a =
    stage1Hit ? stage1_entry_1_perm_a : pte_perm_a;
  assign io_resp_bits_resp_entry_1_perm_g =
    stage1Hit ? stage1_entry_1_perm_g : pte_perm_g;
  assign io_resp_bits_resp_entry_1_perm_u =
    stage1Hit ? stage1_entry_1_perm_u : pte_perm_u;
  assign io_resp_bits_resp_entry_1_perm_x =
    stage1Hit ? stage1_entry_1_perm_x : pte_perm_x;
  assign io_resp_bits_resp_entry_1_perm_w =
    stage1Hit ? stage1_entry_1_perm_w : pte_perm_w;
  assign io_resp_bits_resp_entry_1_perm_r =
    stage1Hit ? stage1_entry_1_perm_r : pte_perm_r;
  assign io_resp_bits_resp_entry_1_level =
    stage1Hit ? stage1_entry_1_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_1_v = stage1Hit ? stage1_entry_1_v : ~ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_1_ppn = stage1Hit ? stage1_entry_1_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_1_ppn_low =
    stage1Hit ? stage1_entry_1_ppn_low : pte_ppn[2:0];
  assign io_resp_bits_resp_entry_1_af = stage1Hit ? stage1_entry_1_af : ptw_resp_1_af;
  assign io_resp_bits_resp_entry_1_pf = stage1Hit ? stage1_entry_1_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_2_tag = stage1Hit ? stage1_entry_2_tag : vpn[28:3];
  assign io_resp_bits_resp_entry_2_asid = stage1Hit ? stage1_entry_2_asid : satp_asid;
  assign io_resp_bits_resp_entry_2_vmid =
    stage1Hit ? stage1_entry_2_vmid : io_csr_hgatp_asid[13:0];
  assign io_resp_bits_resp_entry_2_perm_d =
    stage1Hit ? stage1_entry_2_perm_d : pte_perm_d;
  assign io_resp_bits_resp_entry_2_perm_a =
    stage1Hit ? stage1_entry_2_perm_a : pte_perm_a;
  assign io_resp_bits_resp_entry_2_perm_g =
    stage1Hit ? stage1_entry_2_perm_g : pte_perm_g;
  assign io_resp_bits_resp_entry_2_perm_u =
    stage1Hit ? stage1_entry_2_perm_u : pte_perm_u;
  assign io_resp_bits_resp_entry_2_perm_x =
    stage1Hit ? stage1_entry_2_perm_x : pte_perm_x;
  assign io_resp_bits_resp_entry_2_perm_w =
    stage1Hit ? stage1_entry_2_perm_w : pte_perm_w;
  assign io_resp_bits_resp_entry_2_perm_r =
    stage1Hit ? stage1_entry_2_perm_r : pte_perm_r;
  assign io_resp_bits_resp_entry_2_level =
    stage1Hit ? stage1_entry_2_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_2_v = stage1Hit ? stage1_entry_2_v : ~ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_2_ppn = stage1Hit ? stage1_entry_2_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_2_ppn_low =
    stage1Hit ? stage1_entry_2_ppn_low : pte_ppn[2:0];
  assign io_resp_bits_resp_entry_2_af = stage1Hit ? stage1_entry_2_af : ptw_resp_1_af;
  assign io_resp_bits_resp_entry_2_pf = stage1Hit ? stage1_entry_2_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_3_tag = stage1Hit ? stage1_entry_3_tag : vpn[28:3];
  assign io_resp_bits_resp_entry_3_asid = stage1Hit ? stage1_entry_3_asid : satp_asid;
  assign io_resp_bits_resp_entry_3_vmid =
    stage1Hit ? stage1_entry_3_vmid : io_csr_hgatp_asid[13:0];
  assign io_resp_bits_resp_entry_3_perm_d =
    stage1Hit ? stage1_entry_3_perm_d : pte_perm_d;
  assign io_resp_bits_resp_entry_3_perm_a =
    stage1Hit ? stage1_entry_3_perm_a : pte_perm_a;
  assign io_resp_bits_resp_entry_3_perm_g =
    stage1Hit ? stage1_entry_3_perm_g : pte_perm_g;
  assign io_resp_bits_resp_entry_3_perm_u =
    stage1Hit ? stage1_entry_3_perm_u : pte_perm_u;
  assign io_resp_bits_resp_entry_3_perm_x =
    stage1Hit ? stage1_entry_3_perm_x : pte_perm_x;
  assign io_resp_bits_resp_entry_3_perm_w =
    stage1Hit ? stage1_entry_3_perm_w : pte_perm_w;
  assign io_resp_bits_resp_entry_3_perm_r =
    stage1Hit ? stage1_entry_3_perm_r : pte_perm_r;
  assign io_resp_bits_resp_entry_3_level =
    stage1Hit ? stage1_entry_3_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_3_v = stage1Hit ? stage1_entry_3_v : ~ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_3_ppn = stage1Hit ? stage1_entry_3_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_3_ppn_low =
    stage1Hit ? stage1_entry_3_ppn_low : pte_ppn[2:0];
  assign io_resp_bits_resp_entry_3_af = stage1Hit ? stage1_entry_3_af : ptw_resp_1_af;
  assign io_resp_bits_resp_entry_3_pf = stage1Hit ? stage1_entry_3_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_4_tag = stage1Hit ? stage1_entry_4_tag : vpn[28:3];
  assign io_resp_bits_resp_entry_4_asid = stage1Hit ? stage1_entry_4_asid : satp_asid;
  assign io_resp_bits_resp_entry_4_vmid =
    stage1Hit ? stage1_entry_4_vmid : io_csr_hgatp_asid[13:0];
  assign io_resp_bits_resp_entry_4_perm_d =
    stage1Hit ? stage1_entry_4_perm_d : pte_perm_d;
  assign io_resp_bits_resp_entry_4_perm_a =
    stage1Hit ? stage1_entry_4_perm_a : pte_perm_a;
  assign io_resp_bits_resp_entry_4_perm_g =
    stage1Hit ? stage1_entry_4_perm_g : pte_perm_g;
  assign io_resp_bits_resp_entry_4_perm_u =
    stage1Hit ? stage1_entry_4_perm_u : pte_perm_u;
  assign io_resp_bits_resp_entry_4_perm_x =
    stage1Hit ? stage1_entry_4_perm_x : pte_perm_x;
  assign io_resp_bits_resp_entry_4_perm_w =
    stage1Hit ? stage1_entry_4_perm_w : pte_perm_w;
  assign io_resp_bits_resp_entry_4_perm_r =
    stage1Hit ? stage1_entry_4_perm_r : pte_perm_r;
  assign io_resp_bits_resp_entry_4_level =
    stage1Hit ? stage1_entry_4_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_4_v = stage1Hit ? stage1_entry_4_v : ~ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_4_ppn = stage1Hit ? stage1_entry_4_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_4_ppn_low =
    stage1Hit ? stage1_entry_4_ppn_low : pte_ppn[2:0];
  assign io_resp_bits_resp_entry_4_af = stage1Hit ? stage1_entry_4_af : ptw_resp_1_af;
  assign io_resp_bits_resp_entry_4_pf = stage1Hit ? stage1_entry_4_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_5_tag = stage1Hit ? stage1_entry_5_tag : vpn[28:3];
  assign io_resp_bits_resp_entry_5_asid = stage1Hit ? stage1_entry_5_asid : satp_asid;
  assign io_resp_bits_resp_entry_5_vmid =
    stage1Hit ? stage1_entry_5_vmid : io_csr_hgatp_asid[13:0];
  assign io_resp_bits_resp_entry_5_perm_d =
    stage1Hit ? stage1_entry_5_perm_d : pte_perm_d;
  assign io_resp_bits_resp_entry_5_perm_a =
    stage1Hit ? stage1_entry_5_perm_a : pte_perm_a;
  assign io_resp_bits_resp_entry_5_perm_g =
    stage1Hit ? stage1_entry_5_perm_g : pte_perm_g;
  assign io_resp_bits_resp_entry_5_perm_u =
    stage1Hit ? stage1_entry_5_perm_u : pte_perm_u;
  assign io_resp_bits_resp_entry_5_perm_x =
    stage1Hit ? stage1_entry_5_perm_x : pte_perm_x;
  assign io_resp_bits_resp_entry_5_perm_w =
    stage1Hit ? stage1_entry_5_perm_w : pte_perm_w;
  assign io_resp_bits_resp_entry_5_perm_r =
    stage1Hit ? stage1_entry_5_perm_r : pte_perm_r;
  assign io_resp_bits_resp_entry_5_level =
    stage1Hit ? stage1_entry_5_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_5_v = stage1Hit ? stage1_entry_5_v : ~ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_5_ppn = stage1Hit ? stage1_entry_5_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_5_ppn_low =
    stage1Hit ? stage1_entry_5_ppn_low : pte_ppn[2:0];
  assign io_resp_bits_resp_entry_5_af = stage1Hit ? stage1_entry_5_af : ptw_resp_1_af;
  assign io_resp_bits_resp_entry_5_pf = stage1Hit ? stage1_entry_5_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_6_tag = stage1Hit ? stage1_entry_6_tag : vpn[28:3];
  assign io_resp_bits_resp_entry_6_asid = stage1Hit ? stage1_entry_6_asid : satp_asid;
  assign io_resp_bits_resp_entry_6_vmid =
    stage1Hit ? stage1_entry_6_vmid : io_csr_hgatp_asid[13:0];
  assign io_resp_bits_resp_entry_6_perm_d =
    stage1Hit ? stage1_entry_6_perm_d : pte_perm_d;
  assign io_resp_bits_resp_entry_6_perm_a =
    stage1Hit ? stage1_entry_6_perm_a : pte_perm_a;
  assign io_resp_bits_resp_entry_6_perm_g =
    stage1Hit ? stage1_entry_6_perm_g : pte_perm_g;
  assign io_resp_bits_resp_entry_6_perm_u =
    stage1Hit ? stage1_entry_6_perm_u : pte_perm_u;
  assign io_resp_bits_resp_entry_6_perm_x =
    stage1Hit ? stage1_entry_6_perm_x : pte_perm_x;
  assign io_resp_bits_resp_entry_6_perm_w =
    stage1Hit ? stage1_entry_6_perm_w : pte_perm_w;
  assign io_resp_bits_resp_entry_6_perm_r =
    stage1Hit ? stage1_entry_6_perm_r : pte_perm_r;
  assign io_resp_bits_resp_entry_6_level =
    stage1Hit ? stage1_entry_6_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_6_v = stage1Hit ? stage1_entry_6_v : ~ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_6_ppn = stage1Hit ? stage1_entry_6_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_6_ppn_low =
    stage1Hit ? stage1_entry_6_ppn_low : pte_ppn[2:0];
  assign io_resp_bits_resp_entry_6_af = stage1Hit ? stage1_entry_6_af : ptw_resp_1_af;
  assign io_resp_bits_resp_entry_6_pf = stage1Hit ? stage1_entry_6_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_7_tag = stage1Hit ? stage1_entry_7_tag : vpn[28:3];
  assign io_resp_bits_resp_entry_7_asid = stage1Hit ? stage1_entry_7_asid : satp_asid;
  assign io_resp_bits_resp_entry_7_vmid =
    stage1Hit ? stage1_entry_7_vmid : io_csr_hgatp_asid[13:0];
  assign io_resp_bits_resp_entry_7_perm_d =
    stage1Hit ? stage1_entry_7_perm_d : pte_perm_d;
  assign io_resp_bits_resp_entry_7_perm_a =
    stage1Hit ? stage1_entry_7_perm_a : pte_perm_a;
  assign io_resp_bits_resp_entry_7_perm_g =
    stage1Hit ? stage1_entry_7_perm_g : pte_perm_g;
  assign io_resp_bits_resp_entry_7_perm_u =
    stage1Hit ? stage1_entry_7_perm_u : pte_perm_u;
  assign io_resp_bits_resp_entry_7_perm_x =
    stage1Hit ? stage1_entry_7_perm_x : pte_perm_x;
  assign io_resp_bits_resp_entry_7_perm_w =
    stage1Hit ? stage1_entry_7_perm_w : pte_perm_w;
  assign io_resp_bits_resp_entry_7_perm_r =
    stage1Hit ? stage1_entry_7_perm_r : pte_perm_r;
  assign io_resp_bits_resp_entry_7_level =
    stage1Hit ? stage1_entry_7_level : ptw_resp_1_level;
  assign io_resp_bits_resp_entry_7_v = stage1Hit ? stage1_entry_7_v : ~ptw_resp_1_pf;
  assign io_resp_bits_resp_entry_7_ppn = stage1Hit ? stage1_entry_7_ppn : ptw_resp_1_ppn;
  assign io_resp_bits_resp_entry_7_ppn_low =
    stage1Hit ? stage1_entry_7_ppn_low : pte_ppn[2:0];
  assign io_resp_bits_resp_entry_7_af = stage1Hit ? stage1_entry_7_af : ptw_resp_1_af;
  assign io_resp_bits_resp_entry_7_pf = stage1Hit ? stage1_entry_7_pf : ptw_resp_1_pf;
  assign io_resp_bits_resp_pteidx_0 = stage1Hit ? stage1_pteidx_0 : vpn[2:0] == 3'h0;
  assign io_resp_bits_resp_pteidx_1 = stage1Hit ? stage1_pteidx_1 : vpn[2:0] == 3'h1;
  assign io_resp_bits_resp_pteidx_2 = stage1Hit ? stage1_pteidx_2 : vpn[2:0] == 3'h2;
  assign io_resp_bits_resp_pteidx_3 = stage1Hit ? stage1_pteidx_3 : vpn[2:0] == 3'h3;
  assign io_resp_bits_resp_pteidx_4 = stage1Hit ? stage1_pteidx_4 : vpn[2:0] == 3'h4;
  assign io_resp_bits_resp_pteidx_5 = stage1Hit ? stage1_pteidx_5 : vpn[2:0] == 3'h5;
  assign io_resp_bits_resp_pteidx_6 = stage1Hit ? stage1_pteidx_6 : vpn[2:0] == 3'h6;
  assign io_resp_bits_resp_pteidx_7 = stage1Hit ? stage1_pteidx_7 : (&(vpn[2:0]));
  assign io_resp_bits_resp_not_super = stage1Hit & stage1_not_super;
  assign io_resp_bits_h_resp_entry_tag = hptw_resp_entry_tag;
  assign io_resp_bits_h_resp_entry_vmid = hptw_resp_entry_vmid;
  assign io_resp_bits_h_resp_entry_ppn = hptw_resp_entry_ppn;
  assign io_resp_bits_h_resp_entry_perm_d = hptw_resp_entry_perm_d;
  assign io_resp_bits_h_resp_entry_perm_a = hptw_resp_entry_perm_a;
  assign io_resp_bits_h_resp_entry_perm_g = hptw_resp_entry_perm_g;
  assign io_resp_bits_h_resp_entry_perm_u = hptw_resp_entry_perm_u;
  assign io_resp_bits_h_resp_entry_perm_x = hptw_resp_entry_perm_x;
  assign io_resp_bits_h_resp_entry_perm_w = hptw_resp_entry_perm_w;
  assign io_resp_bits_h_resp_entry_perm_r = hptw_resp_entry_perm_r;
  assign io_resp_bits_h_resp_entry_level = hptw_resp_entry_level;
  assign io_resp_bits_h_resp_gpf = hptw_resp_gpf;
  assign io_resp_bits_h_resp_gaf = hptw_resp_gaf;
  assign io_llptw_valid = io_llptw_valid_0;
  assign io_llptw_bits_req_info_vpn = vpn;
  assign io_llptw_bits_req_info_s2xlate = req_s2xlate;
  assign io_llptw_bits_req_info_source = source;
  assign io_hptw_req_valid = io_hptw_req_valid_0;
  assign io_hptw_req_bits_source = source;
  assign io_hptw_req_bits_gvpn = gpaddr[40:12];
  assign io_mem_req_valid = io_mem_req_valid_0;
  assign io_mem_req_bits_addr = io_pmp_req_bits_addr_0;
  assign io_pmp_req_bits_addr = io_pmp_req_bits_addr_0;
  assign io_refill_req_info_vpn = vpn;
  assign io_refill_req_info_s2xlate = req_s2xlate;
  assign io_refill_req_info_source = source;
  assign io_refill_level = level;
  assign io_perf_0_value = {5'h0, io_perf_0_value_REG_1};
  assign io_perf_1_value = {5'h0, io_perf_1_value_REG_1};
  assign io_perf_2_value = {5'h0, io_perf_2_value_REG_1};
  assign io_perf_3_value = {5'h0, io_perf_3_value_REG_1};
  assign io_perf_4_value = {5'h0, io_perf_4_value_REG_1};
  assign io_perf_5_value = {5'h0, io_perf_5_value_REG_1};
  assign io_perf_6_value = {5'h0, io_perf_6_value_REG_1};
endmodule

