// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module CSRPermitModule(
  input         io_in_csrAccess_ren,
  input         io_in_csrAccess_wen,
  input  [11:0] io_in_csrAccess_addr,
  input  [1:0]  io_in_privState_PRVM,
  input         io_in_privState_V,
  input         io_in_debugMode,
  input         io_in_mret,
  input         io_in_sret,
  input         io_in_dret,
  input         io_in_csrIsCustom,
  input         io_in_status_tsr,
  input         io_in_status_vtsr,
  input         io_in_status_tvm,
  input         io_in_status_vtvm,
  input  [31:0] io_in_status_mcounteren,
  input  [31:0] io_in_status_hcounteren,
  input  [31:0] io_in_status_scounteren,
  input  [63:0] io_in_status_menvcfg,
  input  [63:0] io_in_status_henvcfg,
  input         io_in_status_mstatusFSOff,
  input         io_in_status_vsstatusFSOff,
  input         io_in_status_mstatusVSOff,
  input         io_in_status_vsstatusVSOff,
  input         io_in_status_mstateen0_C,
  input         io_in_status_mstateen0_SE0,
  input         io_in_status_mstateen0_ENVCFG,
  input         io_in_status_mstateen0_CSRIND,
  input         io_in_status_mstateen0_AIA,
  input         io_in_status_mstateen0_IMSIC,
  input         io_in_status_mstateen0_CONTEXT,
  input         io_in_status_hstateen0_C,
  input         io_in_status_hstateen0_SE0,
  input         io_in_status_hstateen0_ENVCFG,
  input         io_in_status_hstateen0_CSRIND,
  input         io_in_status_hstateen0_IMSIC,
  input         io_in_status_hstateen0_CONTEXT,
  input         io_in_status_sstateen0_C,
  input         io_in_aia_miselectIsIllegal,
  input         io_in_aia_siselectIsIllegal,
  input         io_in_aia_vsiselectIsIllegal,
  input  [63:0] io_in_aia_siselect,
  input  [63:0] io_in_aia_vsiselect,
  input         io_in_aia_mvienSEIE,
  input         io_in_aia_hvictlVTI,
  output        io_out_hasLegalWen,
  output        io_out_hasLegalMret,
  output        io_out_hasLegalSret,
  output        io_out_hasLegalDret,
  output        io_out_hasLegalWriteFcsr,
  output        io_out_hasLegalWriteVcsr,
  output        io_out_EX_II,
  output        io_out_EX_VI
);

  wire        csrAccess = io_in_csrAccess_ren | io_in_csrAccess_wen;
  wire        csrIsFp =
    io_in_csrAccess_addr == 12'h1 | io_in_csrAccess_addr == 12'h2
    | io_in_csrAccess_addr == 12'h3;
  wire        _csrIsWritableVec_T = io_in_csrAccess_addr == 12'h8;
  wire        _csrIsWritableVec_T_1 = io_in_csrAccess_addr == 12'h9;
  wire        _csrIsWritableVec_T_2 = io_in_csrAccess_addr == 12'hA;
  wire        _csrIsWritableVec_T_3 = io_in_csrAccess_addr == 12'hF;
  wire [4:0]  regularPrivilegeLegal_invInputs =
    ~{io_in_privState_V, io_in_privState_PRVM, io_in_csrAccess_addr[9:8]};
  wire        regularPrivilegeLegal =
    |{&{regularPrivilegeLegal_invInputs[0],
        regularPrivilegeLegal_invInputs[1],
        regularPrivilegeLegal_invInputs[3]},
      &{regularPrivilegeLegal_invInputs[1],
        io_in_privState_PRVM[0],
        regularPrivilegeLegal_invInputs[3]},
      &{regularPrivilegeLegal_invInputs[0],
        io_in_privState_PRVM[0],
        regularPrivilegeLegal_invInputs[4]},
      &{io_in_privState_PRVM[0],
        io_in_privState_PRVM[1],
        regularPrivilegeLegal_invInputs[4]}};
  wire        privilegeLegal =
    io_in_csrAccess_addr[11:4] != 8'h7B & regularPrivilegeLegal | io_in_debugMode;
  wire        rwIllegal = (&(io_in_csrAccess_addr[11:10])) & io_in_csrAccess_wen;
  wire        mret_EX_II_v_PrvmIsM = &io_in_privState_PRVM;
  wire        mret_EX_II_isModeM = mret_EX_II_v_PrvmIsM;
  wire        mretIllegal = io_in_mret & ~mret_EX_II_isModeM;
  wire        PrvmIsU = io_in_privState_PRVM == 2'h0;
  wire        sret_EX_II_isModeHU = ~io_in_privState_V & PrvmIsU;
  wire        PrvmIsS = io_in_privState_PRVM == 2'h1;
  wire        sret_EX_II_isModeHS = ~io_in_privState_V & PrvmIsS;
  wire        sret_EX_II =
    io_in_sret & (sret_EX_II_isModeHU | sret_EX_II_isModeHS & io_in_status_tsr);
  wire        sret_EX_VI_isModeVU = io_in_privState_V & PrvmIsU;
  wire        sret_EX_VI_isModeVS = io_in_privState_V & PrvmIsS;
  wire        sret_EX_VI =
    io_in_sret & (sret_EX_VI_isModeVU | sret_EX_VI_isModeVS & io_in_status_vtsr);
  wire        dret_EX_II = io_in_dret & ~io_in_debugMode;
  wire        _rwStopei_EX_II_T = csrAccess & sret_EX_II_isModeHS;
  wire        _rwSatp_EX_VI_T_2 = io_in_csrAccess_addr == 12'h180;
  wire        _rwSip_Sie_EX_VI_T = csrAccess & sret_EX_VI_isModeVS;
  wire        accessHPM =
    io_in_csrAccess_ren & io_in_csrAccess_addr > 12'hBFF & io_in_csrAccess_addr < 12'hC20;
  wire [31:0] _GEN = {27'h0, io_in_csrAccess_addr[4:0]};
  wire [31:0] _accessHPM_EX_VI_T = io_in_status_mcounteren >> _GEN;
  wire [31:0] _accessHPM_EX_VI_T_10 = io_in_status_scounteren >> _GEN;
  wire [31:0] _accessHPM_EX_VI_T_7 = io_in_status_hcounteren >> _GEN;
  wire        csrIsHstateen0 = io_in_csrAccess_addr == 12'h60C;
  wire        csrIsSstateen0 = io_in_csrAccess_addr == 12'h10C;
  wire        csrIsHenvcfg = io_in_csrAccess_addr == 12'h60A;
  wire        csrIsSenvcfg = io_in_csrAccess_addr == 12'h10A;
  wire        csrIsSi = io_in_csrAccess_addr[11:3] == 9'h150;
  wire        csrIsVSi = io_in_csrAccess_addr[11:3] == 9'h128;
  wire        csrIsAIA =
    io_in_csrAccess_addr == 12'h608 | io_in_csrAccess_addr == 12'h609
    | io_in_csrAccess_addr == 12'h646 | io_in_csrAccess_addr == 12'h647
    | io_in_csrAccess_addr == 12'hEB0;
  wire        csrIsStopei = io_in_csrAccess_addr == 12'h15C;
  wire        csrIsVStopei = io_in_csrAccess_addr == 12'h25C;
  wire        csrIsHcontext = io_in_csrAccess_addr == 12'h6A8;
  wire        csrIsScontext = io_in_csrAccess_addr == 12'h5A8;
  wire        csrIsSCustom =
    (|(io_in_csrAccess_addr[11:10])) & io_in_csrAccess_addr[9:8] == 2'h1
    & (&(io_in_csrAccess_addr[7:6]));
  wire        csrIsUCustom =
    io_in_csrAccess_addr[11:8] != 4'h8 | io_in_csrAccess_addr[11:6] != 6'h23;
  wire        _rwStimecmp_EX_VI_T_10 = io_in_csrAccess_addr == 12'h14D;
  wire        fsEffectiveOff =
    io_in_status_mstatusFSOff & ~io_in_privState_V
    | (io_in_status_mstatusFSOff | io_in_status_vsstatusFSOff) & io_in_privState_V;
  wire        vsEffectiveOff =
    io_in_status_mstatusVSOff & ~io_in_privState_V
    | (io_in_status_mstatusVSOff | io_in_status_vsstatusVSOff) & io_in_privState_V;
  wire        _rwVSireg_EX_II_T = mret_EX_II_isModeM | sret_EX_II_isModeHS;
  wire        _rwSireg_EX_VI_T_12 = io_in_csrAccess_addr == 12'h151;
  wire        io_out_EX_II_0 =
    csrAccess & ~privilegeLegal
    & (~io_in_privState_V | io_in_privState_V & (&(io_in_csrAccess_addr[9:8])))
    | rwIllegal | mretIllegal | sret_EX_II | _rwStopei_EX_II_T & io_in_status_tvm
    & (_rwSatp_EX_VI_T_2 | io_in_csrAccess_addr == 12'h680) | accessHPM
    & (~mret_EX_II_isModeM & ~(_accessHPM_EX_VI_T[0]) | sret_EX_II_isModeHU
       & ~(_accessHPM_EX_VI_T_10[0])) | csrAccess
    & ((sret_EX_II_isModeHS & ~(io_in_status_mcounteren[1]) | ~mret_EX_II_isModeM
        & ~(io_in_status_menvcfg[63])) & io_in_csrAccess_addr == 12'h24D
       | ((sret_EX_II_isModeHS | sret_EX_VI_isModeVS) & ~(io_in_status_mcounteren[1])
          | ~mret_EX_II_isModeM & ~(io_in_status_menvcfg[63])) & _rwStimecmp_EX_VI_T_10)
    | _rwSip_Sie_EX_VI_T & io_in_csrIsCustom | csrAccess & csrIsFp & fsEffectiveOff
    | csrAccess
    & (_csrIsWritableVec_T | _csrIsWritableVec_T_1 | _csrIsWritableVec_T_2
       | _csrIsWritableVec_T_3 | io_in_csrAccess_addr == 12'hC21) & vsEffectiveOff
    | dret_EX_II | csrAccess
    & ((csrIsHstateen0 | csrIsSstateen0) & ~mret_EX_II_isModeM
       & ~io_in_status_mstateen0_SE0 | (csrIsHenvcfg | csrIsSenvcfg) & ~mret_EX_II_isModeM
       & ~io_in_status_mstateen0_ENVCFG | (csrIsSi | csrIsVSi) & ~mret_EX_II_isModeM
       & ~io_in_status_mstateen0_CSRIND | csrIsAIA & ~mret_EX_II_isModeM
       & ~io_in_status_mstateen0_AIA | (csrIsStopei | csrIsVStopei) & ~mret_EX_II_isModeM
       & ~io_in_status_mstateen0_IMSIC | (csrIsHcontext | csrIsScontext)
       & ~mret_EX_II_isModeM & ~io_in_status_mstateen0_CONTEXT
       | ((|(io_in_csrAccess_addr[11:10])) & io_in_csrAccess_addr[9:8] == 2'h2
          & (&(io_in_csrAccess_addr[7:6])) | csrIsSCustom | csrIsUCustom)
       & (~mret_EX_II_isModeM & ~io_in_status_mstateen0_C | sret_EX_II_isModeHU
          & ~io_in_status_sstateen0_C)) | _rwStopei_EX_II_T & io_in_aia_mvienSEIE
    & csrIsStopei | csrAccess & mret_EX_II_isModeM & io_in_aia_miselectIsIllegal
    & io_in_csrAccess_addr == 12'h351 | csrAccess
    & (sret_EX_II_isModeHS & io_in_aia_mvienSEIE & io_in_aia_siselect > 64'h6F
       & io_in_aia_siselect < 64'h100 | _rwVSireg_EX_II_T & io_in_aia_siselectIsIllegal
       | sret_EX_VI_isModeVS & (|(io_in_aia_vsiselect[63:9]))) & _rwSireg_EX_VI_T_12
    | csrAccess & _rwVSireg_EX_II_T & io_in_aia_vsiselectIsIllegal
    & io_in_csrAccess_addr == 12'h251;
  wire        io_out_EX_VI_0 =
    (csrAccess & ~privilegeLegal & io_in_privState_V & ~(&(io_in_csrAccess_addr[9:8]))
     | sret_EX_VI | _rwSip_Sie_EX_VI_T & io_in_status_vtvm & _rwSatp_EX_VI_T_2 | accessHPM
     & _accessHPM_EX_VI_T[0]
     & (sret_EX_VI_isModeVS & ~(_accessHPM_EX_VI_T_7[0]) | sret_EX_VI_isModeVU
        & (~(_accessHPM_EX_VI_T_7[0]) | ~(_accessHPM_EX_VI_T_10[0])))
     | (_rwSip_Sie_EX_VI_T
        & (io_in_status_mcounteren[1] & ~(io_in_status_hcounteren[1])
           | io_in_status_menvcfg[63] & ~(io_in_status_henvcfg[63])) | io_in_csrAccess_wen
        & sret_EX_VI_isModeVS & io_in_aia_hvictlVTI) & _rwStimecmp_EX_VI_T_10 | csrAccess
     & (sret_EX_VI_isModeVS
        & (io_in_aia_vsiselect > 64'h2F & io_in_aia_vsiselect < 64'h40
           | (|(io_in_aia_vsiselect[63:7])) & io_in_aia_vsiselect < 64'h100
           & io_in_aia_vsiselect[0]) | sret_EX_VI_isModeVU) & _rwSireg_EX_VI_T_12
     | _rwSip_Sie_EX_VI_T & io_in_aia_hvictlVTI
     & (io_in_csrAccess_addr == 12'h144 | io_in_csrAccess_addr == 12'h104)) & ~rwIllegal
    | csrAccess
    & (csrIsSstateen0 & io_in_status_mstateen0_SE0 & io_in_privState_V
       & ~io_in_status_hstateen0_SE0 | csrIsHstateen0 & io_in_status_mstateen0_SE0
       & io_in_privState_V | csrIsSenvcfg & io_in_status_mstateen0_ENVCFG
       & io_in_privState_V & ~io_in_status_hstateen0_ENVCFG | csrIsHenvcfg
       & io_in_status_mstateen0_ENVCFG & io_in_privState_V | csrIsSi
       & io_in_status_mstateen0_CSRIND & io_in_privState_V
       & ~io_in_status_hstateen0_CSRIND | csrIsVSi & io_in_status_mstateen0_CSRIND
       & io_in_privState_V | csrIsAIA & io_in_status_mstateen0_AIA & io_in_privState_V
       | csrIsStopei & io_in_status_mstateen0_IMSIC & io_in_privState_V
       & ~io_in_status_hstateen0_IMSIC | csrIsVStopei & io_in_status_mstateen0_IMSIC
       & io_in_privState_V | csrIsScontext & io_in_status_mstateen0_CONTEXT
       & io_in_privState_V & ~io_in_status_hstateen0_CONTEXT | csrIsHcontext
       & io_in_status_mstateen0_CONTEXT & io_in_privState_V | io_in_status_mstateen0_C
       & ((csrIsSCustom | csrIsUCustom) & io_in_privState_V & ~io_in_status_hstateen0_C
          | csrIsUCustom & sret_EX_VI_isModeVU & io_in_status_hstateen0_C
          & ~io_in_status_sstateen0_C));
  assign io_out_hasLegalWen = io_in_csrAccess_wen & ~(io_out_EX_II_0 | io_out_EX_VI_0);
  assign io_out_hasLegalMret = io_in_mret & ~mretIllegal;
  assign io_out_hasLegalSret = io_in_sret & ~(sret_EX_II | sret_EX_VI);
  assign io_out_hasLegalDret = io_in_dret & ~dret_EX_II;
  assign io_out_hasLegalWriteFcsr = io_in_csrAccess_wen & csrIsFp & ~fsEffectiveOff;
  assign io_out_hasLegalWriteVcsr =
    io_in_csrAccess_wen
    & (_csrIsWritableVec_T | _csrIsWritableVec_T_1 | _csrIsWritableVec_T_2
       | _csrIsWritableVec_T_3) & ~vsEffectiveOff;
  assign io_out_EX_II = io_out_EX_II_0;
  assign io_out_EX_VI = io_out_EX_VI_0;
endmodule

