// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module TLBNonBlock_1(
  input         clock,
  input         reset,
  input         io_sfence_valid,
  input         io_sfence_bits_rs1,
  input         io_sfence_bits_rs2,
  input  [40:0] io_sfence_bits_addr,
  input  [15:0] io_sfence_bits_id,
  input         io_sfence_bits_flushPipe,
  input         io_sfence_bits_hv,
  input         io_sfence_bits_hg,
  input  [3:0]  io_csr_satp_mode,
  input  [15:0] io_csr_satp_asid,
  input         io_csr_satp_changed,
  input  [3:0]  io_csr_vsatp_mode,
  input  [15:0] io_csr_vsatp_asid,
  input         io_csr_vsatp_changed,
  input  [3:0]  io_csr_hgatp_mode,
  input  [15:0] io_csr_hgatp_asid,
  input         io_csr_hgatp_changed,
  input         io_csr_priv_sum,
  input         io_csr_priv_vsum,
  input         io_csr_priv_virt,
  input         io_csr_priv_spvp,
  input  [1:0]  io_csr_priv_dmode,
  input         io_requestor_0_req_valid,
  input  [40:0] io_requestor_0_req_bits_vaddr,
  input         io_requestor_0_req_bits_hyperinst,
  input         io_requestor_0_req_bits_debug_robIdx_flag,
  input  [7:0]  io_requestor_0_req_bits_debug_robIdx_value,
  output [35:0] io_requestor_0_resp_bits_paddr_0,
  output [40:0] io_requestor_0_resp_bits_gpaddr_0,
  output        io_requestor_0_resp_bits_miss,
  output        io_requestor_0_resp_bits_excp_0_gpf_st,
  output        io_requestor_0_resp_bits_excp_0_pf_st,
  output        io_requestor_0_resp_bits_excp_0_af_st,
  input         io_requestor_1_req_valid,
  input  [40:0] io_requestor_1_req_bits_vaddr,
  input         io_requestor_1_req_bits_hyperinst,
  input         io_requestor_1_req_bits_debug_robIdx_flag,
  input  [7:0]  io_requestor_1_req_bits_debug_robIdx_value,
  output [35:0] io_requestor_1_resp_bits_paddr_0,
  output [40:0] io_requestor_1_resp_bits_gpaddr_0,
  output        io_requestor_1_resp_bits_miss,
  output        io_requestor_1_resp_bits_excp_0_gpf_st,
  output        io_requestor_1_resp_bits_excp_0_pf_st,
  output        io_requestor_1_resp_bits_excp_0_af_st,
  input         io_redirect_valid,
  input         io_redirect_bits_robIdx_flag,
  input  [7:0]  io_redirect_bits_robIdx_value,
  input         io_redirect_bits_level,
  output        io_ptw_req_0_valid,
  output [28:0] io_ptw_req_0_bits_vpn,
  output [1:0]  io_ptw_req_0_bits_s2xlate,
  output        io_ptw_req_0_bits_getGpa,
  output        io_ptw_req_1_valid,
  output [28:0] io_ptw_req_1_bits_vpn,
  output [1:0]  io_ptw_req_1_bits_s2xlate,
  output        io_ptw_req_1_bits_getGpa,
  input         io_ptw_resp_valid,
  input  [1:0]  io_ptw_resp_bits_s2xlate,
  input  [25:0] io_ptw_resp_bits_s1_entry_tag,
  input  [15:0] io_ptw_resp_bits_s1_entry_asid,
  input  [13:0] io_ptw_resp_bits_s1_entry_vmid,
  input         io_ptw_resp_bits_s1_entry_perm_d,
  input         io_ptw_resp_bits_s1_entry_perm_a,
  input         io_ptw_resp_bits_s1_entry_perm_g,
  input         io_ptw_resp_bits_s1_entry_perm_u,
  input         io_ptw_resp_bits_s1_entry_perm_x,
  input         io_ptw_resp_bits_s1_entry_perm_w,
  input         io_ptw_resp_bits_s1_entry_perm_r,
  input  [1:0]  io_ptw_resp_bits_s1_entry_level,
  input  [25:0] io_ptw_resp_bits_s1_entry_ppn,
  input  [2:0]  io_ptw_resp_bits_s1_addr_low,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_0,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_1,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_2,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_3,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_4,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_5,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_6,
  input  [2:0]  io_ptw_resp_bits_s1_ppn_low_7,
  input         io_ptw_resp_bits_s1_valididx_0,
  input         io_ptw_resp_bits_s1_valididx_1,
  input         io_ptw_resp_bits_s1_valididx_2,
  input         io_ptw_resp_bits_s1_valididx_3,
  input         io_ptw_resp_bits_s1_valididx_4,
  input         io_ptw_resp_bits_s1_valididx_5,
  input         io_ptw_resp_bits_s1_valididx_6,
  input         io_ptw_resp_bits_s1_valididx_7,
  input         io_ptw_resp_bits_s1_pteidx_0,
  input         io_ptw_resp_bits_s1_pteidx_1,
  input         io_ptw_resp_bits_s1_pteidx_2,
  input         io_ptw_resp_bits_s1_pteidx_3,
  input         io_ptw_resp_bits_s1_pteidx_4,
  input         io_ptw_resp_bits_s1_pteidx_5,
  input         io_ptw_resp_bits_s1_pteidx_6,
  input         io_ptw_resp_bits_s1_pteidx_7,
  input         io_ptw_resp_bits_s1_pf,
  input         io_ptw_resp_bits_s1_af,
  input  [28:0] io_ptw_resp_bits_s2_entry_tag,
  input  [13:0] io_ptw_resp_bits_s2_entry_vmid,
  input  [23:0] io_ptw_resp_bits_s2_entry_ppn,
  input         io_ptw_resp_bits_s2_entry_perm_d,
  input         io_ptw_resp_bits_s2_entry_perm_a,
  input         io_ptw_resp_bits_s2_entry_perm_g,
  input         io_ptw_resp_bits_s2_entry_perm_u,
  input         io_ptw_resp_bits_s2_entry_perm_x,
  input         io_ptw_resp_bits_s2_entry_perm_w,
  input         io_ptw_resp_bits_s2_entry_perm_r,
  input  [1:0]  io_ptw_resp_bits_s2_entry_level,
  input         io_ptw_resp_bits_s2_gpf,
  input         io_ptw_resp_bits_s2_gaf,
  input         io_ptw_resp_bits_getGpa,
  output        io_pmp_0_valid,
  output [35:0] io_pmp_0_bits_addr,
  output        io_pmp_1_valid,
  output [35:0] io_pmp_1_bits_addr
);

  wire             hasGpf_1;
  wire             hasGpf_0;
  wire             _entries_io_r_resp_0_bits_hit;
  wire [23:0]      _entries_io_r_resp_0_bits_ppn_0;
  wire             _entries_io_r_resp_0_bits_perm_0_pf;
  wire             _entries_io_r_resp_0_bits_perm_0_af;
  wire             _entries_io_r_resp_0_bits_perm_0_d;
  wire             _entries_io_r_resp_0_bits_perm_0_a;
  wire             _entries_io_r_resp_0_bits_perm_0_u;
  wire             _entries_io_r_resp_0_bits_perm_0_w;
  wire             _entries_io_r_resp_0_bits_g_perm_0_pf;
  wire             _entries_io_r_resp_0_bits_g_perm_0_af;
  wire             _entries_io_r_resp_0_bits_g_perm_0_d;
  wire             _entries_io_r_resp_0_bits_g_perm_0_a;
  wire             _entries_io_r_resp_0_bits_g_perm_0_w;
  wire [1:0]       _entries_io_r_resp_0_bits_s2xlate_0;
  wire             _entries_io_r_resp_1_bits_hit;
  wire [23:0]      _entries_io_r_resp_1_bits_ppn_0;
  wire             _entries_io_r_resp_1_bits_perm_0_pf;
  wire             _entries_io_r_resp_1_bits_perm_0_af;
  wire             _entries_io_r_resp_1_bits_perm_0_d;
  wire             _entries_io_r_resp_1_bits_perm_0_a;
  wire             _entries_io_r_resp_1_bits_perm_0_u;
  wire             _entries_io_r_resp_1_bits_perm_0_w;
  wire             _entries_io_r_resp_1_bits_g_perm_0_pf;
  wire             _entries_io_r_resp_1_bits_g_perm_0_af;
  wire             _entries_io_r_resp_1_bits_g_perm_0_d;
  wire             _entries_io_r_resp_1_bits_g_perm_0_a;
  wire             _entries_io_r_resp_1_bits_g_perm_0_w;
  wire [1:0]       _entries_io_r_resp_1_bits_s2xlate_0;
  wire             _flush_mmu_delay_io_out;
  wire [3:0]       _hgatp_delay_io_out_mode;
  wire [3:0]       _vsatp_delay_io_out_mode;
  wire [3:0]       _satp_delay_io_out_mode;
  wire [15:0]      _satp_delay_io_out_asid;
  wire             _sfence_delay_io_out_valid;
  wire             _sfence_delay_io_out_bits_rs1;
  wire             _sfence_delay_io_out_bits_rs2;
  wire [40:0]      _sfence_delay_io_out_bits_addr;
  wire [15:0]      _sfence_delay_io_out_bits_id;
  wire             _sfence_delay_io_out_bits_hv;
  wire             _sfence_delay_io_out_bits_hg;
  reg  [40:0]      req_out_0_vaddr;
  reg              req_out_0_hyperinst;
  reg              req_out_0_debug_robIdx_flag;
  reg  [7:0]       req_out_0_debug_robIdx_value;
  reg  [40:0]      req_out_1_vaddr;
  reg              req_out_1_hyperinst;
  reg              req_out_1_debug_robIdx_flag;
  reg  [7:0]       req_out_1_debug_robIdx_value;
  reg              req_out_v_0;
  reg              req_out_v_1;
  wire             isHyperInst_0 = req_out_v_0 & req_out_0_hyperinst;
  wire             isHyperInst_1 = req_out_v_1 & req_out_1_hyperinst;
  wire [1:0]       _GEN = {1'h0, io_csr_priv_spvp};
  wire [1:0]       mode_0 = isHyperInst_0 ? _GEN : io_csr_priv_dmode;
  wire [1:0]       mode_1 = isHyperInst_1 ? _GEN : io_csr_priv_dmode;
  reg              virt_out_0;
  reg              virt_out_1;
  wire             _req_out_s2xlate_T = virt_out_0 | isHyperInst_0;
  wire             _req_out_s2xlate_T_10 = virt_out_1 | isHyperInst_1;
  wire             _req_s2xlate_T_17 = io_csr_vsatp_mode == 4'h0;
  wire             _req_s2xlate_T_18 = io_csr_hgatp_mode == 4'h0;
  wire [1:0]       _GEN_0 = {1'h0, _req_s2xlate_T_18};
  wire [1:0]       req_in_s2xlate_0 =
    io_csr_priv_virt | io_requestor_0_req_bits_hyperinst
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : _GEN_0)
      : 2'h0;
  wire [1:0]       req_in_s2xlate_1 =
    io_csr_priv_virt | io_requestor_1_req_bits_hyperinst
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : _GEN_0)
      : 2'h0;
  wire [1:0]       req_out_s2xlate_0 =
    _req_out_s2xlate_T
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : _GEN_0)
      : 2'h0;
  wire [1:0]       req_out_s2xlate_1 =
    _req_out_s2xlate_T_10
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : _GEN_0)
      : 2'h0;
  reg              need_gpa;
  reg              need_gpa_robidx_flag;
  reg  [7:0]       need_gpa_robidx_value;
  reg  [28:0]      need_gpa_vpn;
  reg  [28:0]      need_gpa_gvpn;
  reg              resp_gpa_refill;
  wire             _s2xlateEnable_T = isHyperInst_0 | virt_out_0;
  wire             _vmEnable_T_7 = _satp_delay_io_out_mode == 4'h8;
  wire             _s2xlateEnable_T_5 = mode_0 != 2'h3;
  wire             _s2xlateEnable_T_6 = isHyperInst_1 | virt_out_1;
  wire             _s2xlateEnable_T_11 = mode_1 != 2'h3;
  wire             _s2xlateEnable_T_7 = _vsatp_delay_io_out_mode == 4'h8;
  wire             _s2xlateEnable_T_8 = _hgatp_delay_io_out_mode == 4'h8;
  wire             _portTranslateEnable_T =
    ~_s2xlateEnable_T & _vmEnable_T_7 & _s2xlateEnable_T_5 | _s2xlateEnable_T
    & (_s2xlateEnable_T_7 | _s2xlateEnable_T_8) & _s2xlateEnable_T_5;
  wire             _portTranslateEnable_T_2 =
    ~_s2xlateEnable_T_6 & _vmEnable_T_7 & _s2xlateEnable_T_11 | _s2xlateEnable_T_6
    & (_s2xlateEnable_T_7 | _s2xlateEnable_T_8) & _s2xlateEnable_T_11;
  wire             _ptw_just_back_noS2_hit_vmid_hit_T_1 =
    {2'h0, io_ptw_resp_bits_s1_entry_vmid} == io_csr_hgatp_asid;
  wire             _ptw_just_back_noS2_hit_T_16 = io_ptw_resp_bits_s1_entry_level == 2'h2;
  wire             _ptw_just_back_noS2_hit_T_19 = io_ptw_resp_bits_s1_entry_level == 2'h1;
  wire [7:0]       _GEN_1 =
    {{io_ptw_resp_bits_s1_valididx_7},
     {io_ptw_resp_bits_s1_valididx_6},
     {io_ptw_resp_bits_s1_valididx_5},
     {io_ptw_resp_bits_s1_valididx_4},
     {io_ptw_resp_bits_s1_valididx_3},
     {io_ptw_resp_bits_s1_valididx_2},
     {io_ptw_resp_bits_s1_valididx_1},
     {io_ptw_resp_bits_s1_valididx_0}};
  wire             ptw_just_back_onlyS2_hit_vmid_hit =
    {2'h0, io_ptw_resp_bits_s2_entry_vmid} == io_csr_hgatp_asid;
  wire             _ptw_just_back_onlyS2_hit_T_7 =
    io_ptw_resp_bits_s2_entry_level == 2'h2;
  wire             _ptw_just_back_onlyS2_hit_T_10 =
    io_ptw_resp_bits_s2_entry_level == 2'h1;
  wire             _ptw_just_back_level_T_1 =
    io_ptw_resp_bits_s1_entry_level < io_ptw_resp_bits_s2_entry_level;
  wire             ptw_just_back_vasid_hit =
    io_ptw_resp_bits_s1_entry_asid == io_csr_vsatp_asid;
  wire             _ptw_just_back_T_12 = io_ptw_resp_bits_s2xlate == 2'h0;
  wire             _ptw_just_back_T_13 = io_ptw_resp_bits_s2xlate == 2'h2;
  reg              readResult_p_hit_last_REG;
  reg  [28:0]      readResult_p_ppn;
  reg              readResult_p_perm_pf;
  reg              readResult_p_perm_af;
  reg              readResult_p_perm_d;
  reg              readResult_p_perm_a;
  reg              readResult_p_perm_u;
  reg              readResult_p_perm_w;
  reg  [28:0]      readResult_p_gvpn;
  reg              readResult_p_g_perm_pf;
  reg              readResult_p_g_perm_af;
  reg              readResult_p_g_perm_d;
  reg              readResult_p_g_perm_a;
  reg              readResult_p_g_perm_w;
  reg  [1:0]       readResult_p_s2xlate;
  wire             onlyS2 = req_out_s2xlate_0 == 2'h2;
  wire             readResult_need_gpa_vpn_hit = need_gpa_vpn == req_out_0_vaddr[40:12];
  wire [8:0]       _readResult_flushItself_T_5 =
    {need_gpa_robidx_flag, need_gpa_robidx_value};
  wire [8:0]       _readResult_flushItself_T_6 =
    {io_redirect_bits_robIdx_flag, io_redirect_bits_robIdx_value};
  wire             readResult_differentFlag =
    need_gpa_robidx_flag ^ io_redirect_bits_robIdx_flag;
  wire             readResult_compare =
    need_gpa_robidx_value > io_redirect_bits_robIdx_value;
  wire             _readResult_T_4 =
    io_redirect_valid
    & (io_redirect_bits_level & _readResult_flushItself_T_5 == _readResult_flushItself_T_6
       | readResult_differentFlag ^ readResult_compare);
  wire             _readResult_T_17 =
    req_out_v_0 & ~readResult_p_hit_last_REG
    & ~(resp_gpa_refill & readResult_need_gpa_vpn_hit) & ~onlyS2 & hasGpf_0 & ~need_gpa;
  wire [1:0]       readResult_level =
    _ptw_just_back_level_T_1
      ? io_ptw_resp_bits_s2_entry_level
      : io_ptw_resp_bits_s1_entry_level;
  wire [2:0]       _GEN_2 =
    {io_ptw_resp_bits_s1_pteidx_7,
     io_ptw_resp_bits_s1_pteidx_6,
     io_ptw_resp_bits_s1_pteidx_5};
  wire [2:0]       _GEN_3 =
    {io_ptw_resp_bits_s1_pteidx_3,
     io_ptw_resp_bits_s1_pteidx_2,
     io_ptw_resp_bits_s1_pteidx_1};
  wire [2:0]       _readResult_s1tag_T_2 = _GEN_2 | _GEN_3;
  wire [28:0]      readResult_s1tag =
    {io_ptw_resp_bits_s1_entry_tag,
     |{io_ptw_resp_bits_s1_pteidx_7,
       io_ptw_resp_bits_s1_pteidx_6,
       io_ptw_resp_bits_s1_pteidx_5,
       io_ptw_resp_bits_s1_pteidx_4},
     |(_readResult_s1tag_T_2[2:1]),
     _readResult_s1tag_T_2[2] | _readResult_s1tag_T_2[0]};
  wire [19:0]      _GEN_4 =
    {io_ptw_resp_bits_s1_entry_tag[25:15], io_ptw_resp_bits_s2_entry_tag[17:9]};
  wire [19:0]      _GEN_5 =
    {io_ptw_resp_bits_s1_entry_tag[25:15], io_ptw_resp_bits_s2_entry_tag[17:9]};
  wire [19:0]      readResult_s1tagFix =
    ~(|io_ptw_resp_bits_s1_entry_level) & _ptw_just_back_onlyS2_hit_T_10
      ? _GEN_5
      : ~(|io_ptw_resp_bits_s1_entry_level) & _ptw_just_back_onlyS2_hit_T_7
          ? _GEN_4
          : _ptw_just_back_noS2_hit_T_19 & _ptw_just_back_onlyS2_hit_T_7
              ? io_ptw_resp_bits_s1_entry_tag[25:6]
              : io_ptw_resp_bits_s1_entry_tag[25:6];
  wire             _readResult_T_27 =
    io_ptw_resp_valid & need_gpa
    & need_gpa_vpn == (_ptw_just_back_T_13
                         ? io_ptw_resp_bits_s2_entry_tag
                         : (&io_ptw_resp_bits_s2xlate)
                             ? (readResult_level == 2'h1
                                  ? {readResult_s1tagFix, need_gpa_vpn[8:0]}
                                  : readResult_level == 2'h0
                                      ? {readResult_s1tagFix[19:9], need_gpa_vpn[17:0]}
                                      : readResult_s1tag)
                             : readResult_s1tag);
  wire             _GEN_6 = _readResult_T_4 | _readResult_T_17;
  wire             hit_read_0 = _entries_io_r_resp_0_bits_hit | readResult_p_hit_last_REG;
  wire             miss_read_0 =
    ~hit_read_0 & _portTranslateEnable_T | hasGpf_0 & ~readResult_p_hit_last_REG
    & ~(resp_gpa_refill & readResult_need_gpa_vpn_hit) & ~onlyS2;
  wire             readResult_0_4_0_u =
    readResult_p_hit_last_REG ? readResult_p_perm_u : _entries_io_r_resp_0_bits_perm_0_u;
  wire [35:0]      io_pmp_0_bits_addr_0 =
    _portTranslateEnable_T
      ? {readResult_p_hit_last_REG
           ? readResult_p_ppn[23:0]
           : _entries_io_r_resp_0_bits_ppn_0,
         req_out_0_vaddr[11:0]}
      : req_out_0_vaddr[35:0];
  reg              readResult_p_hit_last_REG_1;
  reg  [28:0]      readResult_p_ppn_1;
  reg              readResult_p_perm_1_pf;
  reg              readResult_p_perm_1_af;
  reg              readResult_p_perm_1_d;
  reg              readResult_p_perm_1_a;
  reg              readResult_p_perm_1_u;
  reg              readResult_p_perm_1_w;
  reg  [28:0]      readResult_p_gvpn_1;
  reg              readResult_p_g_perm_1_pf;
  reg              readResult_p_g_perm_1_af;
  reg              readResult_p_g_perm_1_d;
  reg              readResult_p_g_perm_1_a;
  reg              readResult_p_g_perm_1_w;
  reg  [1:0]       readResult_p_s2xlate_1;
  wire             onlyS2_1 = req_out_s2xlate_1 == 2'h2;
  wire             readResult_need_gpa_vpn_hit_1 = need_gpa_vpn == req_out_1_vaddr[40:12];
  wire             _readResult_T_41 =
    io_redirect_valid
    & (io_redirect_bits_level & _readResult_flushItself_T_5 == _readResult_flushItself_T_6
       | readResult_differentFlag ^ readResult_compare);
  wire             _readResult_T_54 =
    req_out_v_1 & ~readResult_p_hit_last_REG_1
    & ~(resp_gpa_refill & readResult_need_gpa_vpn_hit_1) & ~onlyS2_1 & hasGpf_1
    & ~need_gpa;
  wire [1:0]       readResult_level_1 =
    _ptw_just_back_level_T_1
      ? io_ptw_resp_bits_s2_entry_level
      : io_ptw_resp_bits_s1_entry_level;
  wire [2:0]       _readResult_s1tag_T_10 = _GEN_2 | _GEN_3;
  wire [28:0]      readResult_s1tag_1 =
    {io_ptw_resp_bits_s1_entry_tag,
     |{io_ptw_resp_bits_s1_pteidx_7,
       io_ptw_resp_bits_s1_pteidx_6,
       io_ptw_resp_bits_s1_pteidx_5,
       io_ptw_resp_bits_s1_pteidx_4},
     |(_readResult_s1tag_T_10[2:1]),
     _readResult_s1tag_T_10[2] | _readResult_s1tag_T_10[0]};
  wire [19:0]      readResult_s1tagFix_1 =
    ~(|io_ptw_resp_bits_s1_entry_level) & _ptw_just_back_onlyS2_hit_T_10
      ? _GEN_5
      : ~(|io_ptw_resp_bits_s1_entry_level) & _ptw_just_back_onlyS2_hit_T_7
          ? _GEN_4
          : _ptw_just_back_noS2_hit_T_19 & _ptw_just_back_onlyS2_hit_T_7
              ? io_ptw_resp_bits_s1_entry_tag[25:6]
              : io_ptw_resp_bits_s1_entry_tag[25:6];
  wire             _readResult_T_64 =
    io_ptw_resp_valid & need_gpa
    & need_gpa_vpn == (_ptw_just_back_T_13
                         ? io_ptw_resp_bits_s2_entry_tag
                         : (&io_ptw_resp_bits_s2xlate)
                             ? (readResult_level_1 == 2'h1
                                  ? {readResult_s1tagFix_1, need_gpa_vpn[8:0]}
                                  : readResult_level_1 == 2'h0
                                      ? {readResult_s1tagFix_1[19:9], need_gpa_vpn[17:0]}
                                      : readResult_s1tag_1)
                             : readResult_s1tag_1);
  wire             _GEN_7 = _readResult_T_41 | _readResult_T_54;
  wire             hit_read_1 =
    _entries_io_r_resp_1_bits_hit | readResult_p_hit_last_REG_1;
  wire             miss_read_1 =
    ~hit_read_1 & _portTranslateEnable_T_2 | hasGpf_1 & ~readResult_p_hit_last_REG_1
    & ~(resp_gpa_refill & readResult_need_gpa_vpn_hit_1) & ~onlyS2_1;
  wire             readResult_1_4_0_u =
    readResult_p_hit_last_REG_1
      ? readResult_p_perm_1_u
      : _entries_io_r_resp_1_bits_perm_0_u;
  wire [35:0]      io_pmp_1_bits_addr_0 =
    _portTranslateEnable_T_2
      ? {readResult_p_hit_last_REG_1
           ? readResult_p_ppn_1[23:0]
           : _entries_io_r_resp_1_bits_ppn_0,
         req_out_1_vaddr[11:0]}
      : req_out_1_vaddr[35:0];
  wire             af =
    (readResult_p_hit_last_REG
       ? readResult_p_perm_af
       : _entries_io_r_resp_0_bits_perm_0_af) | (|req_out_s2xlate_0)
    & (readResult_p_hit_last_REG
         ? readResult_p_g_perm_af
         : _entries_io_r_resp_0_bits_g_perm_0_af);
  wire             _stUpdate_T_2 =
    ~(readResult_p_hit_last_REG
        ? readResult_p_perm_a
        : _entries_io_r_resp_0_bits_perm_0_a)
    | ~(readResult_p_hit_last_REG
          ? readResult_p_perm_d
          : _entries_io_r_resp_0_bits_perm_0_d);
  wire             _stPf_T =
    ~(~(mode_0 == 2'h0 & ~readResult_0_4_0_u | mode_0 == 2'h1 & readResult_0_4_0_u
        & ~(_req_out_s2xlate_T ? io_csr_priv_vsum : io_csr_priv_sum))
      & (readResult_p_hit_last_REG
           ? readResult_p_perm_w
           : _entries_io_r_resp_0_bits_perm_0_w))
    | (readResult_p_hit_last_REG
         ? readResult_p_perm_pf
         : _entries_io_r_resp_0_bits_perm_0_pf);
  wire             s1_valid = _portTranslateEnable_T & ~onlyS2;
  wire             s2_valid = (|req_out_s2xlate_0) & _portTranslateEnable_T;
  assign hasGpf_0 =
    (~(readResult_p_hit_last_REG
         ? readResult_p_g_perm_w
         : _entries_io_r_resp_0_bits_g_perm_0_w)
     | (readResult_p_hit_last_REG
          ? readResult_p_g_perm_pf
          : _entries_io_r_resp_0_bits_g_perm_0_pf)
     | ~(readResult_p_hit_last_REG
           ? readResult_p_g_perm_a
           : _entries_io_r_resp_0_bits_g_perm_0_a)
     | ~(readResult_p_hit_last_REG
           ? readResult_p_g_perm_d
           : _entries_io_r_resp_0_bits_g_perm_0_d)) & s2_valid & ~af
    & ~((_stPf_T | _stUpdate_T_2) & s1_valid & ~af);
  wire             af_1 =
    (readResult_p_hit_last_REG_1
       ? readResult_p_perm_1_af
       : _entries_io_r_resp_1_bits_perm_0_af) | (|req_out_s2xlate_1)
    & (readResult_p_hit_last_REG_1
         ? readResult_p_g_perm_1_af
         : _entries_io_r_resp_1_bits_g_perm_0_af);
  wire             _stUpdate_T_9 =
    ~(readResult_p_hit_last_REG_1
        ? readResult_p_perm_1_a
        : _entries_io_r_resp_1_bits_perm_0_a)
    | ~(readResult_p_hit_last_REG_1
          ? readResult_p_perm_1_d
          : _entries_io_r_resp_1_bits_perm_0_d);
  wire             _stPf_T_5 =
    ~(~(mode_1 == 2'h0 & ~readResult_1_4_0_u | mode_1 == 2'h1 & readResult_1_4_0_u
        & ~(_req_out_s2xlate_T_10 ? io_csr_priv_vsum : io_csr_priv_sum))
      & (readResult_p_hit_last_REG_1
           ? readResult_p_perm_1_w
           : _entries_io_r_resp_1_bits_perm_0_w))
    | (readResult_p_hit_last_REG_1
         ? readResult_p_perm_1_pf
         : _entries_io_r_resp_1_bits_perm_0_pf);
  wire             s1_valid_1 = _portTranslateEnable_T_2 & ~onlyS2_1;
  wire             s2_valid_1 = (|req_out_s2xlate_1) & _portTranslateEnable_T_2;
  assign hasGpf_1 =
    (~(readResult_p_hit_last_REG_1
         ? readResult_p_g_perm_1_w
         : _entries_io_r_resp_1_bits_g_perm_0_w)
     | (readResult_p_hit_last_REG_1
          ? readResult_p_g_perm_1_pf
          : _entries_io_r_resp_1_bits_g_perm_0_pf)
     | ~(readResult_p_hit_last_REG_1
           ? readResult_p_g_perm_1_a
           : _entries_io_r_resp_1_bits_g_perm_0_a)
     | ~(readResult_p_hit_last_REG_1
           ? readResult_p_g_perm_1_d
           : _entries_io_r_resp_1_bits_g_perm_0_d)) & s2_valid_1 & ~af_1
    & ~((_stPf_T_5 | _stUpdate_T_9) & s1_valid_1 & ~af_1);
  wire [1:0]       req_s2xlate =
    virt_out_0 | req_out_0_hyperinst
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : {1'h0, _req_s2xlate_T_18 | hasGpf_0})
      : 2'h0;
  wire             ptw_just_back_noS2_hit_hit0 =
    io_ptw_resp_bits_s1_entry_tag[25:15] == req_out_0_vaddr[40:30];
  wire             ptw_just_back_noS2_hit_hit1 =
    io_ptw_resp_bits_s1_entry_tag[14:6] == req_out_0_vaddr[29:21];
  wire             ptw_just_back_onlyS2_hit_hit0 =
    io_ptw_resp_bits_s2_entry_tag[28:18] == req_out_0_vaddr[40:30];
  wire             ptw_just_back_onlyS2_hit_hit1 =
    io_ptw_resp_bits_s2_entry_tag[17:9] == req_out_0_vaddr[29:21];
  wire [1:0]       ptw_just_back_level =
    _ptw_just_back_level_T_1
      ? io_ptw_resp_bits_s2_entry_level
      : io_ptw_resp_bits_s1_entry_level;
  wire             ptw_just_back_hit0 =
    req_out_0_vaddr[38:30] == io_ptw_resp_bits_s1_entry_tag[23:15];
  wire             ptw_just_back_hit1 =
    req_out_0_vaddr[29:21] == io_ptw_resp_bits_s1_entry_tag[14:6];
  reg  [1:0]       ptw_resp_bits_reg_s2xlate;
  reg  [25:0]      ptw_resp_bits_reg_s1_entry_tag;
  reg  [15:0]      ptw_resp_bits_reg_s1_entry_asid;
  reg  [13:0]      ptw_resp_bits_reg_s1_entry_vmid;
  reg  [1:0]       ptw_resp_bits_reg_s1_entry_level;
  reg  [2:0]       ptw_resp_bits_reg_s1_addr_low;
  reg              ptw_resp_bits_reg_s1_valididx_0;
  reg              ptw_resp_bits_reg_s1_valididx_1;
  reg              ptw_resp_bits_reg_s1_valididx_2;
  reg              ptw_resp_bits_reg_s1_valididx_3;
  reg              ptw_resp_bits_reg_s1_valididx_4;
  reg              ptw_resp_bits_reg_s1_valididx_5;
  reg              ptw_resp_bits_reg_s1_valididx_6;
  reg              ptw_resp_bits_reg_s1_valididx_7;
  reg  [28:0]      ptw_resp_bits_reg_s2_entry_tag;
  reg  [13:0]      ptw_resp_bits_reg_s2_entry_vmid;
  reg  [1:0]       ptw_resp_bits_reg_s2_entry_level;
  reg              ptw_already_back_last_REG;
  wire             ptw_already_back_noS2_hit_hit0 =
    ptw_resp_bits_reg_s1_entry_tag[25:15] == req_out_0_vaddr[40:30];
  wire             ptw_already_back_noS2_hit_hit1 =
    ptw_resp_bits_reg_s1_entry_tag[14:6] == req_out_0_vaddr[29:21];
  wire [7:0]       _GEN_8 =
    {{ptw_resp_bits_reg_s1_valididx_7},
     {ptw_resp_bits_reg_s1_valididx_6},
     {ptw_resp_bits_reg_s1_valididx_5},
     {ptw_resp_bits_reg_s1_valididx_4},
     {ptw_resp_bits_reg_s1_valididx_3},
     {ptw_resp_bits_reg_s1_valididx_2},
     {ptw_resp_bits_reg_s1_valididx_1},
     {ptw_resp_bits_reg_s1_valididx_0}};
  wire             ptw_already_back_onlyS2_hit_vmid_hit =
    {2'h0, ptw_resp_bits_reg_s2_entry_vmid} == io_csr_hgatp_asid;
  wire             ptw_already_back_onlyS2_hit_hit0 =
    ptw_resp_bits_reg_s2_entry_tag[28:18] == req_out_0_vaddr[40:30];
  wire             ptw_already_back_onlyS2_hit_hit1 =
    ptw_resp_bits_reg_s2_entry_tag[17:9] == req_out_0_vaddr[29:21];
  wire [1:0]       ptw_already_back_level =
    ptw_resp_bits_reg_s1_entry_level < ptw_resp_bits_reg_s2_entry_level
      ? ptw_resp_bits_reg_s2_entry_level
      : ptw_resp_bits_reg_s1_entry_level;
  wire             ptw_already_back_hit0 =
    req_out_0_vaddr[38:30] == ptw_resp_bits_reg_s1_entry_tag[23:15];
  wire             ptw_already_back_hit1 =
    req_out_0_vaddr[29:21] == ptw_resp_bits_reg_s1_entry_tag[14:6];
  wire [1:0]       req_s2xlate_1 =
    virt_out_1 | req_out_1_hyperinst
      ? ((|io_csr_vsatp_mode) & (|io_csr_hgatp_mode)
           ? 2'h3
           : _req_s2xlate_T_17 ? 2'h2 : {1'h0, _req_s2xlate_T_18 | hasGpf_1})
      : 2'h0;
  wire             ptw_just_back_noS2_hit_hit0_1 =
    io_ptw_resp_bits_s1_entry_tag[25:15] == req_out_1_vaddr[40:30];
  wire             ptw_just_back_noS2_hit_hit1_1 =
    io_ptw_resp_bits_s1_entry_tag[14:6] == req_out_1_vaddr[29:21];
  wire             ptw_just_back_onlyS2_hit_hit0_1 =
    io_ptw_resp_bits_s2_entry_tag[28:18] == req_out_1_vaddr[40:30];
  wire             ptw_just_back_onlyS2_hit_hit1_1 =
    io_ptw_resp_bits_s2_entry_tag[17:9] == req_out_1_vaddr[29:21];
  wire [1:0]       ptw_just_back_level_1 =
    _ptw_just_back_level_T_1
      ? io_ptw_resp_bits_s2_entry_level
      : io_ptw_resp_bits_s1_entry_level;
  wire             ptw_just_back_hit0_1 =
    req_out_1_vaddr[38:30] == io_ptw_resp_bits_s1_entry_tag[23:15];
  wire             ptw_just_back_hit1_1 =
    req_out_1_vaddr[29:21] == io_ptw_resp_bits_s1_entry_tag[14:6];
  reg  [1:0]       ptw_resp_bits_reg_1_s2xlate;
  reg  [25:0]      ptw_resp_bits_reg_1_s1_entry_tag;
  reg  [15:0]      ptw_resp_bits_reg_1_s1_entry_asid;
  reg  [13:0]      ptw_resp_bits_reg_1_s1_entry_vmid;
  reg  [1:0]       ptw_resp_bits_reg_1_s1_entry_level;
  reg  [2:0]       ptw_resp_bits_reg_1_s1_addr_low;
  reg              ptw_resp_bits_reg_1_s1_valididx_0;
  reg              ptw_resp_bits_reg_1_s1_valididx_1;
  reg              ptw_resp_bits_reg_1_s1_valididx_2;
  reg              ptw_resp_bits_reg_1_s1_valididx_3;
  reg              ptw_resp_bits_reg_1_s1_valididx_4;
  reg              ptw_resp_bits_reg_1_s1_valididx_5;
  reg              ptw_resp_bits_reg_1_s1_valididx_6;
  reg              ptw_resp_bits_reg_1_s1_valididx_7;
  reg  [28:0]      ptw_resp_bits_reg_1_s2_entry_tag;
  reg  [13:0]      ptw_resp_bits_reg_1_s2_entry_vmid;
  reg  [1:0]       ptw_resp_bits_reg_1_s2_entry_level;
  reg              ptw_already_back_last_REG_1;
  wire             ptw_already_back_noS2_hit_hit0_1 =
    ptw_resp_bits_reg_1_s1_entry_tag[25:15] == req_out_1_vaddr[40:30];
  wire             ptw_already_back_noS2_hit_hit1_1 =
    ptw_resp_bits_reg_1_s1_entry_tag[14:6] == req_out_1_vaddr[29:21];
  wire [7:0]       _GEN_9 =
    {{ptw_resp_bits_reg_1_s1_valididx_7},
     {ptw_resp_bits_reg_1_s1_valididx_6},
     {ptw_resp_bits_reg_1_s1_valididx_5},
     {ptw_resp_bits_reg_1_s1_valididx_4},
     {ptw_resp_bits_reg_1_s1_valididx_3},
     {ptw_resp_bits_reg_1_s1_valididx_2},
     {ptw_resp_bits_reg_1_s1_valididx_1},
     {ptw_resp_bits_reg_1_s1_valididx_0}};
  wire             ptw_already_back_onlyS2_hit_vmid_hit_1 =
    {2'h0, ptw_resp_bits_reg_1_s2_entry_vmid} == io_csr_hgatp_asid;
  wire             ptw_already_back_onlyS2_hit_hit0_1 =
    ptw_resp_bits_reg_1_s2_entry_tag[28:18] == req_out_1_vaddr[40:30];
  wire             ptw_already_back_onlyS2_hit_hit1_1 =
    ptw_resp_bits_reg_1_s2_entry_tag[17:9] == req_out_1_vaddr[29:21];
  wire [1:0]       ptw_already_back_level_1 =
    ptw_resp_bits_reg_1_s1_entry_level < ptw_resp_bits_reg_1_s2_entry_level
      ? ptw_resp_bits_reg_1_s2_entry_level
      : ptw_resp_bits_reg_1_s1_entry_level;
  wire             ptw_already_back_hit0_1 =
    req_out_1_vaddr[38:30] == ptw_resp_bits_reg_1_s1_entry_tag[23:15];
  wire             ptw_already_back_hit1_1 =
    req_out_1_vaddr[29:21] == ptw_resp_bits_reg_1_s1_entry_tag[14:6];
  wire             readResult_onlyS2 = req_in_s2xlate_0 == 2'h2;
  wire [7:0][2:0]  _GEN_10 =
    {{io_ptw_resp_bits_s1_ppn_low_7},
     {io_ptw_resp_bits_s1_ppn_low_6},
     {io_ptw_resp_bits_s1_ppn_low_5},
     {io_ptw_resp_bits_s1_ppn_low_4},
     {io_ptw_resp_bits_s1_ppn_low_3},
     {io_ptw_resp_bits_s1_ppn_low_2},
     {io_ptw_resp_bits_s1_ppn_low_1},
     {io_ptw_resp_bits_s1_ppn_low_0}};
  wire             _readResult_ppn_s1_T_25 = io_ptw_resp_bits_s1_entry_level == 2'h1;
  wire             _readResult_ppn_s1_T_27 = io_ptw_resp_bits_s1_entry_level == 2'h2;
  wire [28:0]      readResult_ppn_s1 =
    _readResult_ppn_s1_T_27
      ? {io_ptw_resp_bits_s1_entry_ppn, _GEN_10[io_requestor_0_req_bits_vaddr[14:12]]}
      : _readResult_ppn_s1_T_25
          ? {io_ptw_resp_bits_s1_entry_ppn[25:6], io_requestor_0_req_bits_vaddr[20:12]}
          : (|io_ptw_resp_bits_s1_entry_level)
              ? 29'h0
              : {io_ptw_resp_bits_s1_entry_ppn[25:15],
                 io_requestor_0_req_bits_vaddr[29:12]};
  wire [17:0]      readResult_gvpn =
    readResult_onlyS2 ? io_requestor_0_req_bits_vaddr[29:12] : readResult_ppn_s1[17:0];
  wire             readResult_onlyS2_1 = req_in_s2xlate_1 == 2'h2;
  wire [28:0]      readResult_ppn_s1_1 =
    _readResult_ppn_s1_T_27
      ? {io_ptw_resp_bits_s1_entry_ppn, _GEN_10[io_requestor_1_req_bits_vaddr[14:12]]}
      : _readResult_ppn_s1_T_25
          ? {io_ptw_resp_bits_s1_entry_ppn[25:6], io_requestor_1_req_bits_vaddr[20:12]}
          : (|io_ptw_resp_bits_s1_entry_level)
              ? 29'h0
              : {io_ptw_resp_bits_s1_entry_ppn[25:15],
                 io_requestor_1_req_bits_vaddr[29:12]};
  wire [17:0]      readResult_gvpn_2 =
    readResult_onlyS2_1
      ? io_requestor_1_req_bits_vaddr[29:12]
      : readResult_ppn_s1_1[17:0];
  wire [3:0][23:0] _GEN_11 =
    {{24'h0},
     {io_ptw_resp_bits_s2_entry_ppn},
     {{io_ptw_resp_bits_s2_entry_ppn[23:9], readResult_gvpn[8:0]}},
     {{io_ptw_resp_bits_s2_entry_ppn[23:18], readResult_gvpn}}};
  wire [3:0][23:0] _GEN_12 =
    {{24'h0},
     {io_ptw_resp_bits_s2_entry_ppn},
     {{io_ptw_resp_bits_s2_entry_ppn[23:9], readResult_gvpn_2[8:0]}},
     {{io_ptw_resp_bits_s2_entry_ppn[23:18], readResult_gvpn_2}}};
  wire             _GEN_13 = _GEN_6 | ~_readResult_T_27;
  always @(posedge clock) begin
    if (io_requestor_0_req_valid) begin
      req_out_0_vaddr <= io_requestor_0_req_bits_vaddr;
      req_out_0_hyperinst <= io_requestor_0_req_bits_hyperinst;
      req_out_0_debug_robIdx_flag <= io_requestor_0_req_bits_debug_robIdx_flag;
      req_out_0_debug_robIdx_value <= io_requestor_0_req_bits_debug_robIdx_value;
      virt_out_0 <= io_csr_priv_virt;
    end
    if (io_requestor_1_req_valid) begin
      req_out_1_vaddr <= io_requestor_1_req_bits_vaddr;
      req_out_1_hyperinst <= io_requestor_1_req_bits_hyperinst;
      req_out_1_debug_robIdx_flag <= io_requestor_1_req_bits_debug_robIdx_flag;
      req_out_1_debug_robIdx_value <= io_requestor_1_req_bits_debug_robIdx_value;
      virt_out_1 <= io_csr_priv_virt;
    end
    if (_readResult_T_41 | ~_readResult_T_54) begin
      if (_readResult_T_4 | ~_readResult_T_17) begin
      end
      else begin
        need_gpa_robidx_flag <= req_out_0_debug_robIdx_flag;
        need_gpa_robidx_value <= req_out_0_debug_robIdx_value;
      end
    end
    else begin
      need_gpa_robidx_flag <= req_out_1_debug_robIdx_flag;
      need_gpa_robidx_value <= req_out_1_debug_robIdx_value;
    end
    if (_readResult_T_41)
      need_gpa_vpn <= 29'h0;
    else if (_readResult_T_54)
      need_gpa_vpn <= req_out_1_vaddr[40:12];
    else if (_readResult_T_4)
      need_gpa_vpn <= 29'h0;
    else if (_readResult_T_17)
      need_gpa_vpn <= req_out_0_vaddr[40:12];
    if (_GEN_7) begin
      if (_GEN_13) begin
      end
      else
        need_gpa_gvpn <= io_ptw_resp_bits_s2_entry_tag;
    end
    else if (_readResult_T_64 | ~_GEN_13)
      need_gpa_gvpn <= io_ptw_resp_bits_s2_entry_tag;
    if (io_ptw_resp_valid) begin
      readResult_p_ppn <=
        (|req_in_s2xlate_0)
          ? {5'h0, _GEN_11[io_ptw_resp_bits_s2_entry_level]}
          : readResult_ppn_s1;
      readResult_p_perm_pf <= io_ptw_resp_bits_s1_pf;
      readResult_p_perm_af <= io_ptw_resp_bits_s1_af;
      readResult_p_perm_d <= io_ptw_resp_bits_s1_entry_perm_d;
      readResult_p_perm_a <= io_ptw_resp_bits_s1_entry_perm_a;
      readResult_p_perm_u <= io_ptw_resp_bits_s1_entry_perm_u;
      readResult_p_perm_w <= io_ptw_resp_bits_s1_entry_perm_w;
      readResult_p_gvpn <=
        readResult_onlyS2 ? io_ptw_resp_bits_s2_entry_tag : readResult_ppn_s1;
      readResult_p_g_perm_pf <= io_ptw_resp_bits_s2_gpf;
      readResult_p_g_perm_af <= io_ptw_resp_bits_s2_gaf;
      readResult_p_g_perm_d <= io_ptw_resp_bits_s2_entry_perm_d;
      readResult_p_g_perm_a <= io_ptw_resp_bits_s2_entry_perm_a;
      readResult_p_g_perm_w <= io_ptw_resp_bits_s2_entry_perm_w;
      readResult_p_s2xlate <= io_ptw_resp_bits_s2xlate;
      readResult_p_ppn_1 <=
        (|req_in_s2xlate_1)
          ? {5'h0, _GEN_12[io_ptw_resp_bits_s2_entry_level]}
          : readResult_ppn_s1_1;
      readResult_p_perm_1_pf <= io_ptw_resp_bits_s1_pf;
      readResult_p_perm_1_af <= io_ptw_resp_bits_s1_af;
      readResult_p_perm_1_d <= io_ptw_resp_bits_s1_entry_perm_d;
      readResult_p_perm_1_a <= io_ptw_resp_bits_s1_entry_perm_a;
      readResult_p_perm_1_u <= io_ptw_resp_bits_s1_entry_perm_u;
      readResult_p_perm_1_w <= io_ptw_resp_bits_s1_entry_perm_w;
      readResult_p_gvpn_1 <=
        readResult_onlyS2_1 ? io_ptw_resp_bits_s2_entry_tag : readResult_ppn_s1_1;
      readResult_p_g_perm_1_pf <= io_ptw_resp_bits_s2_gpf;
      readResult_p_g_perm_1_af <= io_ptw_resp_bits_s2_gaf;
      readResult_p_g_perm_1_d <= io_ptw_resp_bits_s2_entry_perm_d;
      readResult_p_g_perm_1_a <= io_ptw_resp_bits_s2_entry_perm_a;
      readResult_p_g_perm_1_w <= io_ptw_resp_bits_s2_entry_perm_w;
      readResult_p_s2xlate_1 <= io_ptw_resp_bits_s2xlate;
      ptw_resp_bits_reg_s2xlate <= io_ptw_resp_bits_s2xlate;
      ptw_resp_bits_reg_s1_entry_tag <= io_ptw_resp_bits_s1_entry_tag;
      ptw_resp_bits_reg_s1_entry_asid <= io_ptw_resp_bits_s1_entry_asid;
      ptw_resp_bits_reg_s1_entry_vmid <= io_ptw_resp_bits_s1_entry_vmid;
      ptw_resp_bits_reg_s1_entry_level <= io_ptw_resp_bits_s1_entry_level;
      ptw_resp_bits_reg_s1_addr_low <= io_ptw_resp_bits_s1_addr_low;
      ptw_resp_bits_reg_s1_valididx_0 <= io_ptw_resp_bits_s1_valididx_0;
      ptw_resp_bits_reg_s1_valididx_1 <= io_ptw_resp_bits_s1_valididx_1;
      ptw_resp_bits_reg_s1_valididx_2 <= io_ptw_resp_bits_s1_valididx_2;
      ptw_resp_bits_reg_s1_valididx_3 <= io_ptw_resp_bits_s1_valididx_3;
      ptw_resp_bits_reg_s1_valididx_4 <= io_ptw_resp_bits_s1_valididx_4;
      ptw_resp_bits_reg_s1_valididx_5 <= io_ptw_resp_bits_s1_valididx_5;
      ptw_resp_bits_reg_s1_valididx_6 <= io_ptw_resp_bits_s1_valididx_6;
      ptw_resp_bits_reg_s1_valididx_7 <= io_ptw_resp_bits_s1_valididx_7;
      ptw_resp_bits_reg_s2_entry_tag <= io_ptw_resp_bits_s2_entry_tag;
      ptw_resp_bits_reg_s2_entry_vmid <= io_ptw_resp_bits_s2_entry_vmid;
      ptw_resp_bits_reg_s2_entry_level <= io_ptw_resp_bits_s2_entry_level;
      ptw_resp_bits_reg_1_s2xlate <= io_ptw_resp_bits_s2xlate;
      ptw_resp_bits_reg_1_s1_entry_tag <= io_ptw_resp_bits_s1_entry_tag;
      ptw_resp_bits_reg_1_s1_entry_asid <= io_ptw_resp_bits_s1_entry_asid;
      ptw_resp_bits_reg_1_s1_entry_vmid <= io_ptw_resp_bits_s1_entry_vmid;
      ptw_resp_bits_reg_1_s1_entry_level <= io_ptw_resp_bits_s1_entry_level;
      ptw_resp_bits_reg_1_s1_addr_low <= io_ptw_resp_bits_s1_addr_low;
      ptw_resp_bits_reg_1_s1_valididx_0 <= io_ptw_resp_bits_s1_valididx_0;
      ptw_resp_bits_reg_1_s1_valididx_1 <= io_ptw_resp_bits_s1_valididx_1;
      ptw_resp_bits_reg_1_s1_valididx_2 <= io_ptw_resp_bits_s1_valididx_2;
      ptw_resp_bits_reg_1_s1_valididx_3 <= io_ptw_resp_bits_s1_valididx_3;
      ptw_resp_bits_reg_1_s1_valididx_4 <= io_ptw_resp_bits_s1_valididx_4;
      ptw_resp_bits_reg_1_s1_valididx_5 <= io_ptw_resp_bits_s1_valididx_5;
      ptw_resp_bits_reg_1_s1_valididx_6 <= io_ptw_resp_bits_s1_valididx_6;
      ptw_resp_bits_reg_1_s1_valididx_7 <= io_ptw_resp_bits_s1_valididx_7;
      ptw_resp_bits_reg_1_s2_entry_tag <= io_ptw_resp_bits_s2_entry_tag;
      ptw_resp_bits_reg_1_s2_entry_vmid <= io_ptw_resp_bits_s2_entry_vmid;
      ptw_resp_bits_reg_1_s2_entry_level <= io_ptw_resp_bits_s2_entry_level;
    end
  end // always @(posedge)
  wire             readResult_resp_hit_noS2_hit_hit0 =
    io_ptw_resp_bits_s1_entry_tag[25:15] == io_requestor_0_req_bits_vaddr[40:30];
  wire             readResult_resp_hit_noS2_hit_hit1 =
    io_ptw_resp_bits_s1_entry_tag[14:6] == io_requestor_0_req_bits_vaddr[29:21];
  wire             readResult_resp_hit_onlyS2_hit_hit0 =
    io_ptw_resp_bits_s2_entry_tag[28:18] == io_requestor_0_req_bits_vaddr[40:30];
  wire             readResult_resp_hit_onlyS2_hit_hit1 =
    io_ptw_resp_bits_s2_entry_tag[17:9] == io_requestor_0_req_bits_vaddr[29:21];
  wire [1:0]       readResult_resp_hit_level =
    _ptw_just_back_level_T_1
      ? io_ptw_resp_bits_s2_entry_level
      : io_ptw_resp_bits_s1_entry_level;
  wire             readResult_resp_hit_hit0 =
    io_requestor_0_req_bits_vaddr[38:30] == io_ptw_resp_bits_s1_entry_tag[23:15];
  wire             readResult_resp_hit_hit1 =
    io_requestor_0_req_bits_vaddr[29:21] == io_ptw_resp_bits_s1_entry_tag[14:6];
  wire             readResult_resp_hit_noS2_hit_hit0_1 =
    io_ptw_resp_bits_s1_entry_tag[25:15] == io_requestor_1_req_bits_vaddr[40:30];
  wire             readResult_resp_hit_noS2_hit_hit1_1 =
    io_ptw_resp_bits_s1_entry_tag[14:6] == io_requestor_1_req_bits_vaddr[29:21];
  wire             readResult_resp_hit_onlyS2_hit_hit0_1 =
    io_ptw_resp_bits_s2_entry_tag[28:18] == io_requestor_1_req_bits_vaddr[40:30];
  wire             readResult_resp_hit_onlyS2_hit_hit1_1 =
    io_ptw_resp_bits_s2_entry_tag[17:9] == io_requestor_1_req_bits_vaddr[29:21];
  wire [1:0]       readResult_resp_hit_level_1 =
    _ptw_just_back_level_T_1
      ? io_ptw_resp_bits_s2_entry_level
      : io_ptw_resp_bits_s1_entry_level;
  wire             readResult_resp_hit_hit0_1 =
    io_requestor_1_req_bits_vaddr[38:30] == io_ptw_resp_bits_s1_entry_tag[23:15];
  wire             readResult_resp_hit_hit1_1 =
    io_requestor_1_req_bits_vaddr[29:21] == io_ptw_resp_bits_s1_entry_tag[14:6];
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      req_out_v_0 <= 1'h0;
      req_out_v_1 <= 1'h0;
      need_gpa <= 1'h0;
      resp_gpa_refill <= 1'h0;
      readResult_p_hit_last_REG <= 1'h0;
      readResult_p_hit_last_REG_1 <= 1'h0;
      ptw_already_back_last_REG <= 1'h0;
      ptw_already_back_last_REG_1 <= 1'h0;
    end
    else begin
      req_out_v_0 <= io_requestor_0_req_valid;
      req_out_v_1 <= io_requestor_1_req_valid;
      need_gpa <=
        ~(req_out_v_1 & hasGpf_1 & resp_gpa_refill & readResult_need_gpa_vpn_hit_1
          | _readResult_T_41)
        & (_readResult_T_54
           | ~(req_out_v_0 & hasGpf_0 & resp_gpa_refill & readResult_need_gpa_vpn_hit
               | _readResult_T_4) & (_readResult_T_17 | need_gpa));
      resp_gpa_refill <=
        ~_GEN_7 & (_readResult_T_64 | ~_GEN_6 & (_readResult_T_27 | resp_gpa_refill));
      readResult_p_hit_last_REG <=
        (_ptw_just_back_T_12
           ? io_ptw_resp_bits_s1_entry_asid == ((|io_ptw_resp_bits_s2xlate)
                                                  ? io_csr_vsatp_asid
                                                  : io_csr_satp_asid)
             & (~(|io_ptw_resp_bits_s2xlate) | _ptw_just_back_noS2_hit_vmid_hit_T_1)
             & (_ptw_just_back_noS2_hit_T_16
                  ? io_ptw_resp_bits_s1_entry_tag[5:0] == io_requestor_0_req_bits_vaddr[20:15]
                    & readResult_resp_hit_noS2_hit_hit1
                    & readResult_resp_hit_noS2_hit_hit0
                  : (~_ptw_just_back_noS2_hit_T_19 | readResult_resp_hit_noS2_hit_hit1)
                    & readResult_resp_hit_noS2_hit_hit0)
             & _GEN_1[io_requestor_0_req_bits_vaddr[14:12]]
           : _ptw_just_back_T_13
               ? ptw_just_back_onlyS2_hit_vmid_hit
                 & (_ptw_just_back_onlyS2_hit_T_7
                      ? io_ptw_resp_bits_s2_entry_tag[8:0] == io_requestor_0_req_bits_vaddr[20:12]
                        & readResult_resp_hit_onlyS2_hit_hit1
                        & readResult_resp_hit_onlyS2_hit_hit0
                      : (~_ptw_just_back_onlyS2_hit_T_10
                         | readResult_resp_hit_onlyS2_hit_hit1)
                        & readResult_resp_hit_onlyS2_hit_hit0)
               : (readResult_resp_hit_level == 2'h2
                    ? io_requestor_0_req_bits_vaddr[20:12] == {io_ptw_resp_bits_s1_entry_tag[5:0],
                                                               io_ptw_resp_bits_s1_addr_low}
                      & readResult_resp_hit_hit1 & readResult_resp_hit_hit0
                    : (readResult_resp_hit_level != 2'h1 | readResult_resp_hit_hit1)
                      & readResult_resp_hit_hit0)
                 & (~(&io_ptw_resp_bits_s2xlate) | ptw_just_back_onlyS2_hit_vmid_hit)
                 & ptw_just_back_vasid_hit) & io_ptw_resp_valid
        & req_in_s2xlate_0 == io_ptw_resp_bits_s2xlate;
      readResult_p_hit_last_REG_1 <=
        (_ptw_just_back_T_12
           ? io_ptw_resp_bits_s1_entry_asid == ((|io_ptw_resp_bits_s2xlate)
                                                  ? io_csr_vsatp_asid
                                                  : io_csr_satp_asid)
             & (~(|io_ptw_resp_bits_s2xlate) | _ptw_just_back_noS2_hit_vmid_hit_T_1)
             & (_ptw_just_back_noS2_hit_T_16
                  ? io_ptw_resp_bits_s1_entry_tag[5:0] == io_requestor_1_req_bits_vaddr[20:15]
                    & readResult_resp_hit_noS2_hit_hit1_1
                    & readResult_resp_hit_noS2_hit_hit0_1
                  : (~_ptw_just_back_noS2_hit_T_19 | readResult_resp_hit_noS2_hit_hit1_1)
                    & readResult_resp_hit_noS2_hit_hit0_1)
             & _GEN_1[io_requestor_1_req_bits_vaddr[14:12]]
           : _ptw_just_back_T_13
               ? ptw_just_back_onlyS2_hit_vmid_hit
                 & (_ptw_just_back_onlyS2_hit_T_7
                      ? io_ptw_resp_bits_s2_entry_tag[8:0] == io_requestor_1_req_bits_vaddr[20:12]
                        & readResult_resp_hit_onlyS2_hit_hit1_1
                        & readResult_resp_hit_onlyS2_hit_hit0_1
                      : (~_ptw_just_back_onlyS2_hit_T_10
                         | readResult_resp_hit_onlyS2_hit_hit1_1)
                        & readResult_resp_hit_onlyS2_hit_hit0_1)
               : (readResult_resp_hit_level_1 == 2'h2
                    ? io_requestor_1_req_bits_vaddr[20:12] == {io_ptw_resp_bits_s1_entry_tag[5:0],
                                                               io_ptw_resp_bits_s1_addr_low}
                      & readResult_resp_hit_hit1_1 & readResult_resp_hit_hit0_1
                    : (readResult_resp_hit_level_1 != 2'h1 | readResult_resp_hit_hit1_1)
                      & readResult_resp_hit_hit0_1)
                 & (~(&io_ptw_resp_bits_s2xlate) | ptw_just_back_onlyS2_hit_vmid_hit)
                 & ptw_just_back_vasid_hit) & io_ptw_resp_valid
        & req_in_s2xlate_1 == io_ptw_resp_bits_s2xlate;
      ptw_already_back_last_REG <= io_ptw_resp_valid;
      ptw_already_back_last_REG_1 <= io_ptw_resp_valid;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:36];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h25; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        req_out_0_vaddr = {_RANDOM[6'h0], _RANDOM[6'h1][8:0]};
        req_out_0_hyperinst = _RANDOM[6'h1][12];
        req_out_0_debug_robIdx_flag = _RANDOM[6'h5][0];
        req_out_0_debug_robIdx_value = _RANDOM[6'h5][8:1];
        req_out_1_vaddr = {_RANDOM[6'h5][31:10], _RANDOM[6'h6][18:0]};
        req_out_1_hyperinst = _RANDOM[6'h6][22];
        req_out_1_debug_robIdx_flag = _RANDOM[6'hA][10];
        req_out_1_debug_robIdx_value = _RANDOM[6'hA][18:11];
        req_out_v_0 = _RANDOM[6'hA][20];
        req_out_v_1 = _RANDOM[6'hA][21];
        virt_out_0 = _RANDOM[6'hA][22];
        virt_out_1 = _RANDOM[6'hA][23];
        need_gpa = _RANDOM[6'hA][24];
        need_gpa_robidx_flag = _RANDOM[6'hA][25];
        need_gpa_robidx_value = {_RANDOM[6'hA][31:26], _RANDOM[6'hB][1:0]};
        need_gpa_vpn = _RANDOM[6'hB][30:2];
        need_gpa_gvpn = {_RANDOM[6'hB][31], _RANDOM[6'hC][27:0]};
        resp_gpa_refill = _RANDOM[6'hC][28];
        readResult_p_hit_last_REG = _RANDOM[6'hD][19];
        readResult_p_ppn = {_RANDOM[6'hD][31:20], _RANDOM[6'hE][16:0]};
        readResult_p_perm_pf = _RANDOM[6'hE][17];
        readResult_p_perm_af = _RANDOM[6'hE][18];
        readResult_p_perm_d = _RANDOM[6'hE][19];
        readResult_p_perm_a = _RANDOM[6'hE][20];
        readResult_p_perm_u = _RANDOM[6'hE][22];
        readResult_p_perm_w = _RANDOM[6'hE][24];
        readResult_p_gvpn = {_RANDOM[6'hE][31:26], _RANDOM[6'hF][22:0]};
        readResult_p_g_perm_pf = _RANDOM[6'hF][23];
        readResult_p_g_perm_af = _RANDOM[6'hF][24];
        readResult_p_g_perm_d = _RANDOM[6'hF][25];
        readResult_p_g_perm_a = _RANDOM[6'hF][26];
        readResult_p_g_perm_w = _RANDOM[6'hF][30];
        readResult_p_s2xlate = _RANDOM[6'h10][1:0];
        readResult_p_hit_last_REG_1 = _RANDOM[6'h11][11];
        readResult_p_ppn_1 = {_RANDOM[6'h11][31:12], _RANDOM[6'h12][8:0]};
        readResult_p_perm_1_pf = _RANDOM[6'h12][9];
        readResult_p_perm_1_af = _RANDOM[6'h12][10];
        readResult_p_perm_1_d = _RANDOM[6'h12][11];
        readResult_p_perm_1_a = _RANDOM[6'h12][12];
        readResult_p_perm_1_u = _RANDOM[6'h12][14];
        readResult_p_perm_1_w = _RANDOM[6'h12][16];
        readResult_p_gvpn_1 = {_RANDOM[6'h12][31:18], _RANDOM[6'h13][14:0]};
        readResult_p_g_perm_1_pf = _RANDOM[6'h13][15];
        readResult_p_g_perm_1_af = _RANDOM[6'h13][16];
        readResult_p_g_perm_1_d = _RANDOM[6'h13][17];
        readResult_p_g_perm_1_a = _RANDOM[6'h13][18];
        readResult_p_g_perm_1_w = _RANDOM[6'h13][22];
        readResult_p_s2xlate_1 = _RANDOM[6'h13][25:24];
        ptw_resp_bits_reg_s2xlate = _RANDOM[6'h15][6:5];
        ptw_resp_bits_reg_s1_entry_tag = {_RANDOM[6'h15][31:7], _RANDOM[6'h16][0]};
        ptw_resp_bits_reg_s1_entry_asid = _RANDOM[6'h16][16:1];
        ptw_resp_bits_reg_s1_entry_vmid = _RANDOM[6'h16][30:17];
        ptw_resp_bits_reg_s1_entry_level = _RANDOM[6'h17][7:6];
        ptw_resp_bits_reg_s1_addr_low = _RANDOM[6'h18][6:4];
        ptw_resp_bits_reg_s1_valididx_0 = _RANDOM[6'h18][31];
        ptw_resp_bits_reg_s1_valididx_1 = _RANDOM[6'h19][0];
        ptw_resp_bits_reg_s1_valididx_2 = _RANDOM[6'h19][1];
        ptw_resp_bits_reg_s1_valididx_3 = _RANDOM[6'h19][2];
        ptw_resp_bits_reg_s1_valididx_4 = _RANDOM[6'h19][3];
        ptw_resp_bits_reg_s1_valididx_5 = _RANDOM[6'h19][4];
        ptw_resp_bits_reg_s1_valididx_6 = _RANDOM[6'h19][5];
        ptw_resp_bits_reg_s1_valididx_7 = _RANDOM[6'h19][6];
        ptw_resp_bits_reg_s2_entry_tag = {_RANDOM[6'h19][31:17], _RANDOM[6'h1A][13:0]};
        ptw_resp_bits_reg_s2_entry_vmid = {_RANDOM[6'h1A][31:30], _RANDOM[6'h1B][11:0]};
        ptw_resp_bits_reg_s2_entry_level = _RANDOM[6'h1C][12:11];
        ptw_already_back_last_REG = _RANDOM[6'h1C][27];
        ptw_resp_bits_reg_1_s2xlate = _RANDOM[6'h1C][30:29];
        ptw_resp_bits_reg_1_s1_entry_tag = {_RANDOM[6'h1C][31], _RANDOM[6'h1D][24:0]};
        ptw_resp_bits_reg_1_s1_entry_asid = {_RANDOM[6'h1D][31:25], _RANDOM[6'h1E][8:0]};
        ptw_resp_bits_reg_1_s1_entry_vmid = _RANDOM[6'h1E][22:9];
        ptw_resp_bits_reg_1_s1_entry_level = _RANDOM[6'h1E][31:30];
        ptw_resp_bits_reg_1_s1_addr_low = _RANDOM[6'h1F][30:28];
        ptw_resp_bits_reg_1_s1_valididx_0 = _RANDOM[6'h20][23];
        ptw_resp_bits_reg_1_s1_valididx_1 = _RANDOM[6'h20][24];
        ptw_resp_bits_reg_1_s1_valididx_2 = _RANDOM[6'h20][25];
        ptw_resp_bits_reg_1_s1_valididx_3 = _RANDOM[6'h20][26];
        ptw_resp_bits_reg_1_s1_valididx_4 = _RANDOM[6'h20][27];
        ptw_resp_bits_reg_1_s1_valididx_5 = _RANDOM[6'h20][28];
        ptw_resp_bits_reg_1_s1_valididx_6 = _RANDOM[6'h20][29];
        ptw_resp_bits_reg_1_s1_valididx_7 = _RANDOM[6'h20][30];
        ptw_resp_bits_reg_1_s2_entry_tag = {_RANDOM[6'h21][31:9], _RANDOM[6'h22][5:0]};
        ptw_resp_bits_reg_1_s2_entry_vmid = {_RANDOM[6'h22][31:22], _RANDOM[6'h23][3:0]};
        ptw_resp_bits_reg_1_s2_entry_level = _RANDOM[6'h24][4:3];
        ptw_already_back_last_REG_1 = _RANDOM[6'h24][19];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        req_out_v_0 = 1'h0;
        req_out_v_1 = 1'h0;
        need_gpa = 1'h0;
        resp_gpa_refill = 1'h0;
        readResult_p_hit_last_REG = 1'h0;
        readResult_p_hit_last_REG_1 = 1'h0;
        ptw_already_back_last_REG = 1'h0;
        ptw_already_back_last_REG_1 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DelayN_9 sfence_delay (
    .clock                 (clock),
    .io_in_valid           (io_sfence_valid),
    .io_in_bits_rs1        (io_sfence_bits_rs1),
    .io_in_bits_rs2        (io_sfence_bits_rs2),
    .io_in_bits_addr       (io_sfence_bits_addr),
    .io_in_bits_id         (io_sfence_bits_id),
    .io_in_bits_flushPipe  (io_sfence_bits_flushPipe),
    .io_in_bits_hv         (io_sfence_bits_hv),
    .io_in_bits_hg         (io_sfence_bits_hg),
    .io_out_valid          (_sfence_delay_io_out_valid),
    .io_out_bits_rs1       (_sfence_delay_io_out_bits_rs1),
    .io_out_bits_rs2       (_sfence_delay_io_out_bits_rs2),
    .io_out_bits_addr      (_sfence_delay_io_out_bits_addr),
    .io_out_bits_id        (_sfence_delay_io_out_bits_id),
    .io_out_bits_flushPipe (/* unused */),
    .io_out_bits_hv        (_sfence_delay_io_out_bits_hv),
    .io_out_bits_hg        (_sfence_delay_io_out_bits_hg)
  );
  DelayN_10 satp_delay (
    .clock       (clock),
    .io_in_mode  (io_csr_satp_mode),
    .io_in_asid  (io_csr_satp_asid),
    .io_out_mode (_satp_delay_io_out_mode),
    .io_out_asid (_satp_delay_io_out_asid)
  );
  DelayN_10 vsatp_delay (
    .clock       (clock),
    .io_in_mode  (io_csr_vsatp_mode),
    .io_in_asid  (io_csr_vsatp_asid),
    .io_out_mode (_vsatp_delay_io_out_mode),
    .io_out_asid (/* unused */)
  );
  DelayN_10 hgatp_delay (
    .clock       (clock),
    .io_in_mode  (io_csr_hgatp_mode),
    .io_in_asid  (io_csr_hgatp_asid),
    .io_out_mode (_hgatp_delay_io_out_mode),
    .io_out_asid (/* unused */)
  );
  DelayN_1 flush_mmu_delay (
    .clock  (clock),
    .io_in
      (_sfence_delay_io_out_valid | io_csr_satp_changed | io_csr_vsatp_changed
       | io_csr_hgatp_changed),
    .io_out (_flush_mmu_delay_io_out)
  );
  TlbStorageWrapper_2 entries (
    .clock                          (clock),
    .reset                          (reset),
    .io_sfence_valid                (_sfence_delay_io_out_valid),
    .io_sfence_bits_rs1             (_sfence_delay_io_out_bits_rs1),
    .io_sfence_bits_rs2             (_sfence_delay_io_out_bits_rs2),
    .io_sfence_bits_addr            (_sfence_delay_io_out_bits_addr),
    .io_sfence_bits_id              (_sfence_delay_io_out_bits_id),
    .io_sfence_bits_hv              (_sfence_delay_io_out_bits_hv),
    .io_sfence_bits_hg              (_sfence_delay_io_out_bits_hg),
    .io_csr_satp_asid               (_satp_delay_io_out_asid),
    .io_csr_vsatp_asid              (io_csr_vsatp_asid),
    .io_csr_hgatp_asid              (io_csr_hgatp_asid),
    .io_csr_priv_virt               (io_csr_priv_virt),
    .io_r_req_0_valid               (io_requestor_0_req_valid),
    .io_r_req_0_bits_vpn            (io_requestor_0_req_bits_vaddr[40:12]),
    .io_r_req_0_bits_s2xlate        (req_in_s2xlate_0),
    .io_r_req_1_valid               (io_requestor_1_req_valid),
    .io_r_req_1_bits_vpn            (io_requestor_1_req_bits_vaddr[40:12]),
    .io_r_req_1_bits_s2xlate        (req_in_s2xlate_1),
    .io_r_resp_0_bits_hit           (_entries_io_r_resp_0_bits_hit),
    .io_r_resp_0_bits_ppn_0         (_entries_io_r_resp_0_bits_ppn_0),
    .io_r_resp_0_bits_perm_0_pf     (_entries_io_r_resp_0_bits_perm_0_pf),
    .io_r_resp_0_bits_perm_0_af     (_entries_io_r_resp_0_bits_perm_0_af),
    .io_r_resp_0_bits_perm_0_d      (_entries_io_r_resp_0_bits_perm_0_d),
    .io_r_resp_0_bits_perm_0_a      (_entries_io_r_resp_0_bits_perm_0_a),
    .io_r_resp_0_bits_perm_0_u      (_entries_io_r_resp_0_bits_perm_0_u),
    .io_r_resp_0_bits_perm_0_w      (_entries_io_r_resp_0_bits_perm_0_w),
    .io_r_resp_0_bits_g_perm_0_pf   (_entries_io_r_resp_0_bits_g_perm_0_pf),
    .io_r_resp_0_bits_g_perm_0_af   (_entries_io_r_resp_0_bits_g_perm_0_af),
    .io_r_resp_0_bits_g_perm_0_d    (_entries_io_r_resp_0_bits_g_perm_0_d),
    .io_r_resp_0_bits_g_perm_0_a    (_entries_io_r_resp_0_bits_g_perm_0_a),
    .io_r_resp_0_bits_g_perm_0_w    (_entries_io_r_resp_0_bits_g_perm_0_w),
    .io_r_resp_0_bits_s2xlate_0     (_entries_io_r_resp_0_bits_s2xlate_0),
    .io_r_resp_1_bits_hit           (_entries_io_r_resp_1_bits_hit),
    .io_r_resp_1_bits_ppn_0         (_entries_io_r_resp_1_bits_ppn_0),
    .io_r_resp_1_bits_perm_0_pf     (_entries_io_r_resp_1_bits_perm_0_pf),
    .io_r_resp_1_bits_perm_0_af     (_entries_io_r_resp_1_bits_perm_0_af),
    .io_r_resp_1_bits_perm_0_d      (_entries_io_r_resp_1_bits_perm_0_d),
    .io_r_resp_1_bits_perm_0_a      (_entries_io_r_resp_1_bits_perm_0_a),
    .io_r_resp_1_bits_perm_0_u      (_entries_io_r_resp_1_bits_perm_0_u),
    .io_r_resp_1_bits_perm_0_w      (_entries_io_r_resp_1_bits_perm_0_w),
    .io_r_resp_1_bits_g_perm_0_pf   (_entries_io_r_resp_1_bits_g_perm_0_pf),
    .io_r_resp_1_bits_g_perm_0_af   (_entries_io_r_resp_1_bits_g_perm_0_af),
    .io_r_resp_1_bits_g_perm_0_d    (_entries_io_r_resp_1_bits_g_perm_0_d),
    .io_r_resp_1_bits_g_perm_0_a    (_entries_io_r_resp_1_bits_g_perm_0_a),
    .io_r_resp_1_bits_g_perm_0_w    (_entries_io_r_resp_1_bits_g_perm_0_w),
    .io_r_resp_1_bits_s2xlate_0     (_entries_io_r_resp_1_bits_s2xlate_0),
    .io_w_valid
      (io_ptw_resp_valid & ~io_ptw_resp_bits_getGpa & ~_flush_mmu_delay_io_out),
    .io_w_bits_data_s2xlate         (io_ptw_resp_bits_s2xlate),
    .io_w_bits_data_s1_entry_tag    (io_ptw_resp_bits_s1_entry_tag),
    .io_w_bits_data_s1_entry_asid   (io_ptw_resp_bits_s1_entry_asid),
    .io_w_bits_data_s1_entry_vmid   (io_ptw_resp_bits_s1_entry_vmid),
    .io_w_bits_data_s1_entry_perm_d (io_ptw_resp_bits_s1_entry_perm_d),
    .io_w_bits_data_s1_entry_perm_a (io_ptw_resp_bits_s1_entry_perm_a),
    .io_w_bits_data_s1_entry_perm_g (io_ptw_resp_bits_s1_entry_perm_g),
    .io_w_bits_data_s1_entry_perm_u (io_ptw_resp_bits_s1_entry_perm_u),
    .io_w_bits_data_s1_entry_perm_x (io_ptw_resp_bits_s1_entry_perm_x),
    .io_w_bits_data_s1_entry_perm_w (io_ptw_resp_bits_s1_entry_perm_w),
    .io_w_bits_data_s1_entry_perm_r (io_ptw_resp_bits_s1_entry_perm_r),
    .io_w_bits_data_s1_entry_level  (io_ptw_resp_bits_s1_entry_level),
    .io_w_bits_data_s1_entry_ppn    (io_ptw_resp_bits_s1_entry_ppn),
    .io_w_bits_data_s1_ppn_low_0    (io_ptw_resp_bits_s1_ppn_low_0),
    .io_w_bits_data_s1_ppn_low_1    (io_ptw_resp_bits_s1_ppn_low_1),
    .io_w_bits_data_s1_ppn_low_2    (io_ptw_resp_bits_s1_ppn_low_2),
    .io_w_bits_data_s1_ppn_low_3    (io_ptw_resp_bits_s1_ppn_low_3),
    .io_w_bits_data_s1_ppn_low_4    (io_ptw_resp_bits_s1_ppn_low_4),
    .io_w_bits_data_s1_ppn_low_5    (io_ptw_resp_bits_s1_ppn_low_5),
    .io_w_bits_data_s1_ppn_low_6    (io_ptw_resp_bits_s1_ppn_low_6),
    .io_w_bits_data_s1_ppn_low_7    (io_ptw_resp_bits_s1_ppn_low_7),
    .io_w_bits_data_s1_valididx_0   (io_ptw_resp_bits_s1_valididx_0),
    .io_w_bits_data_s1_valididx_1   (io_ptw_resp_bits_s1_valididx_1),
    .io_w_bits_data_s1_valididx_2   (io_ptw_resp_bits_s1_valididx_2),
    .io_w_bits_data_s1_valididx_3   (io_ptw_resp_bits_s1_valididx_3),
    .io_w_bits_data_s1_valididx_4   (io_ptw_resp_bits_s1_valididx_4),
    .io_w_bits_data_s1_valididx_5   (io_ptw_resp_bits_s1_valididx_5),
    .io_w_bits_data_s1_valididx_6   (io_ptw_resp_bits_s1_valididx_6),
    .io_w_bits_data_s1_valididx_7   (io_ptw_resp_bits_s1_valididx_7),
    .io_w_bits_data_s1_pteidx_0     (io_ptw_resp_bits_s1_pteidx_0),
    .io_w_bits_data_s1_pteidx_1     (io_ptw_resp_bits_s1_pteidx_1),
    .io_w_bits_data_s1_pteidx_2     (io_ptw_resp_bits_s1_pteidx_2),
    .io_w_bits_data_s1_pteidx_3     (io_ptw_resp_bits_s1_pteidx_3),
    .io_w_bits_data_s1_pteidx_4     (io_ptw_resp_bits_s1_pteidx_4),
    .io_w_bits_data_s1_pteidx_5     (io_ptw_resp_bits_s1_pteidx_5),
    .io_w_bits_data_s1_pteidx_6     (io_ptw_resp_bits_s1_pteidx_6),
    .io_w_bits_data_s1_pteidx_7     (io_ptw_resp_bits_s1_pteidx_7),
    .io_w_bits_data_s1_pf           (io_ptw_resp_bits_s1_pf),
    .io_w_bits_data_s1_af           (io_ptw_resp_bits_s1_af),
    .io_w_bits_data_s2_entry_tag    (io_ptw_resp_bits_s2_entry_tag),
    .io_w_bits_data_s2_entry_ppn    (io_ptw_resp_bits_s2_entry_ppn),
    .io_w_bits_data_s2_entry_perm_d (io_ptw_resp_bits_s2_entry_perm_d),
    .io_w_bits_data_s2_entry_perm_a (io_ptw_resp_bits_s2_entry_perm_a),
    .io_w_bits_data_s2_entry_perm_g (io_ptw_resp_bits_s2_entry_perm_g),
    .io_w_bits_data_s2_entry_perm_u (io_ptw_resp_bits_s2_entry_perm_u),
    .io_w_bits_data_s2_entry_perm_x (io_ptw_resp_bits_s2_entry_perm_x),
    .io_w_bits_data_s2_entry_perm_w (io_ptw_resp_bits_s2_entry_perm_w),
    .io_w_bits_data_s2_entry_perm_r (io_ptw_resp_bits_s2_entry_perm_r),
    .io_w_bits_data_s2_entry_level  (io_ptw_resp_bits_s2_entry_level),
    .io_w_bits_data_s2_gpf          (io_ptw_resp_bits_s2_gpf),
    .io_w_bits_data_s2_gaf          (io_ptw_resp_bits_s2_gaf)
  );
  assign io_requestor_0_resp_bits_paddr_0 = io_pmp_0_bits_addr_0;
  assign io_requestor_0_resp_bits_gpaddr_0 =
    (readResult_p_hit_last_REG
       ? readResult_p_s2xlate
       : _entries_io_r_resp_0_bits_s2xlate_0) == 2'h2
      ? {5'h0, req_out_0_vaddr[35:0]}
      : {hasGpf_0
           ? (readResult_p_hit_last_REG ? readResult_p_gvpn : need_gpa_gvpn)
           : 29'h0,
         req_out_0_vaddr[11:0]};
  assign io_requestor_0_resp_bits_miss = miss_read_0;
  assign io_requestor_0_resp_bits_excp_0_gpf_st = hasGpf_0;
  assign io_requestor_0_resp_bits_excp_0_pf_st =
    (_stPf_T | _stUpdate_T_2) & s1_valid & ~af;
  assign io_requestor_0_resp_bits_excp_0_af_st = af & (s1_valid | s2_valid);
  assign io_requestor_1_resp_bits_paddr_0 = io_pmp_1_bits_addr_0;
  assign io_requestor_1_resp_bits_gpaddr_0 =
    (readResult_p_hit_last_REG_1
       ? readResult_p_s2xlate_1
       : _entries_io_r_resp_1_bits_s2xlate_0) == 2'h2
      ? {5'h0, req_out_1_vaddr[35:0]}
      : {hasGpf_1
           ? (readResult_p_hit_last_REG_1 ? readResult_p_gvpn_1 : need_gpa_gvpn)
           : 29'h0,
         req_out_1_vaddr[11:0]};
  assign io_requestor_1_resp_bits_miss = miss_read_1;
  assign io_requestor_1_resp_bits_excp_0_gpf_st = hasGpf_1;
  assign io_requestor_1_resp_bits_excp_0_pf_st =
    (_stPf_T_5 | _stUpdate_T_9) & s1_valid_1 & ~af_1;
  assign io_requestor_1_resp_bits_excp_0_af_st = af_1 & (s1_valid_1 | s2_valid_1);
  assign io_ptw_req_0_valid =
    req_out_v_0 & miss_read_0
    & ~(io_ptw_resp_valid & req_s2xlate == io_ptw_resp_bits_s2xlate
        & (_ptw_just_back_T_12
             ? io_ptw_resp_bits_s1_entry_asid == ((|io_ptw_resp_bits_s2xlate)
                                                    ? io_csr_vsatp_asid
                                                    : io_csr_satp_asid)
               & (~(|io_ptw_resp_bits_s2xlate) | _ptw_just_back_noS2_hit_vmid_hit_T_1)
               & (_ptw_just_back_noS2_hit_T_16
                    ? io_ptw_resp_bits_s1_entry_tag[5:0] == req_out_0_vaddr[20:15]
                      & ptw_just_back_noS2_hit_hit1 & ptw_just_back_noS2_hit_hit0
                    : (~_ptw_just_back_noS2_hit_T_19 | ptw_just_back_noS2_hit_hit1)
                      & ptw_just_back_noS2_hit_hit0) & _GEN_1[req_out_0_vaddr[14:12]]
             : _ptw_just_back_T_13
                 ? ptw_just_back_onlyS2_hit_vmid_hit
                   & (_ptw_just_back_onlyS2_hit_T_7
                        ? io_ptw_resp_bits_s2_entry_tag[8:0] == req_out_0_vaddr[20:12]
                          & ptw_just_back_onlyS2_hit_hit1 & ptw_just_back_onlyS2_hit_hit0
                        : (~_ptw_just_back_onlyS2_hit_T_10
                           | ptw_just_back_onlyS2_hit_hit1)
                          & ptw_just_back_onlyS2_hit_hit0)
                 : (ptw_just_back_level == 2'h2
                      ? req_out_0_vaddr[20:12] == {io_ptw_resp_bits_s1_entry_tag[5:0],
                                                   io_ptw_resp_bits_s1_addr_low}
                        & ptw_just_back_hit1 & ptw_just_back_hit0
                      : (ptw_just_back_level != 2'h1 | ptw_just_back_hit1)
                        & ptw_just_back_hit0)
                   & (~(&io_ptw_resp_bits_s2xlate) | ptw_just_back_onlyS2_hit_vmid_hit)
                   & ptw_just_back_vasid_hit) | ptw_already_back_last_REG
        & req_s2xlate == ptw_resp_bits_reg_s2xlate
        & (ptw_resp_bits_reg_s2xlate == 2'h0
             ? ptw_resp_bits_reg_s1_entry_asid == ((|ptw_resp_bits_reg_s2xlate)
                                                     ? io_csr_vsatp_asid
                                                     : io_csr_satp_asid)
               & (~(|ptw_resp_bits_reg_s2xlate)
                  | {2'h0, ptw_resp_bits_reg_s1_entry_vmid} == io_csr_hgatp_asid)
               & (ptw_resp_bits_reg_s1_entry_level == 2'h2
                    ? ptw_resp_bits_reg_s1_entry_tag[5:0] == req_out_0_vaddr[20:15]
                      & ptw_already_back_noS2_hit_hit1 & ptw_already_back_noS2_hit_hit0
                    : (ptw_resp_bits_reg_s1_entry_level != 2'h1
                       | ptw_already_back_noS2_hit_hit1) & ptw_already_back_noS2_hit_hit0)
               & _GEN_8[req_out_0_vaddr[14:12]]
             : ptw_resp_bits_reg_s2xlate == 2'h2
                 ? ptw_already_back_onlyS2_hit_vmid_hit
                   & (ptw_resp_bits_reg_s2_entry_level == 2'h2
                        ? ptw_resp_bits_reg_s2_entry_tag[8:0] == req_out_0_vaddr[20:12]
                          & ptw_already_back_onlyS2_hit_hit1
                          & ptw_already_back_onlyS2_hit_hit0
                        : (ptw_resp_bits_reg_s2_entry_level != 2'h1
                           | ptw_already_back_onlyS2_hit_hit1)
                          & ptw_already_back_onlyS2_hit_hit0)
                 : (ptw_already_back_level == 2'h2
                      ? req_out_0_vaddr[20:12] == {ptw_resp_bits_reg_s1_entry_tag[5:0],
                                                   ptw_resp_bits_reg_s1_addr_low}
                        & ptw_already_back_hit1 & ptw_already_back_hit0
                      : (ptw_already_back_level != 2'h1 | ptw_already_back_hit1)
                        & ptw_already_back_hit0)
                   & (ptw_resp_bits_reg_s2xlate != 2'h3
                      | ptw_already_back_onlyS2_hit_vmid_hit)
                   & ptw_resp_bits_reg_s1_entry_asid == io_csr_vsatp_asid));
  assign io_ptw_req_0_bits_vpn = req_out_0_vaddr[40:12];
  assign io_ptw_req_0_bits_s2xlate = req_s2xlate;
  assign io_ptw_req_0_bits_getGpa = hasGpf_0 & hit_read_0;
  assign io_ptw_req_1_valid =
    req_out_v_1 & miss_read_1
    & ~(io_ptw_resp_valid & req_s2xlate_1 == io_ptw_resp_bits_s2xlate
        & (_ptw_just_back_T_12
             ? io_ptw_resp_bits_s1_entry_asid == ((|io_ptw_resp_bits_s2xlate)
                                                    ? io_csr_vsatp_asid
                                                    : io_csr_satp_asid)
               & (~(|io_ptw_resp_bits_s2xlate) | _ptw_just_back_noS2_hit_vmid_hit_T_1)
               & (_ptw_just_back_noS2_hit_T_16
                    ? io_ptw_resp_bits_s1_entry_tag[5:0] == req_out_1_vaddr[20:15]
                      & ptw_just_back_noS2_hit_hit1_1 & ptw_just_back_noS2_hit_hit0_1
                    : (~_ptw_just_back_noS2_hit_T_19 | ptw_just_back_noS2_hit_hit1_1)
                      & ptw_just_back_noS2_hit_hit0_1) & _GEN_1[req_out_1_vaddr[14:12]]
             : _ptw_just_back_T_13
                 ? ptw_just_back_onlyS2_hit_vmid_hit
                   & (_ptw_just_back_onlyS2_hit_T_7
                        ? io_ptw_resp_bits_s2_entry_tag[8:0] == req_out_1_vaddr[20:12]
                          & ptw_just_back_onlyS2_hit_hit1_1
                          & ptw_just_back_onlyS2_hit_hit0_1
                        : (~_ptw_just_back_onlyS2_hit_T_10
                           | ptw_just_back_onlyS2_hit_hit1_1)
                          & ptw_just_back_onlyS2_hit_hit0_1)
                 : (ptw_just_back_level_1 == 2'h2
                      ? req_out_1_vaddr[20:12] == {io_ptw_resp_bits_s1_entry_tag[5:0],
                                                   io_ptw_resp_bits_s1_addr_low}
                        & ptw_just_back_hit1_1 & ptw_just_back_hit0_1
                      : (ptw_just_back_level_1 != 2'h1 | ptw_just_back_hit1_1)
                        & ptw_just_back_hit0_1)
                   & (~(&io_ptw_resp_bits_s2xlate) | ptw_just_back_onlyS2_hit_vmid_hit)
                   & ptw_just_back_vasid_hit) | ptw_already_back_last_REG_1
        & req_s2xlate_1 == ptw_resp_bits_reg_1_s2xlate
        & (ptw_resp_bits_reg_1_s2xlate == 2'h0
             ? ptw_resp_bits_reg_1_s1_entry_asid == ((|ptw_resp_bits_reg_1_s2xlate)
                                                       ? io_csr_vsatp_asid
                                                       : io_csr_satp_asid)
               & (~(|ptw_resp_bits_reg_1_s2xlate)
                  | {2'h0, ptw_resp_bits_reg_1_s1_entry_vmid} == io_csr_hgatp_asid)
               & (ptw_resp_bits_reg_1_s1_entry_level == 2'h2
                    ? ptw_resp_bits_reg_1_s1_entry_tag[5:0] == req_out_1_vaddr[20:15]
                      & ptw_already_back_noS2_hit_hit1_1
                      & ptw_already_back_noS2_hit_hit0_1
                    : (ptw_resp_bits_reg_1_s1_entry_level != 2'h1
                       | ptw_already_back_noS2_hit_hit1_1)
                      & ptw_already_back_noS2_hit_hit0_1) & _GEN_9[req_out_1_vaddr[14:12]]
             : ptw_resp_bits_reg_1_s2xlate == 2'h2
                 ? ptw_already_back_onlyS2_hit_vmid_hit_1
                   & (ptw_resp_bits_reg_1_s2_entry_level == 2'h2
                        ? ptw_resp_bits_reg_1_s2_entry_tag[8:0] == req_out_1_vaddr[20:12]
                          & ptw_already_back_onlyS2_hit_hit1_1
                          & ptw_already_back_onlyS2_hit_hit0_1
                        : (ptw_resp_bits_reg_1_s2_entry_level != 2'h1
                           | ptw_already_back_onlyS2_hit_hit1_1)
                          & ptw_already_back_onlyS2_hit_hit0_1)
                 : (ptw_already_back_level_1 == 2'h2
                      ? req_out_1_vaddr[20:12] == {ptw_resp_bits_reg_1_s1_entry_tag[5:0],
                                                   ptw_resp_bits_reg_1_s1_addr_low}
                        & ptw_already_back_hit1_1 & ptw_already_back_hit0_1
                      : (ptw_already_back_level_1 != 2'h1 | ptw_already_back_hit1_1)
                        & ptw_already_back_hit0_1)
                   & (ptw_resp_bits_reg_1_s2xlate != 2'h3
                      | ptw_already_back_onlyS2_hit_vmid_hit_1)
                   & ptw_resp_bits_reg_1_s1_entry_asid == io_csr_vsatp_asid));
  assign io_ptw_req_1_bits_vpn = req_out_1_vaddr[40:12];
  assign io_ptw_req_1_bits_s2xlate = req_s2xlate_1;
  assign io_ptw_req_1_bits_getGpa = hasGpf_1 & hit_read_1;
  assign io_pmp_0_valid = req_out_v_0;
  assign io_pmp_0_bits_addr = io_pmp_0_bits_addr_0;
  assign io_pmp_1_valid = req_out_v_1;
  assign io_pmp_1_bits_addr = io_pmp_1_bits_addr_0;
endmodule

